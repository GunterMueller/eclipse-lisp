/* Generated by Eclipse Common Lisp 1.1-HOSTED for howard on circe.
   Monday the twenty-third of November, 1998, 2:04:22 pm CST. */
#include <eclipse.h>

clObject clPLUS_FUNC(clProto), cl1PLUS_FUNC(clProto),
  cl1MINUS_FUNC(clProto), clAppend(clProto), clApply(clProto),
  clAref(clProto), cl_SETF_Aref(clProto),
  clAugmentEnvironment(clProto), clBoundp(clProto), clCadr(clProto),
  clCar(clProto), clCdr(clProto),
  clCharpSimpleBaseString __P((clCharp)), clCheckKeys(clProto),
  clCons(clProto), clDoubleSingleFloat __P((double)), clEq(clProto),
  clError(clProto), clExtraArgs(clProto), clFboundp(clProto),
  cl_SETF_Fdefinition(clProto), clFmakunbound(clProto),
  clFuncall(clProto), clGenerateSetfMethod(clProto), clGensym(clProto),
  cl_SETF_GlobalDeclaration(clProto), clIntern(clProto),
  clKeyArg(clProto), clLast(clProto), clList(clProto),
  clListLength(clProto), clMakeArray(clProto), clMakeKeyword(clProto),
  clMakeSymbols(clProto), clMakunbound(clProto),
  clMissingArgs(clProto), clNconc(clProto), clNot(clProto),
  clNth(clProto), clNthcdr(clProto), clNull(clProto), clOddp(clProto),
  clPkg(clProto), clRplaca(clProto), clRplacd(clProto), clSet(clProto),
  clSetExclusiveOr(clProto), cl_SETF_SetfExpander(clProto),
  clSpecialOperatorP(clProto), clSymbolFunction(clProto),
  cl_SETF_SymbolFunction(clProto), clTruncate(clProto),
  clUnion(clProto), clValues(clProto);

extern clObject clampersandKEY, clBLOCK, clCATCH, clCONS, clDECLARE,
  clDOUBLE_FLOAT, clEQ, clIF, clIGNORABLE, clINTEGER, clLABELS,
  clLAMBDA, clLET, clLETstar, clLOCALLY, clMACROLET,
  clMULTIPLE_VALUE_CALL, clMULTIPLE_VALUE_PROG1, clNOTINLINE,
  clOTHERWISE, clPROGN, clPROGV, clQUOTE, clRETURN_FROM, clRPLACA,
  clSEQUENCE, clSETQ, clSINGLE_FLOAT, clSPECIAL, clSYMBOL_MACROLET,
  clTHROW, clstarBARstar, clstarFOOstar, clstarXYstar, clplussymbol,
  cl1plussymbol, clequalsymbol, clA, clADD, clADDER, clALPHA, clAND,
  clAPPENDF, clAPPLY, clAPPLY_BOUND_SYMBOL, clAPPLY_FUNCTION,
  clAPPLY_KEYS, clAPPLY_NULL_ARGS, clAPPLY_SYMBOL, clAPPLY_SYMBOL2,
  clAUGMENT_ENVIRONMENT, clB, clBAR, clBINDING_ORDER,
  clBINDING_ORDERstar, clBINDINGS, clBINDINGSstar, clBLOCK_AS_RETURN,
  clBLOCK_BREAKS_UP_CATCHERS, clBLOCK_BREAKS_UP_CATCHERS2,
  clBLOCK_LABELS_NOT_DYNAMIC, clBOUNDP, clBOX, clBQ_LIST,
  clBQ_LISTstar, clBQ_QUOTE, clC, clCADR, clCALL_ARGUMENTS_LIMIT,
  clCALL_ARGUMENTS_LIMIT_WORKS, clCAR, clCASE, clCASE_NORMAL,
  clCASE_OTHERWISE, clCASE_T, clCDR, clCLOSURE_BINDINGS,
  clCLOSURE_BINDINGS2, clCOND, clCOND_NONE, clCOND_NORMAL,
  clCOND_VALUES, clD, clD1, clD2, clDECF, clDEFINE_MODIFY_MACRO,
  clDEFINE_SETF_EXPANDER, clDEFSETF_SHORT, clDEFUN_CLOSURE, clE,
  clEMPTY_BINDINGS, clEMPTY_BINDINGSstar, clEMPTY_BLOCK, clEMPTY_CASE,
  clEMPTY_CASE_CLAUSE, clEMPTY_COND, clEMPTY_COND_CLAUSE,
  clEMPTY_COND_CLAUSE_VALUES, clEMPTY_LET, clEMPTY_LETstar,
  clEMPTY_PROGV, clEMPTY_PSETQ, clEMPTY_SEQUENCE, clEMPTY_SETQ, clEND,
  clENV, clEQ_NUMBER, clERROR, clEXAMPLE_SUBSEQ, clEXTRA_PROGV_VALUES,
  clF, clF2, clFALSE_IF, clFBOUNDP, clFDEFINITION, clFDEFINITION_SETF,
  clFDEFINITION_SIMPLE, clFLET, clFMAKUNBOUND, clFOO, clFOO2,
  clFUNCALL, clFUNCALL_BOUND_SYMBOL, clFUNCALL_FUNCTION,
  clFUNCALL_KEYS, clFUNCALL_NULL_ARGS, clFUNCALL_SYMBOL,
  clFUNCALL_SYMBOL2, clFUNCTION, clFUNS, clG, clGET_SETF_EXPANSION,
  clGLOBAL_VARIABLE, clGOODY, clHELLO, clHI, clINCF, clLAST, clLASTGUY,
  clLASTGUY_SYMBOL, clLIST, clLIST_SPECIALS, clLOCAL_ACROSS_FBOUNDARY,
  clLOCAL_ASSIGNMENT_ACROSS_FBOUNDARY, clLOCAL_BLOCK,
  clLOCAL_SEQUENTIAL_ASSIGNMENT, clLOCAL_SETQ_ORDER,
  clLOCAL_SETQ_SYMBOL_MACRO, clLOCAL_SIMPLE_SETQ, clLOSER,
  clMAKUNBOUND, clMANY_PARAMETERS, clMIDDLEGUY, clMIDDLEGUY_SYMBOL,
  clMISSING_INITS, clMISSING_INITSstar, clMISSING_PROGV_VALUES,
  clMIXED_BINDING_ORDER, clMIXED_BINDING_ORDERstar,
  clMIXED_BINDING_ORDER2, clMIXED_BINDING_ORDER2star, clN,
  clNESTED_AND_EMPTY_LETS, clNESTED_AND_EMPTY_LETSstar,
  clNESTED_INNER_LOCAL_BLOCK, clNESTED_INNER_NONLOCAL_BLOCK,
  clNESTED_OUTER_DOUBLE_NONLOCAL_BLOCK, clNESTED_OUTER_LOCAL_BLOCK,
  clNESTED_OUTER_NONLOCAL_BLOCK, clNEW, clNEW_INCF, clNEW_SEQUENCE,
  clNO_PROGV_BINDINGS, clNONLOCAL_BLOCK,
  clNONLOCAL_RETURN_FROM_THROW_MVC, clNORMALLY_EXITED_BLOCK, clNOT,
  clNTH, clNULL, clODDP, clONE, clPOLLYANNA, clPROG1, clPROG1A,
  clPROG1B, clPROG2, clPSETF, clPSETQ, clPSETQ_SWAP,
  clPSETQ_SYMBOL_MACRO, clREPLACE, clREPORT_PROGV_SPECIALS, clRETURN,
  clRETURN_FROM_MVC, clRETURN_FROM_MVC_CAPTURED_MVP,
  clRETURN_FROM_MVC_EXIT, clRETURN_FROM_MVC_MVC, clRETURN_FROM_MVC_MVP,
  clRETURN_FROM_MVC_MVP_CAPTURED, clRETURN_FROM_THROW,
  clRETURN_FROM_THROW_MVC, clRETURNER, clROTATEF, clSEQUENCE_ORDER,
  clSET, clSET_EXCLUSIVE_OR, clSET_MIDDLEGUY, clSET_XY, clSETF,
  clSETF_EMPTY, clSETF_LOCALS, clSETF_LONG, clSETF_LONG_ENV,
  clSETF_THE, clSHIFTF, clSHOULD_BE_CLEAR, clSILLY,
  clSOME_IDENTITY_FUNCTION, clSOMETHING, clSPECIAL_BINDING,
  clSPECIAL_BINDINGstar, clSPECIAL_BINDING_ORDER,
  clSPECIAL_BINDING_ORDERstar, clSPECIAL_BINDING2,
  clSPECIAL_BINDING2star, clSPECIAL_OPERATOR_P, clSPECIAL_OPERATOR_P1,
  clSPECIAL_OPERATOR_P2, clSPECIAL_OPERATOR_P3,
  clSPECIAL_SEQUENTIAL_ASSIGNMENT, clSPECIAL_SETQ_ORDER,
  clSPECIAL_SETQ_SYMBOL_MACRO, clSPECIAL_SIMPLE_SETQ, clSTART, clSTORE,
  clSTRINGequal, clSTUFF, clSUBT, clSWAP_SYMBOL_VALUES,
  clSYMBOL_FUNCTION, clSYMBOL_VALUE, clTEMP, clTHE, clTHERE, clTRASH,
  clTROUBLE, clTRUE_IF, clTST_APPLY_BOUND_SYMBOL, clTST_APPLY_FUNCTION,
  clTST_APPLY_KEYS, clTST_APPLY_NULL_ARGS, clTST_APPLY_SYMBOL,
  clTST_APPLY_SYMBOL2, clTST_BINDING_ORDER, clTST_BINDING_ORDERstar,
  clTST_BINDINGS, clTST_BINDINGSstar, clTST_BLOCK_AS_RETURN,
  clTST_BLOCK_BREAKS_UP_CATCHERS, clTST_BLOCK_BREAKS_UP_CATCHERS2,
  clTST_BLOCK_LABELS_NOT_DYNAMIC, clTST_BOUNDP,
  clTST_CALL_ARGUMENTS_LIMIT, clTST_CALL_ARGUMENTS_LIMIT_WORKS,
  clTST_CASE_NORMAL, clTST_CASE_OTHERWISE, clTST_CASE_T,
  clTST_CLOSURE_BINDINGS, clTST_CLOSURE_BINDINGS2, clTST_COND_NONE,
  clTST_COND_NORMAL, clTST_COND_VALUES, clTST_DEFINE_MODIFY_MACRO,
  clTST_DEFINE_SETF_EXPANDER, clTST_DEFSETF_SHORT, clTST_DEFUN_CLOSURE,
  clTST_EMPTY_BINDINGS, clTST_EMPTY_BINDINGSstar, clTST_EMPTY_BLOCK,
  clTST_EMPTY_CASE, clTST_EMPTY_CASE_CLAUSE, clTST_EMPTY_COND,
  clTST_EMPTY_COND_CLAUSE, clTST_EMPTY_COND_CLAUSE_VALUES,
  clTST_EMPTY_LET, clTST_EMPTY_LETstar, clTST_EMPTY_PROGV,
  clTST_EMPTY_PSETQ, clTST_EMPTY_SEQUENCE, clTST_EMPTY_SETQ,
  clTST_EXTRA_PROGV_VALUES, clTST_FALSE_IF, clTST_FBOUNDP,
  clTST_FDEFINITION_SETF, clTST_FDEFINITION_SIMPLE, clTST_FLET,
  clTST_FUNCALL_BOUND_SYMBOL, clTST_FUNCALL_FUNCTION,
  clTST_FUNCALL_KEYS, clTST_FUNCALL_NULL_ARGS, clTST_FUNCALL_SYMBOL,
  clTST_FUNCALL_SYMBOL2, clTST_LABELS, clTST_LOCAL_ACROSS_FBOUNDARY,
  clTST_LOCAL_ASSIGNMENT_ACROSS_FBOUNDARY, clTST_LOCAL_BLOCK,
  clTST_LOCAL_SEQUENTIAL_ASSIGNMENT, clTST_LOCAL_SETQ_ORDER,
  clTST_LOCAL_SETQ_SYMBOL_MACRO, clTST_LOCAL_SIMPLE_SETQ,
  clTST_MACROLET, clTST_MISSING_INITS, clTST_MISSING_INITSstar,
  clTST_MISSING_PROGV_VALUES, clTST_MIXED_BINDING_ORDER,
  clTST_MIXED_BINDING_ORDERstar, clTST_MIXED_BINDING_ORDER2,
  clTST_MIXED_BINDING_ORDER2star, clTST_NESTED_AND_EMPTY_LETS,
  clTST_NESTED_AND_EMPTY_LETSstar, clTST_NESTED_INNER_LOCAL_BLOCK,
  clTST_NESTED_INNER_NONLOCAL_BLOCK,
  clTST_NESTED_OUTER_DOUBLE_NONLOCAL_BLOCK,
  clTST_NESTED_OUTER_LOCAL_BLOCK, clTST_NESTED_OUTER_NONLOCAL_BLOCK,
  clTST_NO_PROGV_BINDINGS, clTST_NONLOCAL_BLOCK,
  clTST_NONLOCAL_RETURN_FROM_THROW_MVC, clTST_NORMALLY_EXITED_BLOCK,
  clTST_PROG1, clTST_PROG1A, clTST_PROG1B, clTST_PROG2, clTST_PROGV,
  clTST_PSETF, clTST_PSETQ, clTST_PSETQ_SWAP, clTST_PSETQ_SYMBOL_MACRO,
  clTST_QUOTE, clTST_RETURN, clTST_RETURN_FROM_MVC,
  clTST_RETURN_FROM_MVC_CAPTURED_MVP, clTST_RETURN_FROM_MVC_EXIT,
  clTST_RETURN_FROM_MVC_MVC, clTST_RETURN_FROM_MVC_MVP,
  clTST_RETURN_FROM_MVC_MVP_CAPTURED, clTST_RETURN_FROM_THROW,
  clTST_RETURN_FROM_THROW_MVC, clTST_ROTATEF, clTST_SEQUENCE,
  clTST_SEQUENCE_ORDER, clTST_SET, clTST_SETF_EMPTY, clTST_SETF_LOCALS,
  clTST_SETF_LONG, clTST_SETF_LONG_ENV, clTST_SETF_THE, clTST_SHIFTF,
  clTST_SPECIAL_BINDING, clTST_SPECIAL_BINDINGstar,
  clTST_SPECIAL_BINDING_ORDER, clTST_SPECIAL_BINDING_ORDERstar,
  clTST_SPECIAL_BINDING2, clTST_SPECIAL_BINDING2star,
  clTST_SPECIAL_OPERATOR_P1, clTST_SPECIAL_OPERATOR_P2,
  clTST_SPECIAL_OPERATOR_P3, clTST_SPECIAL_SEQUENTIAL_ASSIGNMENT,
  clTST_SPECIAL_SETQ_ORDER, clTST_SPECIAL_SETQ_SYMBOL_MACRO,
  clTST_SPECIAL_SIMPLE_SETQ, clTST_SYMBOL_FUNCTION,
  clTST_SYMBOL_MACROLET, clTST_SYMBOL_VALUE, clTST_TRUE_IF,
  clTST_TYPECASE_FLOAT, clTST_TYPECASE_INTEGER, clTST_TYPECASE_LIST,
  clTST_TYPECASE_NIL, clTST_TYPECASE_SYMBOL, clTST_UNLESS,
  clTST_UNQUOTED, clTST_UNUSED_MISSING_CONSEQUENT,
  clTST_USED_MISSING_CONSEQUENT, clTST_WHEN, clTWO_FUNS, clTWO_SHOES,
  clTYPECASE_FLOAT, clTYPECASE_INTEGER, clTYPECASE_LIST,
  clTYPECASE_NIL, clTYPECASE_SYMBOL, clTYPECASE_TEST, clTYPEP,
  clUNIONF, clUNLESS, clUNQUOTED, clUNUSED_MISSING_CONSEQUENT,
  clUSED_MISSING_CONSEQUENT, clVALUES, clWHEN, clWW, clX, clXXY, clXY,
  clY, clZ;

static clObject CONS_0, CONS_1, CONS_10, CONS_100, CONS_1000,
  CONS_1001, CONS_1002, CONS_1003, CONS_1004, CONS_1005, CONS_1006,
  CONS_1007, CONS_1008, CONS_1009, CONS_101, CONS_1010, CONS_1011,
  CONS_1012, CONS_1013, CONS_1014, CONS_1015, CONS_1016, CONS_1017,
  CONS_1018, CONS_1019, CONS_102, CONS_1020, CONS_1021, CONS_1022,
  CONS_1023, CONS_1024, CONS_1025, CONS_1026, CONS_1027, CONS_1028,
  CONS_1029, CONS_103, CONS_1030, CONS_1031, CONS_1032, CONS_1033,
  CONS_1034, CONS_1035, CONS_1036, CONS_1037, CONS_1038, CONS_1039,
  CONS_104, CONS_1040, CONS_1041, CONS_1042, CONS_1043, CONS_1044,
  CONS_1045, CONS_1046, CONS_1047, CONS_1048, CONS_1049, CONS_105,
  CONS_1050, CONS_1051, CONS_1052, CONS_1053, CONS_1054, CONS_1055,
  CONS_1056, CONS_1057, CONS_1058, CONS_1059, CONS_106, CONS_1060,
  CONS_1061, CONS_1062, CONS_1063, CONS_1064, CONS_1065, CONS_1066,
  CONS_1067, CONS_1068, CONS_1069, CONS_107, CONS_1070, CONS_1071,
  CONS_1072, CONS_1073, CONS_1074, CONS_1075, CONS_1076, CONS_1077,
  CONS_1078, CONS_1079, CONS_108, CONS_1080, CONS_1081, CONS_1082,
  CONS_1083, CONS_1084, CONS_1085, CONS_1086, CONS_1087, CONS_1088,
  CONS_1089, CONS_109, CONS_1090, CONS_1091, CONS_1092, CONS_1093,
  CONS_1094, CONS_1095, CONS_1096, CONS_1097, CONS_1098, CONS_1099,
  CONS_11, CONS_110, CONS_1100, CONS_1101, CONS_1102, CONS_1103,
  CONS_1104, CONS_1105, CONS_1106, CONS_1107, CONS_1108, CONS_1109,
  CONS_111, CONS_1110, CONS_1111, CONS_1112, CONS_1113, CONS_1114,
  CONS_1115, CONS_1116, CONS_1117, CONS_1118, CONS_1119, CONS_112,
  CONS_1120, CONS_1121, CONS_1122, CONS_1123, CONS_1124, CONS_1125,
  CONS_1126, CONS_1127, CONS_1128, CONS_1129, CONS_113, CONS_1130,
  CONS_1131, CONS_1132, CONS_1133, CONS_1134, CONS_1135, CONS_1136,
  CONS_1137, CONS_1138, CONS_1139, CONS_114, CONS_1140, CONS_1141,
  CONS_1142, CONS_1143, CONS_1144, CONS_1145, CONS_1146, CONS_1147,
  CONS_1148, CONS_1149, CONS_115, CONS_1150, CONS_1151, CONS_1152,
  CONS_1153, CONS_1154, CONS_1155, CONS_1156, CONS_1157, CONS_1158,
  CONS_1159, CONS_116, CONS_1160, CONS_1161, CONS_1162, CONS_1163,
  CONS_1164, CONS_1165, CONS_1166, CONS_1167, CONS_1168, CONS_1169,
  CONS_117, CONS_1170, CONS_1171, CONS_1172, CONS_1173, CONS_1174,
  CONS_1175, CONS_1176, CONS_1177, CONS_1178, CONS_1179, CONS_118,
  CONS_1180, CONS_1181, CONS_1182, CONS_1183, CONS_1184, CONS_1185,
  CONS_1186, CONS_1187, CONS_1188, CONS_1189, CONS_119, CONS_1190,
  CONS_1191, CONS_1192, CONS_1193, CONS_1194, CONS_1195, CONS_1196,
  CONS_1197, CONS_1198, CONS_1199, CONS_12, CONS_120, CONS_1200,
  CONS_1201, CONS_1202, CONS_1203, CONS_1204, CONS_1205, CONS_1206,
  CONS_1207, CONS_1208, CONS_1209, CONS_121, CONS_1210, CONS_1211,
  CONS_1212, CONS_1213, CONS_1214, CONS_1215, CONS_1216, CONS_1217,
  CONS_1218, CONS_1219, CONS_122, CONS_1220, CONS_1221, CONS_1222,
  CONS_1223, CONS_1224, CONS_1225, CONS_1226, CONS_1227, CONS_1228,
  CONS_1229, CONS_123, CONS_1230, CONS_1231, CONS_1232, CONS_1233,
  CONS_1234, CONS_1235, CONS_1236, CONS_1237, CONS_1238, CONS_1239,
  CONS_124, CONS_1240, CONS_1241, CONS_1242, CONS_1243, CONS_1244,
  CONS_1245, CONS_1246, CONS_1247, CONS_1248, CONS_1249, CONS_125,
  CONS_1250, CONS_1251, CONS_1252, CONS_1253, CONS_1254, CONS_1255,
  CONS_1256, CONS_1257, CONS_1258, CONS_1259, CONS_126, CONS_1260,
  CONS_1261, CONS_1262, CONS_1263, CONS_1264, CONS_1265, CONS_1266,
  CONS_1267, CONS_1268, CONS_1269, CONS_127, CONS_1270, CONS_1271,
  CONS_1272, CONS_1273, CONS_1274, CONS_1275, CONS_1276, CONS_1277,
  CONS_1278, CONS_1279, CONS_128, CONS_1280, CONS_1281, CONS_1282,
  CONS_1283, CONS_1284, CONS_1285, CONS_1286, CONS_1287, CONS_1288,
  CONS_1289, CONS_129, CONS_1290, CONS_1291, CONS_1292, CONS_1293,
  CONS_1294, CONS_1295, CONS_1296, CONS_1297, CONS_1298, CONS_1299,
  CONS_13, CONS_130, CONS_1300, CONS_1301, CONS_1302, CONS_1303,
  CONS_1304, CONS_1305, CONS_1306, CONS_1307, CONS_1308, CONS_1309,
  CONS_131, CONS_1310, CONS_1311, CONS_1312, CONS_1313, CONS_1314,
  CONS_1315, CONS_1316, CONS_1317, CONS_1318, CONS_1319, CONS_132,
  CONS_1320, CONS_1321, CONS_1322, CONS_1323, CONS_1324, CONS_1325,
  CONS_1326, CONS_1327, CONS_1328, CONS_1329, CONS_133, CONS_1330,
  CONS_1331, CONS_1332, CONS_1333, CONS_1334, CONS_1335, CONS_1336,
  CONS_1337, CONS_1338, CONS_1339, CONS_134, CONS_1340, CONS_1341,
  CONS_1342, CONS_1343, CONS_1344, CONS_1345, CONS_1346, CONS_1347,
  CONS_1348, CONS_1349, CONS_135, CONS_1350, CONS_1351, CONS_1352,
  CONS_1353, CONS_1354, CONS_1355, CONS_1356, CONS_1357, CONS_1358,
  CONS_1359, CONS_136, CONS_1360, CONS_1361, CONS_1362, CONS_1363,
  CONS_1364, CONS_1365, CONS_1366, CONS_1367, CONS_1368, CONS_1369,
  CONS_137, CONS_1370, CONS_1371, CONS_1372, CONS_1373, CONS_1374,
  CONS_1375, CONS_1376, CONS_1377, CONS_1378, CONS_1379, CONS_138,
  CONS_1380, CONS_1381, CONS_1382, CONS_1383, CONS_1384, CONS_1385,
  CONS_1386, CONS_1387, CONS_1388, CONS_1389, CONS_139, CONS_1390,
  CONS_1391, CONS_1392, CONS_1393, CONS_1394, CONS_1395, CONS_1396,
  CONS_1397, CONS_1398, CONS_1399, CONS_14, CONS_140, CONS_1400,
  CONS_1401, CONS_1402, CONS_1403, CONS_1404, CONS_1405, CONS_1406,
  CONS_1407, CONS_1408, CONS_1409, CONS_141, CONS_1410, CONS_1411,
  CONS_1412, CONS_1413, CONS_1414, CONS_1415, CONS_1416, CONS_1417,
  CONS_1418, CONS_1419, CONS_142, CONS_1420, CONS_1421, CONS_1422,
  CONS_1423, CONS_1424, CONS_1425, CONS_1426, CONS_1427, CONS_1428,
  CONS_1429, CONS_143, CONS_1430, CONS_1431, CONS_1432, CONS_1433,
  CONS_1434, CONS_1435, CONS_1436, CONS_1437, CONS_1438, CONS_1439,
  CONS_144, CONS_1440, CONS_1441, CONS_1442, CONS_1443, CONS_1444,
  CONS_1445, CONS_1446, CONS_1447, CONS_1448, CONS_1449, CONS_145,
  CONS_1450, CONS_1451, CONS_1452, CONS_1453, CONS_1454, CONS_1455,
  CONS_1456, CONS_1457, CONS_1458, CONS_1459, CONS_146, CONS_1460,
  CONS_1461, CONS_1462, CONS_1463, CONS_1464, CONS_1465, CONS_1466,
  CONS_1467, CONS_1468, CONS_1469, CONS_147, CONS_1470, CONS_1471,
  CONS_1472, CONS_1473, CONS_1474, CONS_1475, CONS_1476, CONS_1477,
  CONS_1478, CONS_1479, CONS_148, CONS_1480, CONS_1481, CONS_1482,
  CONS_1483, CONS_1484, CONS_1485, CONS_1486, CONS_1487, CONS_1488,
  CONS_1489, CONS_149, CONS_1490, CONS_1491, CONS_1492, CONS_1493,
  CONS_1494, CONS_1495, CONS_1496, CONS_1497, CONS_1498, CONS_1499,
  CONS_15, CONS_150, CONS_1500, CONS_1501, CONS_1502, CONS_1503,
  CONS_1504, CONS_1505, CONS_1506, CONS_1507, CONS_1508, CONS_1509,
  CONS_151, CONS_1510, CONS_1511, CONS_1512, CONS_1513, CONS_1514,
  CONS_1515, CONS_1516, CONS_1517, CONS_1518, CONS_1519, CONS_152,
  CONS_1520, CONS_1521, CONS_1522, CONS_1523, CONS_1524, CONS_1525,
  CONS_1526, CONS_1527, CONS_1528, CONS_1529, CONS_153, CONS_1530,
  CONS_1531, CONS_1532, CONS_1533, CONS_1534, CONS_1535, CONS_1536,
  CONS_1537, CONS_1538, CONS_1539, CONS_154, CONS_1540, CONS_1541,
  CONS_1542, CONS_1543, CONS_1544, CONS_1545, CONS_1546, CONS_1547,
  CONS_1548, CONS_1549, CONS_155, CONS_1550, CONS_1551, CONS_1552,
  CONS_1553, CONS_1554, CONS_1555, CONS_1556, CONS_1557, CONS_1558,
  CONS_1559, CONS_156, CONS_1560, CONS_1561, CONS_1562, CONS_1563,
  CONS_1564, CONS_1565, CONS_1566, CONS_1567, CONS_1568, CONS_1569,
  CONS_157, CONS_1570, CONS_1571, CONS_1572, CONS_1573, CONS_1574,
  CONS_1575, CONS_1576, CONS_1577, CONS_1578, CONS_1579, CONS_158,
  CONS_1580, CONS_1581, CONS_1582, CONS_1583, CONS_1584, CONS_1585,
  CONS_1586, CONS_1587, CONS_1588, CONS_1589, CONS_159, CONS_1590,
  CONS_1591, CONS_1592, CONS_1593, CONS_1594, CONS_1595, CONS_1596,
  CONS_1597, CONS_1598, CONS_1599, CONS_16, CONS_160, CONS_1600,
  CONS_1601, CONS_1602, CONS_1603, CONS_1604, CONS_1605, CONS_1606,
  CONS_1607, CONS_1608, CONS_1609, CONS_161, CONS_1610, CONS_1611,
  CONS_1612, CONS_1613, CONS_1614, CONS_1615, CONS_1616, CONS_1617,
  CONS_1618, CONS_1619, CONS_162, CONS_1620, CONS_1621, CONS_1622,
  CONS_1623, CONS_1624, CONS_1625, CONS_1626, CONS_1627, CONS_1628,
  CONS_1629, CONS_163, CONS_1630, CONS_1631, CONS_1632, CONS_1633,
  CONS_1634, CONS_1635, CONS_1636, CONS_1637, CONS_1638, CONS_1639,
  CONS_164, CONS_1640, CONS_1641, CONS_1642, CONS_1643, CONS_1644,
  CONS_1645, CONS_1646, CONS_1647, CONS_1648, CONS_1649, CONS_165,
  CONS_1650, CONS_1651, CONS_1652, CONS_1653, CONS_1654, CONS_1655,
  CONS_1656, CONS_1657, CONS_1658, CONS_1659, CONS_166, CONS_1660,
  CONS_1661, CONS_1662, CONS_1663, CONS_1664, CONS_1665, CONS_1666,
  CONS_1667, CONS_1668, CONS_1669, CONS_167, CONS_1670, CONS_1671,
  CONS_1672, CONS_1673, CONS_1674, CONS_1675, CONS_1676, CONS_1677,
  CONS_1678, CONS_1679, CONS_168, CONS_1680, CONS_1681, CONS_1682,
  CONS_1683, CONS_1684, CONS_1685, CONS_1686, CONS_1687, CONS_1688,
  CONS_1689, CONS_169, CONS_1690, CONS_1691, CONS_1692, CONS_1693,
  CONS_1694, CONS_1695, CONS_1696, CONS_1697, CONS_1698, CONS_1699,
  CONS_17, CONS_170, CONS_1700, CONS_1701, CONS_1702, CONS_1703,
  CONS_1704, CONS_1705, CONS_1706, CONS_1707, CONS_1708, CONS_1709,
  CONS_171, CONS_1710, CONS_1711, CONS_1712, CONS_1713, CONS_1714,
  CONS_1715, CONS_1716, CONS_1717, CONS_1718, CONS_1719, CONS_172,
  CONS_1720, CONS_1721, CONS_1722, CONS_1723, CONS_1724, CONS_1725,
  CONS_1726, CONS_1727, CONS_1728, CONS_1729, CONS_173, CONS_1730,
  CONS_1731, CONS_1732, CONS_1733, CONS_1734, CONS_1735, CONS_1736,
  CONS_1737, CONS_1738, CONS_1739, CONS_174, CONS_1740, CONS_1741,
  CONS_1742, CONS_1743, CONS_1744, CONS_1745, CONS_1746, CONS_1747,
  CONS_1748, CONS_1749, CONS_175, CONS_1750, CONS_1751, CONS_1752,
  CONS_1753, CONS_1754, CONS_1755, CONS_1756, CONS_1757, CONS_1758,
  CONS_1759, CONS_176, CONS_1760, CONS_1761, CONS_1762, CONS_1763,
  CONS_1764, CONS_1765, CONS_1766, CONS_1767, CONS_1768, CONS_1769,
  CONS_177, CONS_1770, CONS_1771, CONS_1772, CONS_1773, CONS_1774,
  CONS_1775, CONS_1776, CONS_1777, CONS_1778, CONS_1779, CONS_178,
  CONS_1780, CONS_1781, CONS_1782, CONS_1783, CONS_1784, CONS_1785,
  CONS_1786, CONS_1787, CONS_1788, CONS_1789, CONS_179, CONS_1790,
  CONS_1791, CONS_1792, CONS_1793, CONS_1794, CONS_1795, CONS_1796,
  CONS_1797, CONS_1798, CONS_1799, CONS_18, CONS_180, CONS_1800,
  CONS_1801, CONS_1802, CONS_1803, CONS_1804, CONS_1805, CONS_1806,
  CONS_1807, CONS_1808, CONS_1809, CONS_181, CONS_1810, CONS_1811,
  CONS_1812, CONS_1813, CONS_1814, CONS_1815, CONS_1816, CONS_1817,
  CONS_1818, CONS_1819, CONS_182, CONS_1820, CONS_1821, CONS_1822,
  CONS_1823, CONS_1824, CONS_1825, CONS_1826, CONS_1827, CONS_1828,
  CONS_1829, CONS_183, CONS_1830, CONS_1831, CONS_1832, CONS_1833,
  CONS_1834, CONS_1835, CONS_1836, CONS_1837, CONS_1838, CONS_1839,
  CONS_184, CONS_1840, CONS_1841, CONS_1842, CONS_1843, CONS_1844,
  CONS_1845, CONS_1846, CONS_1847, CONS_1848, CONS_1849, CONS_185,
  CONS_1850, CONS_1851, CONS_1852, CONS_1853, CONS_1854, CONS_1855,
  CONS_1856, CONS_1857, CONS_1858, CONS_1859, CONS_186, CONS_1860,
  CONS_1861, CONS_1862, CONS_1863, CONS_1864, CONS_1865, CONS_1866,
  CONS_1867, CONS_1868, CONS_1869, CONS_187, CONS_1870, CONS_1871,
  CONS_1872, CONS_1873, CONS_1874, CONS_1875, CONS_1876, CONS_1877,
  CONS_1878, CONS_1879, CONS_188, CONS_1880, CONS_1881, CONS_1882,
  CONS_1883, CONS_1884, CONS_1885, CONS_1886, CONS_1887, CONS_1888,
  CONS_1889, CONS_189, CONS_1890, CONS_1891, CONS_1892, CONS_1893,
  CONS_1894, CONS_1895, CONS_1896, CONS_1897, CONS_1898, CONS_1899,
  CONS_19, CONS_190, CONS_1900, CONS_1901, CONS_1902, CONS_1903,
  CONS_1904, CONS_1905, CONS_1906, CONS_1907, CONS_1908, CONS_1909,
  CONS_191, CONS_1910, CONS_1911, CONS_1912, CONS_1913, CONS_1914,
  CONS_1915, CONS_1916, CONS_1917, CONS_1918, CONS_1919, CONS_192,
  CONS_1920, CONS_1921, CONS_1922, CONS_1923, CONS_1924, CONS_1925,
  CONS_1926, CONS_1927, CONS_1928, CONS_1929, CONS_193, CONS_1930,
  CONS_1931, CONS_1932, CONS_1933, CONS_1934, CONS_1935, CONS_1936,
  CONS_1937, CONS_1938, CONS_1939, CONS_194, CONS_1940, CONS_1941,
  CONS_1942, CONS_1943, CONS_1944, CONS_1945, CONS_1946, CONS_1947,
  CONS_1948, CONS_1949, CONS_195, CONS_1950, CONS_1951, CONS_1952,
  CONS_1953, CONS_1954, CONS_1955, CONS_1956, CONS_1957, CONS_1958,
  CONS_1959, CONS_196, CONS_1960, CONS_1961, CONS_1962, CONS_1963,
  CONS_1964, CONS_1965, CONS_1966, CONS_1967, CONS_1968, CONS_1969,
  CONS_197, CONS_1970, CONS_1971, CONS_1972, CONS_1973, CONS_198,
  CONS_199, CONS_2, CONS_20, CONS_200, CONS_201, CONS_202, CONS_203,
  CONS_204, CONS_205, CONS_206, CONS_207, CONS_208, CONS_209, CONS_21,
  CONS_210, CONS_211, CONS_212, CONS_213, CONS_214, CONS_215, CONS_216,
  CONS_217, CONS_218, CONS_219, CONS_22, CONS_220, CONS_221, CONS_222,
  CONS_223, CONS_224, CONS_225, CONS_226, CONS_227, CONS_228, CONS_229,
  CONS_23, CONS_230, CONS_231, CONS_232, CONS_233, CONS_234, CONS_235,
  CONS_236, CONS_237, CONS_238, CONS_239, CONS_24, CONS_240, CONS_241,
  CONS_242, CONS_243, CONS_244, CONS_245, CONS_246, CONS_247, CONS_248,
  CONS_249, CONS_25, CONS_250, CONS_251, CONS_252, CONS_253, CONS_254,
  CONS_255, CONS_256, CONS_257, CONS_258, CONS_259, CONS_26, CONS_260,
  CONS_261, CONS_262, CONS_263, CONS_264, CONS_265, CONS_266, CONS_267,
  CONS_268, CONS_269, CONS_27, CONS_270, CONS_271, CONS_272, CONS_273,
  CONS_274, CONS_275, CONS_276, CONS_277, CONS_278, CONS_279, CONS_28,
  CONS_280, CONS_281, CONS_282, CONS_283, CONS_284, CONS_285, CONS_286,
  CONS_287, CONS_288, CONS_289, CONS_29, CONS_290, CONS_291, CONS_292,
  CONS_293, CONS_294, CONS_295, CONS_296, CONS_297, CONS_298, CONS_299,
  CONS_3, CONS_30, CONS_300, CONS_301, CONS_302, CONS_303, CONS_304,
  CONS_305, CONS_306, CONS_307, CONS_308, CONS_309, CONS_31, CONS_310,
  CONS_311, CONS_312, CONS_313, CONS_314, CONS_315, CONS_316, CONS_317,
  CONS_318, CONS_319, CONS_32, CONS_320, CONS_321, CONS_322, CONS_323,
  CONS_324, CONS_325, CONS_326, CONS_327, CONS_328, CONS_329, CONS_33,
  CONS_330, CONS_331, CONS_332, CONS_333, CONS_334, CONS_335, CONS_336,
  CONS_337, CONS_338, CONS_339, CONS_34, CONS_340, CONS_341, CONS_342,
  CONS_343, CONS_344, CONS_345, CONS_346, CONS_347, CONS_348, CONS_349,
  CONS_35, CONS_350, CONS_351, CONS_352, CONS_353, CONS_354, CONS_355,
  CONS_356, CONS_357, CONS_358, CONS_359, CONS_36, CONS_360, CONS_361,
  CONS_362, CONS_363, CONS_364, CONS_365, CONS_366, CONS_367, CONS_368,
  CONS_369, CONS_37, CONS_370, CONS_371, CONS_372, CONS_373, CONS_374,
  CONS_375, CONS_376, CONS_377, CONS_378, CONS_379, CONS_38, CONS_380,
  CONS_381, CONS_382, CONS_383, CONS_384, CONS_385, CONS_386, CONS_387,
  CONS_388, CONS_389, CONS_39, CONS_390, CONS_391, CONS_392, CONS_393,
  CONS_394, CONS_395, CONS_396, CONS_397, CONS_398, CONS_399, CONS_4,
  CONS_40, CONS_400, CONS_401, CONS_402, CONS_403, CONS_404, CONS_405,
  CONS_406, CONS_407, CONS_408, CONS_409, CONS_41, CONS_410, CONS_411,
  CONS_412, CONS_413, CONS_414, CONS_415, CONS_416, CONS_417, CONS_418,
  CONS_419, CONS_42, CONS_420, CONS_421, CONS_422, CONS_423, CONS_424,
  CONS_425, CONS_426, CONS_427, CONS_428, CONS_429, CONS_43, CONS_430,
  CONS_431, CONS_432, CONS_433, CONS_434, CONS_435, CONS_436, CONS_437,
  CONS_438, CONS_439, CONS_44, CONS_440, CONS_441, CONS_442, CONS_443,
  CONS_444, CONS_445, CONS_446, CONS_447, CONS_448, CONS_449, CONS_45,
  CONS_450, CONS_451, CONS_452, CONS_453, CONS_454, CONS_455, CONS_456,
  CONS_457, CONS_458, CONS_459, CONS_46, CONS_460, CONS_461, CONS_462,
  CONS_463, CONS_464, CONS_465, CONS_466, CONS_467, CONS_468, CONS_469,
  CONS_47, CONS_470, CONS_471, CONS_472, CONS_473, CONS_474, CONS_475,
  CONS_476, CONS_477, CONS_478, CONS_479, CONS_48, CONS_480, CONS_481,
  CONS_482, CONS_483, CONS_484, CONS_485, CONS_486, CONS_487, CONS_488,
  CONS_489, CONS_49, CONS_490, CONS_491, CONS_492, CONS_493, CONS_494,
  CONS_495, CONS_496, CONS_497, CONS_498, CONS_499, CONS_5, CONS_50,
  CONS_500, CONS_501, CONS_502, CONS_503, CONS_504, CONS_505, CONS_506,
  CONS_507, CONS_508, CONS_509, CONS_51, CONS_510, CONS_511, CONS_512,
  CONS_513, CONS_514, CONS_515, CONS_516, CONS_517, CONS_518, CONS_519,
  CONS_52, CONS_520, CONS_521, CONS_522, CONS_523, CONS_524, CONS_525,
  CONS_526, CONS_527, CONS_528, CONS_529, CONS_53, CONS_530, CONS_531,
  CONS_532, CONS_533, CONS_534, CONS_535, CONS_536, CONS_537, CONS_538,
  CONS_539, CONS_54, CONS_540, CONS_541, CONS_542, CONS_543, CONS_544,
  CONS_545, CONS_546, CONS_547, CONS_548, CONS_549, CONS_55, CONS_550,
  CONS_551, CONS_552, CONS_553, CONS_554, CONS_555, CONS_556, CONS_557,
  CONS_558, CONS_559, CONS_56, CONS_560, CONS_561, CONS_562, CONS_563,
  CONS_564, CONS_565, CONS_566, CONS_567, CONS_568, CONS_569, CONS_57,
  CONS_570, CONS_571, CONS_572, CONS_573, CONS_574, CONS_575, CONS_576,
  CONS_577, CONS_578, CONS_579, CONS_58, CONS_580, CONS_581, CONS_582,
  CONS_583, CONS_584, CONS_585, CONS_586, CONS_587, CONS_588, CONS_589,
  CONS_59, CONS_590, CONS_591, CONS_592, CONS_593, CONS_594, CONS_595,
  CONS_596, CONS_597, CONS_598, CONS_599, CONS_6, CONS_60, CONS_600,
  CONS_601, CONS_602, CONS_603, CONS_604, CONS_605, CONS_606, CONS_607,
  CONS_608, CONS_609, CONS_61, CONS_610, CONS_611, CONS_612, CONS_613,
  CONS_614, CONS_615, CONS_616, CONS_617, CONS_618, CONS_619, CONS_62,
  CONS_620, CONS_621, CONS_622, CONS_623, CONS_624, CONS_625, CONS_626,
  CONS_627, CONS_628, CONS_629, CONS_63, CONS_630, CONS_631, CONS_632,
  CONS_633, CONS_634, CONS_635, CONS_636, CONS_637, CONS_638, CONS_639,
  CONS_64, CONS_640, CONS_641, CONS_642, CONS_643, CONS_644, CONS_645,
  CONS_646, CONS_647, CONS_648, CONS_649, CONS_65, CONS_650, CONS_651,
  CONS_652, CONS_653, CONS_654, CONS_655, CONS_656, CONS_657, CONS_658,
  CONS_659, CONS_66, CONS_660, CONS_661, CONS_662, CONS_663, CONS_664,
  CONS_665, CONS_666, CONS_667, CONS_668, CONS_669, CONS_67, CONS_670,
  CONS_671, CONS_672, CONS_673, CONS_674, CONS_675, CONS_676, CONS_677,
  CONS_678, CONS_679, CONS_68, CONS_680, CONS_681, CONS_682, CONS_683,
  CONS_684, CONS_685, CONS_686, CONS_687, CONS_688, CONS_689, CONS_69,
  CONS_690, CONS_691, CONS_692, CONS_693, CONS_694, CONS_695, CONS_696,
  CONS_697, CONS_698, CONS_699, CONS_7, CONS_70, CONS_700, CONS_701,
  CONS_702, CONS_703, CONS_704, CONS_705, CONS_706, CONS_707, CONS_708,
  CONS_709, CONS_71, CONS_710, CONS_711, CONS_712, CONS_713, CONS_714,
  CONS_715, CONS_716, CONS_717, CONS_718, CONS_719, CONS_72, CONS_720,
  CONS_721, CONS_722, CONS_723, CONS_724, CONS_725, CONS_726, CONS_727,
  CONS_728, CONS_729, CONS_73, CONS_730, CONS_731, CONS_732, CONS_733,
  CONS_734, CONS_735, CONS_736, CONS_737, CONS_738, CONS_739, CONS_74,
  CONS_740, CONS_741, CONS_742, CONS_743, CONS_744, CONS_745, CONS_746,
  CONS_747, CONS_748, CONS_749, CONS_75, CONS_750, CONS_751, CONS_752,
  CONS_753, CONS_754, CONS_755, CONS_756, CONS_757, CONS_758, CONS_759,
  CONS_76, CONS_760, CONS_761, CONS_762, CONS_763, CONS_764, CONS_765,
  CONS_766, CONS_767, CONS_768, CONS_769, CONS_77, CONS_770, CONS_771,
  CONS_772, CONS_773, CONS_774, CONS_775, CONS_776, CONS_777, CONS_778,
  CONS_779, CONS_78, CONS_780, CONS_781, CONS_782, CONS_783, CONS_784,
  CONS_785, CONS_786, CONS_787, CONS_788, CONS_789, CONS_79, CONS_790,
  CONS_791, CONS_792, CONS_793, CONS_794, CONS_795, CONS_796, CONS_797,
  CONS_798, CONS_799, CONS_8, CONS_80, CONS_800, CONS_801, CONS_802,
  CONS_803, CONS_804, CONS_805, CONS_806, CONS_807, CONS_808, CONS_809,
  CONS_81, CONS_810, CONS_811, CONS_812, CONS_813, CONS_814, CONS_815,
  CONS_816, CONS_817, CONS_818, CONS_819, CONS_82, CONS_820, CONS_821,
  CONS_822, CONS_823, CONS_824, CONS_825, CONS_826, CONS_827, CONS_828,
  CONS_829, CONS_83, CONS_830, CONS_831, CONS_832, CONS_833, CONS_834,
  CONS_835, CONS_836, CONS_837, CONS_838, CONS_839, CONS_84, CONS_840,
  CONS_841, CONS_842, CONS_843, CONS_844, CONS_845, CONS_846, CONS_847,
  CONS_848, CONS_849, CONS_85, CONS_850, CONS_851, CONS_852, CONS_853,
  CONS_854, CONS_855, CONS_856, CONS_857, CONS_858, CONS_859, CONS_86,
  CONS_860, CONS_861, CONS_862, CONS_863, CONS_864, CONS_865, CONS_866,
  CONS_867, CONS_868, CONS_869, CONS_87, CONS_870, CONS_871, CONS_872,
  CONS_873, CONS_874, CONS_875, CONS_876, CONS_877, CONS_878, CONS_879,
  CONS_88, CONS_880, CONS_881, CONS_882, CONS_883, CONS_884, CONS_885,
  CONS_886, CONS_887, CONS_888, CONS_889, CONS_89, CONS_890, CONS_891,
  CONS_892, CONS_893, CONS_894, CONS_895, CONS_896, CONS_897, CONS_898,
  CONS_899, CONS_9, CONS_90, CONS_900, CONS_901, CONS_902, CONS_903,
  CONS_904, CONS_905, CONS_906, CONS_907, CONS_908, CONS_909, CONS_91,
  CONS_910, CONS_911, CONS_912, CONS_913, CONS_914, CONS_915, CONS_916,
  CONS_917, CONS_918, CONS_919, CONS_92, CONS_920, CONS_921, CONS_922,
  CONS_923, CONS_924, CONS_925, CONS_926, CONS_927, CONS_928, CONS_929,
  CONS_93, CONS_930, CONS_931, CONS_932, CONS_933, CONS_934, CONS_935,
  CONS_936, CONS_937, CONS_938, CONS_939, CONS_94, CONS_940, CONS_941,
  CONS_942, CONS_943, CONS_944, CONS_945, CONS_946, CONS_947, CONS_948,
  CONS_949, CONS_95, CONS_950, CONS_951, CONS_952, CONS_953, CONS_954,
  CONS_955, CONS_956, CONS_957, CONS_958, CONS_959, CONS_96, CONS_960,
  CONS_961, CONS_962, CONS_963, CONS_964, CONS_965, CONS_966, CONS_967,
  CONS_968, CONS_969, CONS_97, CONS_970, CONS_971, CONS_972, CONS_973,
  CONS_974, CONS_975, CONS_976, CONS_977, CONS_978, CONS_979, CONS_98,
  CONS_980, CONS_981, CONS_982, CONS_983, CONS_984, CONS_985, CONS_986,
  CONS_987, CONS_988, CONS_989, CONS_99, CONS_990, CONS_991, CONS_992,
  CONS_993, CONS_994, CONS_995, CONS_996, CONS_997, CONS_998, CONS_999,
  etADD_ENTRY, F_7_0, I_minus2, I_0, I_1, I_10, I_11, I_12, I_13, I_14,
  I_15, I_16, I_17, I_18, I_19, I_2, I_20, I_21, I_22, I_23, I_24,
  I_25, I_26, I_27, I_28, I_29, I_3, I_30, I_31, I_32, I_33, I_34,
  I_35, I_36, I_37, I_38, I_39, I_4, I_40, I_41, I_42, I_43, I_44,
  I_45, I_46, I_47, I_48, I_49, I_5, I_50, I_6, I_7, I_8, I_9, I_99,
  keyA, keyANY_KEYWORD, keyB, keyEND1, keySTART1, keyTEST, keyVARIABLE,
  keyXX, keyYY, PKG_ECLIPSE_TEST, STR_ADD_ENTRY__0, STR_ANY_KEYWORD__2,
  STR_ARG__8, STR_A__13, STR_B__3, STR_D__4, STR_ECLIPSE_TEST__1,
  STR_END1__7, STR_START1__6, STR_TEST__5, STR_VARIABLE__11, STR_XX__9,
  STR_YY__10, STR_a_float__15, STR_a_list__17,
  STR_a_symbol_dotdotdot__16, STR_here__14, STR_otherwise__18, STRn_12;

clObject clSomeIdentityFunction clVdecl(_ap)
{ clObject x;
  { clBeginParse(_ap);
    clSetq(x, (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_1, clEOA)));
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  return(clValues1(x)); }

clObject clTstUnquoted clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  clSetSymbolValueValue(clA, I_43);
  { clObject L_1, L_0;
    clSetq(L_0, clSymbolValue(clA, clEOA));
    { clObject L_0__R1;
      clSetq(L_0__R1, clSymbolValue(clA, clEOA));
      clSetq(L_1, clCons(L_0__R1, I_3, clEOA)); }
    return(clList(L_0, L_1, clEOA)); } }

clObject clTstQuote clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  return(clList(clA, CONS_9, clEOA)); }

clDeclareEnv(clAdder_Lambda);
static clObject clAdder_Lambda clVdecl(_ap)
{ clUseEnv(clAdder_Lambda);
  { clObject y;
    { clBeginParse(_ap);
      clSetq(y,
             (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_1, clEOA)));
      if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
      clEndParse(_ap); }
    { clObject L_1, L_0;
      clSetq(L_0, clEnv(0, *x));
      clSetq(L_1, y);
      return(clFuncallFunction(clSymbolFunctionValue(clADD),
                               L_0,
                               L_1,
                               clEOA)); } } }

clObject clAdder clVdecl(_ap)
{ clObject *x = clMakeBinding();
  { clBeginParse(_ap);
    clSetq(*x, (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_1, clEOA)));
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  return(clValues1(clMakeClosure(1,
                                 clAdder_Lambda,
                                 &clEnvHook(clAdder_Lambda),
                                 &*x))); }

clObject clTstDefunClosure clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject L_0;
    clSetq(L_0,
           clFuncallFunction(clSymbolFunctionValue(clADDER),
                             I_3,
                             clEOA));
    return(clFuncall(L_0, I_5, clEOA)); } }

clDeclareEnv(clTstClosureBindings_Lambda_Lambda);
static clObject clTstClosureBindings_Lambda_Lambda clVdecl(_ap)
{ clUseEnv(clTstClosureBindings_Lambda_Lambda);
  { { clBeginParse(_ap);
      if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
      clEndParse(_ap); }
    return(clValues1(clEnv(0, *x))); } }

clDeclareEnv(clTstClosureBindings_Lambda_Lambda_r1);
static clObject clTstClosureBindings_Lambda_Lambda_r1 clVdecl(_ap)
{ clUseEnv(clTstClosureBindings_Lambda_Lambda_r1);
  { clObject y;
    { clBeginParse(_ap);
      clSetq(y,
             (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_1, clEOA)));
      if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
      clEndParse(_ap); }
    return(clValues1(clSetq(clEnv(0, *x), y))); } }

static clObject clTstClosureBindings_Lambda clVdecl(_ap)
{ clObject *x = clMakeBinding();
  { clBeginParse(_ap);
    clSetq(*x, (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_1, clEOA)));
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject L_1, L_0;
    clSetq(L_0,
           clMakeClosure(1,
                         clTstClosureBindings_Lambda_Lambda,
                         &clEnvHook(clTstClosureBindings_Lambda_Lambda),
                         &*x));
    clSetq(L_1,
           clMakeClosure(1,
                         clTstClosureBindings_Lambda_Lambda_r1,
                         &clEnvHook(clTstClosureBindings_Lambda_Lambda_r1),
                         &*x));
    return(clList(L_0, L_1, clEOA)); } }

clObject clTstClosureBindings clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject funs;
    clSetq(funs,
           clFuncallFunction(clMakeClosure(0,
                                           clTstClosureBindings_Lambda,
                                           clNULL_HOOK),
                             I_6,
                             clEOA));
    { clObject L_1, L_0;
      clSetq(L_0, clFuncall(clCar(funs, clEOA), clEOA));
      { clObject L_0__R1;
        clSetq(L_0__R1, clCadr(funs, clEOA));
        clSetq(L_1, clFuncall(L_0__R1, I_43, clEOA)); }
      return(clList(L_0, L_1, clFuncall(clCar(funs, clEOA), clEOA),
                    clEOA)); } } }

clDeclareEnv(clTwoFuns_Lambda);
static clObject clTwoFuns_Lambda clVdecl(_ap)
{ clUseEnv(clTwoFuns_Lambda);
  { { clBeginParse(_ap);
      if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
      clEndParse(_ap); }
    return(clValues1(clEnv(0, *x))); } }

clDeclareEnv(clTwoFuns_Lambda_r1);
static clObject clTwoFuns_Lambda_r1 clVdecl(_ap)
{ clUseEnv(clTwoFuns_Lambda_r1);
  { clObject y;
    { clBeginParse(_ap);
      clSetq(y,
             (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_1, clEOA)));
      if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
      clEndParse(_ap); }
    return(clValues1(clSetq(clEnv(0, *x), y))); } }

clObject clTwoFuns clVdecl(_ap)
{ clObject *x = clMakeBinding();
  { clBeginParse(_ap);
    clSetq(*x, (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_1, clEOA)));
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject L_1, L_0;
    clSetq(L_0,
           clMakeClosure(1,
                         clTwoFuns_Lambda,
                         &clEnvHook(clTwoFuns_Lambda),
                         &*x));
    clSetq(L_1,
           clMakeClosure(1,
                         clTwoFuns_Lambda_r1,
                         &clEnvHook(clTwoFuns_Lambda_r1),
                         &*x));
    return(clList(L_0, L_1, clEOA)); } }

clObject clTstClosureBindings2 clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject funs;
    clSetq(funs,
           clFuncallFunction(clSymbolFunctionValue(clTWO_FUNS),
                             I_6,
                             clEOA));
    { clObject L_1, L_0;
      clSetq(L_0, clFuncall(clCar(funs, clEOA), clEOA));
      { clObject L_0__R1;
        clSetq(L_0__R1, clCadr(funs, clEOA));
        clSetq(L_1, clFuncall(L_0__R1, I_43, clEOA)); }
      return(clList(L_0, L_1, clFuncall(clCar(funs, clEOA), clEOA),
                    clEOA)); } } }

clObject clTstSymbolValue clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject L_10, L_9, L_8, L_7, L_6, L_5, L_4, L_3, L_2, L_1, L_0;
    clSetq(L_0, clSet(clA, I_1, clEOA));
    clSetq(L_1, clSymbolValue(clA, clEOA));
    { clObject a;
      clSetq(a, I_2);
      clSetq(L_2, clSymbolValue(clA, clEOA)); }
    { clObject a;
      clSetq(a, I_2);
      clSetq(a, I_3);
      clSetq(L_3, clSymbolValue(clA, clEOA)); }
    { clObject a;
      clSetq(a, I_2);
      clDbind(clA);
      clSetSymbolValueValue(clA, a);
      clSetq(L_4, clSymbolValue(clA, clEOA));
      clUnwind(1); }
    { clObject a;
      clSetq(a, I_2);
      clDbind(clA);
      clSetSymbolValueValue(clA, a);
      clSetSymbolValueValue(clA, I_3);
      clSetq(L_5, clSymbolValue(clA, clEOA));
      clUnwind(1); }
    { clObject a;
      clSetq(a, I_2);
      clSet(clA, I_3, clEOA);
      clSetq(L_6, a); }
    clSetq(L_7, clSymbolValue(clA, clEOA));
    { clObject a;
      clSetq(a, I_4);
      clDbind(clA);
      clSetSymbolValueValue(clA, a);
      { clObject b;
        clSetq(b, clSymbolValue(clA, clEOA));
        clSet(clA, I_5, clEOA);
        { clObject L_0__R1;
          clSetq(L_0__R1, clSymbolValue(clA, clEOA));
          clSetq(L_8, clList(L_0__R1, b, clEOA)); } }
      clUnwind(1); }
    clSetq(L_9, clSymbolValue(clA, clEOA));
    clSetq(L_10, clSymbolValue(keyANY_KEYWORD, clEOA));
    return(clValues(L_0, L_1, L_2, L_3, L_4, L_5, L_6, L_7, L_8, L_9,
                    L_10, clSymbolValue(clNIL, clEOA), clEOA)); } }

static clObject clTstSymbolFunction_Lambda clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  return(clValues1(I_3)); }

clObject clTstSymbolFunction clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject f;
    clSetq(f,
           clMakeClosure(0, clTstSymbolFunction_Lambda, clNULL_HOOK));
    { clObject L_0;
      { clObject L_0__R1;
        clSetq(L_0__R1, cl_SETF_SymbolFunction(f, clFOO, clEOA));
        clSetq(L_0, clEq(L_0__R1, f, clEOA)); }
      return(clValues(L_0,
                      clFuncall(clSymbolFunction(clFOO, clEOA), clEOA),
                      clEOA)); } } }

static clObject clTstFdefinitionSimple_Lambda clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  return(clValues1(I_3)); }

clObject clTstFdefinitionSimple clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject f;
    clSetq(f,
           clMakeClosure(0,
                         clTstFdefinitionSimple_Lambda,
                         clNULL_HOOK));
    { clObject L_0;
      { clObject L_0__R1;
        clSetq(L_0__R1, cl_SETF_Fdefinition(f, clFOO, clEOA));
        clSetq(L_0, clEq(L_0__R1, f, clEOA)); }
      return(clValues(L_0,
                      clFuncall(clFdefinition(clFOO, clEOA), clEOA),
                      clEOA)); } } }

clDeclareEnv(clTstFdefinitionSetf_Lambda);
static clObject clTstFdefinitionSetf_Lambda clVdecl(_ap)
{ clUseEnv(clTstFdefinitionSetf_Lambda);
  { clObject CL_new;
    { clBeginParse(_ap);
      clSetq(CL_new,
             (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_1, clEOA)));
      if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
      clEndParse(_ap); }
    return(clValues1(clSetq(clEnv(0, *x), CL_new))); } }

clObject clTstFdefinitionSetf clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject *x = clMakeBinding(), f;
    clSetq(*x, I_0);
    clSetq(f,
           clMakeClosure(1,
                         clTstFdefinitionSetf_Lambda,
                         &clEnvHook(clTstFdefinitionSetf_Lambda),
                         &*x));
    { clObject L_2, L_1, L_0;
      { clObject L_0__R1;
        clSetq(L_0__R1, cl_SETF_Fdefinition(f, CONS_225, clEOA));
        clSetq(L_0, clEq(L_0__R1, f, clEOA)); }
      { clObject L_0__R1;
        clSetq(L_0__R1, clFdefinition(CONS_225, clEOA));
        clSetq(L_1, clFuncall(L_0__R1, I_3, clEOA)); }
      clSetq(L_2, *x);
      return(clValues(L_0, L_1, L_2, clEOA)); } } }

clObject clTstBoundp clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject L_5, L_4, L_3, L_2, L_1, L_0;
    clSetq(L_0, clSetSymbolValueValue(clX, I_1));
    clSetq(L_1, clBoundp(clX, clEOA));
    clSetq(L_2, clMakunbound(clX, clEOA));
    clSetq(L_3, clBoundp(clX, clEOA));
    { clObject x; clSetq(x, I_2); clSetq(L_4, clBoundp(clX, clEOA)); }
    { clObject x;
      clSetq(x, I_2);
      clDbind(clX);
      clSetSymbolValueValue(clX, x);
      clSetq(L_5, clBoundp(clX, clEOA));
      clUnwind(1); }
    return(clValues(L_0, L_1, L_2, L_3, L_4, L_5, clEOA)); } }

static clObject clTstFboundp_Lambda clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  return(clValues1(I_3)); }

static clObject clTstFboundp_X_FUNC clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  return(clValues1(I_9)); }

clObject clTstFboundp clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject L_4, L_3, L_2, L_1, L_0;
    { clObject f;
      clSetq(f, clMakeClosure(0, clTstFboundp_Lambda, clNULL_HOOK));
      { clObject L_0__R1;
        clSetq(L_0__R1, cl_SETF_SymbolFunction(f, clX, clEOA));
        clSetq(L_0, clEq(L_0__R1, f, clEOA)); } }
    clSetq(L_1, clNot(clNull(clFboundp(clX, clEOA), clEOA), clEOA));
    clSetq(L_2, clFmakunbound(clX, clEOA));
    clSetq(L_3, clFboundp(clX, clEOA));
    { clObject _X_FUNC_;
      clSetq(_X_FUNC_,
             clMakeClosure(0, clTstFboundp_X_FUNC, clNULL_HOOK));
      clFboundp(clX, clEOA);
      clSetq(L_4, clFuncallFunction(_X_FUNC_, clEOA)); }
    return(clValues(L_0, L_1, L_2, L_3, L_4, clEOA)); } }

clObject clTstSpecialOperatorP1 clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  return(clNot(clSpecialOperatorP(clIF, clEOA), clEOA)); }

clObject clTstSpecialOperatorP2 clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  return(clSpecialOperatorP(clCAR, clEOA)); }

clObject clTstSpecialOperatorP3 clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  return(clSpecialOperatorP(clONE, clEOA)); }

clObject clTstEmptySetq clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  return(clValues1(clNIL)); }

clObject clTstSpecialSimpleSetq clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject L_2, L_1, L_0;
    clSetSymbolValueValue(clA, I_1);
    clSetSymbolValueValue(clB, I_2);
    clSetq(L_0, clSetSymbolValueValue(clC, I_3));
    clSetq(L_1, clSymbolValue(clA, clEOA));
    clSetq(L_2, clSymbolValue(clB, clEOA));
    return(clList(L_0, L_1, L_2, clSymbolValue(clC, clEOA), clEOA)); } }

clObject clTstSpecialSequentialAssignment clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject L_2, L_1, L_0;
    { clObject L_0__R1;
      clSetq(L_0__R1, clSymbolValue(clB, clEOA));
      clSetSymbolValueValue(clA,
                            clFuncallFunction(clSymbolFunctionValue(clADD),
                                              L_0__R1,
                                              I_1,
                                              clEOA)); }
    { clObject L_0__R1;
      clSetq(L_0__R1, clSymbolValue(clA, clEOA));
      clSetSymbolValueValue(clB,
                            clFuncallFunction(clSymbolFunctionValue(clADD),
                                              L_0__R1,
                                              I_1,
                                              clEOA)); }
    { clObject L_0__R1;
      clSetq(L_0__R1, clSymbolValue(clA, clEOA));
      clSetq(L_0,
             clSetSymbolValueValue(clC,
                                   clFuncallFunction(clSymbolFunctionValue(clADD),
                                                     L_0__R1,
                                                     clSymbolValue(clB,
                                                                   clEOA),
                                                     clEOA))); }
    clSetq(L_1, clSymbolValue(clA, clEOA));
    clSetq(L_2, clSymbolValue(clB, clEOA));
    return(clList(L_0, L_1, L_2, clSymbolValue(clC, clEOA), clEOA)); } }

clObject clTstSpecialSetqOrder clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject L_1, L_0;
    clSetSymbolValueValue(clX, clPLUS_FUNC(I_3, I_2, I_1, clEOA));
    { clObject L_0__R1;
      clSetq(L_0__R1, clSymbolValue(clX, clEOA));
      clSetq(L_0,
             clSetSymbolValueValue(clY,
                                   clCons(L_0__R1, clNIL, clEOA))); }
    clSetq(L_1, clSymbolValue(clX, clEOA));
    return(clList(L_0, L_1, clSymbolValue(clY, clEOA), clEOA)); } }

clObject clTstSpecialSetqSymbolMacro clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject x;
    clSetq(x, clList(I_10, I_20, I_30, clEOA));
    { clObject L_g39533;
      clSetq(L_g39533,
             clFuncallFunction(clSymbolFunctionValue(clADD),
                               I_1,
                               clCadr(x, clEOA),
                               clEOA));
      clRplaca(x, L_g39533, clEOA);
      (void) L_g39533; }
    { clObject L_g39535;
      clSetq(L_g39535, clCar(x, clEOA));
      { clObject L_0;
        clSetq(L_0, clCdr(x, clEOA));
        clRplaca(L_0, L_g39535, clEOA); }
      (void) L_g39535; }
    { clObject L_1;
      clSetq(L_1, clCar(x, clEOA));
      return(clList(x, L_1, clCadr(x, clEOA), clEOA)); } } }

clDeclareEnv(clTstLocalSimpleSetq);
clObject clTstLocalSimpleSetq clVdecl(_ap)
{ clUseEnv(clTstLocalSimpleSetq);
  { { clBeginParse(_ap);
      if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
      clEndParse(_ap); }
    { clObject L_0;
      clSetq(clEnv(0, *a), I_1);
      clSetq(clEnv(1, *b), I_2);
      clSetq(L_0, clSetq(clEnv(2, *c), I_3));
      return(clList(L_0, clEnv(0, *a), clEnv(1, *b), clEnv(2, *c),
                    clEOA)); } } }

clDeclareEnv(clTstLocalSequentialAssignment);
clObject clTstLocalSequentialAssignment clVdecl(_ap)
{ clUseEnv(clTstLocalSequentialAssignment);
  { { clBeginParse(_ap);
      if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
      clEndParse(_ap); }
    { clObject L_3, L_2, L_1, L_0;
      { clObject L_0__R1;
        clSetq(L_0__R1, clEnv(1, *b));
        clSetq(clEnv(0, *a),
               clFuncallFunction(clSymbolFunctionValue(clADD),
                                 L_0__R1,
                                 I_1,
                                 clEOA)); }
      { clObject L_0__R1;
        clSetq(L_0__R1, clEnv(0, *a));
        clSetq(clEnv(1, *b),
               clFuncallFunction(clSymbolFunctionValue(clADD),
                                 L_0__R1,
                                 I_1,
                                 clEOA)); }
      { clObject L_1__R1, L_0__R1;
        clSetq(L_0__R1, clEnv(0, *a));
        clSetq(L_1__R1, clEnv(1, *b));
        clSetq(L_0,
               clSetq(clEnv(2, *c),
                      clFuncallFunction(clSymbolFunctionValue(clADD),
                                        L_0__R1,
                                        L_1__R1,
                                        clEOA))); }
      clSetq(L_1, clEnv(0, *a));
      clSetq(L_2, clEnv(1, *b));
      clSetq(L_3, clEnv(2, *c));
      return(clList(L_0, L_1, L_2, L_3, clEOA)); } } }

clDeclareEnv(clTstLocalSetqOrder);
clObject clTstLocalSetqOrder clVdecl(_ap)
{ clUseEnv(clTstLocalSetqOrder);
  { { clBeginParse(_ap);
      if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
      clEndParse(_ap); }
    { clObject L_0;
      clSetq(clEnv(0, *x), clPLUS_FUNC(I_3, I_2, I_1, clEOA));
      clSetq(L_0,
             clSetq(clEnv(1, *y), clCons(clEnv(0, *x), clNIL, clEOA)));
      return(clList(L_0, clEnv(0, *x), clEnv(1, *y), clEOA)); } } }

clObject clTstLocalSetqSymbolMacro clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject x;
    clSetq(x, clList(I_10, I_20, I_30, clEOA));
    { clObject L_g39537;
      clSetq(L_g39537,
             clFuncallFunction(clSymbolFunctionValue(clADD),
                               I_1,
                               clCadr(x, clEOA),
                               clEOA));
      clRplaca(x, L_g39537, clEOA);
      (void) L_g39537; }
    { clObject L_g39539;
      clSetq(L_g39539,
             clFuncallFunction(clSymbolFunctionValue(clADD),
                               I_1,
                               clCar(x, clEOA),
                               clEOA));
      { clObject L_0;
        clSetq(L_0, clCdr(x, clEOA));
        clRplaca(L_0, L_g39539, clEOA); }
      (void) L_g39539; }
    { clObject L_1;
      clSetq(L_1, clCar(x, clEOA));
      return(clList(x, L_1, clCadr(x, clEOA), clEOA)); } } }

clObject clTstEmptyPsetq clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  return(clValues1(clNIL)); }

clObject clTstPsetq clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject a, b, c;
    clSetq(a, clNIL);
    clSetq(b, clNIL);
    clSetq(c, clNIL);
    { clObject L_4, L_3, L_2;
      (clSetq(a, I_1), clSetq(b, I_2), clSetq(c, I_3));
      { clObject L_value39544, L_value39545, L_value39546;
        { clObject L_0__R1;
          clSetq(L_0__R1, b);
          clSetq(L_value39544, cl1PLUS_FUNC(L_0__R1, clEOA)); }
        { clObject L_0__R1;
          clSetq(L_0__R1, a);
          clSetq(L_value39545, cl1PLUS_FUNC(L_0__R1, clEOA)); }
        { clObject L_1__R1, L_0__R1;
          clSetq(L_0__R1, a);
          clSetq(L_1__R1, b);
          clSetq(L_value39546,
                 clFuncallFunction(clSymbolFunctionValue(clADD),
                                   L_0__R1,
                                   L_1__R1,
                                   clEOA)); }
        clSetq(a, L_value39544);
        clSetq(b, L_value39545);
        clSetq(c, L_value39546); }
      clSetq(L_2, a);
      clSetq(L_3, b);
      clSetq(L_4, c);
      return(clValues(clNIL, clNIL, L_2, L_3, L_4, clEOA)); } } }

clObject clTstPsetqSymbolMacro clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject x;
    clSetq(x, clList(I_10, I_20, I_30, clEOA));
    { clObject L_g39547, L_g39549;
      clSetq(L_g39547, cl1PLUS_FUNC(clCadr(x, clEOA), clEOA));
      clSetq(L_g39549, cl1PLUS_FUNC(clCar(x, clEOA), clEOA));
      clRplaca(x, L_g39547, clEOA);
      (void) L_g39547;
      { clObject L_0;
        clSetq(L_0, clCdr(x, clEOA));
        clRplaca(L_0, L_g39549, clEOA); }
      (void) L_g39549; }
    { clObject L_1;
      clSetq(L_1, clCar(x, clEOA));
      return(clList(x, L_1, clCadr(x, clEOA), clEOA)); } } }

clObject clTstPsetqSwap clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject a, b;
    clSetq(a, I_1);
    clSetq(b, I_2);
    { clObject L_value39551, L_value39552;
      clSetq(L_value39551, b);
      clSetq(L_value39552, a);
      clSetq(a, L_value39551);
      clSetq(b, L_value39552); }
    { clObject L_1, L_0;
      clSetq(L_0, a);
      clSetq(L_1, b);
      return(clValues(L_0, L_1, clEOA)); } } }

clObject clTstSet clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject L_4, L_3, L_2, L_1, L_0;
    clSetq(L_0, clSet(clA, I_1, clEOA));
    clSetq(L_1, clSymbolValue(clA, clEOA));
    { clObject a;
      clSetq(a, I_2);
      clSet(clA, I_3, clEOA);
      clSetq(L_2, a); }
    clSetq(L_3, clSymbolValue(clA, clEOA));
    { clObject a;
      clSetq(a, I_4);
      clDbind(clA);
      clSetSymbolValueValue(clA, a);
      { clObject b;
        clSetq(b, clSymbolValue(clA, clEOA));
        clSet(clA, I_5, clEOA);
        { clObject L_0__R1;
          clSetq(L_0__R1, clSymbolValue(clA, clEOA));
          clSetq(L_4, clList(L_0__R1, b, clEOA)); } }
      clUnwind(1); }
    return(clValues(L_0, L_1, L_2, L_3, L_4, clEOA)); } }

clObject clTstSetfEmpty clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  return(clValues1(clNIL)); }

clObject clTstSetfLocals clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject a, b, c;
    clSetq(a, I_1);
    clSetq(b, I_2);
    clSetq(c, I_3);
    { clObject L_3, L_2, L_1, L_0;
      clSetq(a, I_2);
      clSetq(b, c);
      clSetq(L_0, clSetq(c, b));
      clSetq(L_1, a);
      clSetq(L_2, b);
      clSetq(L_3, c);
      return(clValues(L_0, L_1, L_2, L_3, clEOA)); } } }

clObject clTstSetfThe clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject x, y;
    clSetq(x, clList(I_1, I_2, clEOA));
    clSetq(y, I_3);
    { clObject L_0;
      { clObject L_g39556;
        clSetq(L_g39556,
               clFuncallFunction(clSymbolFunctionValue(clADD),
                                 y,
                                 I_3,
                                 clEOA));
        { clObject L_0__R1;
          clSetq(L_0__R1, clCdr(x, clEOA));
          clRplaca(L_0__R1, L_g39556, clEOA); }
        clSetq(L_0, L_g39556); }
      return(clValues(L_0, x, y, clEOA)); } } }

clObject clTstPsetf clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject x, y;
    clSetq(x, clCons(clA, clB, clEOA));
    clSetq(y, clList(I_1, I_2, I_3, clEOA));
    { { clObject L_g39560;
        clSetq(L_g39560, clCar(x, clEOA));
        clRplaca(x, clX, clEOA);
        (void) clX;
        { clObject L_0__R1;
          clSetq(L_0__R1, clCdr(y, clEOA));
          clRplaca(L_0__R1, L_g39560, clEOA); }
        (void) L_g39560;
        clRplacd(x, y, clEOA);
        (void) y; }
      return(clValues(clNIL, x, y, clEOA)); } } }

clObject clTstShiftf clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject x, y;
    clSetq(x, clList(I_1, I_2, I_3, clEOA));
    clSetq(y, clTRASH);
    { clObject L_2, L_1, L_0;
      { clObject L_g39567;
        clSetq(L_g39567, x);
        { clMultipleValueProg1(MVP1);
          clValues1(y);
          clSaveValues(MVP1);
          clSetq(y, x);
          { clObject L_value39565;
            clSetq(L_value39565, clCdr(L_g39567, clEOA));
            clSetq(x, L_value39565); }
          (clRplacd(L_g39567, CONS_584, clEOA), CONS_584);
          clRestoreValues(MVP1);
          clSetq(L_0, clSavedValue(MVP1)); } }
      clSetq(L_1, x);
      clSetq(L_2, y);
      return(clValues(L_0, L_1, L_2, clEOA)); } } }

clObject clTstRotatef clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject n, x;
    clSetq(n, I_0);
    clSetq(x, clList(clA, clB, clC, clD, clE, clF, clG, clEOA));
    { clObject L_g39569, L_g39572, L_g39575;
      { clObject L_0;
        clSetq(L_0, n);
        clSetq(L_g39569,
               clSetq(n,
                      clFuncallFunction(clSymbolFunctionValue(clADD),
                                        L_0,
                                        I_1,
                                        clEOA))); }
      { clObject L_0;
        clSetq(L_0, n);
        clSetq(L_g39572,
               clSetq(n,
                      clFuncallFunction(clSymbolFunctionValue(clADD),
                                        L_0,
                                        I_1,
                                        clEOA))); }
      { clObject L_0;
        clSetq(L_0, n);
        clSetq(L_g39575,
               clSetq(n,
                      clFuncallFunction(clSymbolFunctionValue(clADD),
                                        L_0,
                                        I_1,
                                        clEOA))); }
      { clObject L_g39568;
        clSetq(L_g39568, clNth(L_g39572, x, clEOA));
        { clObject L_g39571;
          clSetq(L_g39571, clNth(L_g39575, x, clEOA));
          { clObject L_g39574;
            clSetq(L_g39574, clNth(L_g39569, x, clEOA));
            { clObject L_0;
              clSetq(L_0, clNthcdr(L_g39569, x, clEOA));
              clRplaca(L_0, L_g39568, clEOA); }
            (void) L_g39568;
            { clObject L_0;
              clSetq(L_0, clNthcdr(L_g39572, x, clEOA));
              clRplaca(L_0, L_g39571, clEOA); }
            (void) L_g39571;
            { clObject L_0;
              clSetq(L_0, clNthcdr(L_g39575, x, clEOA));
              clRplaca(L_0, L_g39574, clEOA); }
            (void) L_g39574; } } } }
    return(clValues1(x)); } }

clObject clTstDefineModifyMacro clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject x, y, a;
    clSetq(x, CONS_321);
    clSetq(y, x);
    clSetq(a, I_2);
    { clObject L_6, L_5, L_4, L_3, L_2, L_1, L_0;
      { clObject L_0__R1;
        clSetq(L_0__R1, x);
        clSetq(L_0,
               clSetq(x,
                      clAppend(L_0__R1, CONS_646, CONS_326, clEOA))); }
      clSetq(L_1, x);
      clSetq(L_2, y);
      { clObject L_0__R1;
        clSetq(L_0__R1, a);
        clSetq(L_3,
               clSetq(a,
                      clFuncallFunction(clSymbolFunctionValue(clADD),
                                        L_0__R1,
                                        I_1,
                                        clEOA))); }
      { clObject L_0__R1;
        clSetq(L_0__R1, a);
        clSetq(L_4,
               clSetq(a,
                      clFuncallFunction(clSymbolFunctionValue(clADD),
                                        L_0__R1,
                                        I_10,
                                        clEOA))); }
      clSetq(L_5, a);
      { clObject L_0__R1;
        clSetq(L_0__R1, y);
        clSetq(y,
               clUnion(L_0__R1,
                       CONS_668,
                       keyTEST,
                       clSymbolFunctionValue(clSTRINGequal),
                       clEOA)); }
      { clObject L_0__R1;
        clSetq(L_0__R1, y);
        clSetq(L_6,
               clSetExclusiveOr(L_0__R1,
                                CONS_680,
                                keyTEST,
                                clSymbolFunctionValue(clSTRINGequal),
                                clEOA)); }
      return(clValues(L_0, L_1, L_2, L_3, L_4, L_5, L_6, clEOA)); } } }

clObject clMiddleguy clVdecl(_ap)
{ clObject x;
  { clBeginParse(_ap);
    clSetq(x, (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_1, clEOA)));
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject L_1, L_0;
    { clObject L_0__R1;
      { clObject L_0__R2;
        { clObject L_0__R3;
          clSetq(L_0__R3, x);
          clSetq(L_0__R2, clListLength(L_0__R3, clEOA)); }
        clSetq(L_0__R1, cl1MINUS_FUNC(L_0__R2, clEOA)); }
      clSetq(L_0, clTruncate(L_0__R1, I_2, clEOA)); }
    clSetq(L_1, x);
    return(clNth(L_0, L_1, clEOA)); } }

clObject clSetMiddleguy clVdecl(_ap)
{ clObject x, v;
  { clBeginParse(_ap);
    clSetq(x, (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_1, clEOA)));
    clSetq(v, (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_2, clEOA)));
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject L_test;
    { clObject L_0;
      { clObject L_0__R1;
        clSetq(L_0__R1, x);
        clSetq(L_0, clNull(L_0__R1, clEOA)); }
      clSetq(L_test, clNot(L_0, clEOA)); }
    if (clTrue(L_test))
      { clObject L_1, L_0;
        { clObject L_1__R1, L_0__R1;
          { clObject L_0__R2;
            { clObject L_0__R3;
              { clObject L_0__R4;
                clSetq(L_0__R4, x);
                clSetq(L_0__R3, clListLength(L_0__R4, clEOA)); }
              clSetq(L_0__R2, cl1MINUS_FUNC(L_0__R3, clEOA)); }
            clSetq(L_0__R1, clTruncate(L_0__R2, I_2, clEOA)); }
          clSetq(L_1__R1, x);
          clSetq(L_0, clNthcdr(L_0__R1, L_1__R1, clEOA)); }
        clSetq(L_1, v);
        clRplaca(L_0, L_1, clEOA); } }
  return(clValues1(v)); }

static clObject clLambda clVdecl(_ap)
{ clObject L_form, L_ignored, CL_form, CL_args;
  { clBeginParse(_ap);
    clSetq(L_form,
           (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_1, clEOA)));
    clSetq(L_ignored,
           (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_2, clEOA)));
    clSetq(CL_form, L_form);
    { clObject L_0;
      clSetq(L_0, L_form);
      clSetq(L_form, clCdr(L_0, clEOA)); }
    clSetq(CL_args, L_form);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  return(clGenerateSetfMethod(CL_form, CONS_695, clNIL, clEOA)); }

clObject clTstDefsetfShort clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject a, b, c;
    clSetq(a, clList(clA, clB, clC, clD, clEOA));
    clSetq(b, clList(clX, clEOA));
    { clObject L_3;
      clSetq(L_3, clList(I_4, I_5, I_6, clEOA));
      clSetq(c, clList(I_1, I_2, I_3, L_3, I_7, I_8, I_9, clEOA)); }
    { clObject L_2, L_1, L_0;
      clSetq(L_0,
             clFuncallFunction(clSymbolFunctionValue(clSET_MIDDLEGUY),
                               a,
                               I_3,
                               clEOA));
      clSetq(L_1,
             clFuncallFunction(clSymbolFunctionValue(clSET_MIDDLEGUY),
                               b,
                               I_7,
                               clEOA));
      { clObject L_arg39612;
        clSetq(L_arg39612,
               clFuncallFunction(clSymbolFunctionValue(clMIDDLEGUY),
                                 c,
                                 clEOA));
        clSetq(L_2,
               clFuncallFunction(clSymbolFunctionValue(clSET_MIDDLEGUY),
                                 L_arg39612,
                                 clMIDDLEGUY_SYMBOL,
                                 clEOA)); }
      return(clValues(L_0, L_1, L_2, a, b, c, clEOA)); } } }

static clObject clLambda_r1_Lambda clVdecl(_ap)
{ clObject sequence, start, end, new_sequence;
  { clBeginParse(_ap);
    clSetq(sequence,
           (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_1, clEOA)));
    clSetq(start,
           (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_2, clEOA)));
    clSetq(end,
           (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_3, clEOA)));
    clSetq(new_sequence,
           (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_4, clEOA)));
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject L_2, L_1;
    { clObject L_6, L_4, L_2__R1, L_1__R1;
      clSetq(L_1__R1, sequence);
      clSetq(L_2__R1, new_sequence);
      clSetq(L_4, start);
      clSetq(L_6, end);
      clSetq(L_1,
             clList(clREPLACE, L_1__R1, L_2__R1, keySTART1, L_4,
                    keyEND1, L_6, clEOA)); }
    clSetq(L_2, new_sequence);
    return(clList(clPROGN, L_1, L_2, clEOA)); } }

static clObject clLambda_r1 clVdecl(_ap)
{ clObject L_form, L_ignored, sequence, start, end;
  { clBeginParse(_ap);
    clSetq(L_form,
           (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_1, clEOA)));
    clSetq(L_ignored,
           (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_2, clEOA)));
    { clObject L_0;
      clSetq(L_0, L_form);
      clSetq(L_form, clCdr(L_0, clEOA)); }
    if (clTrue(L_form))
      { clObject L_top39617;
        { clObject L_0;
          clSetq(L_0, L_form);
          clSetq(L_top39617, clCar(L_0, clEOA)); }
        { clObject L_0;
          clSetq(L_0, L_form);
          clSetq(L_form, clCdr(L_0, clEOA)); }
        clSetq(sequence, L_top39617); }
    else clSetq(sequence, clMissingArgs(I_1, clEOA));
    if (clTrue(L_form))
      { clObject L_top39618;
        { clObject L_0;
          clSetq(L_0, L_form);
          clSetq(L_top39618, clCar(L_0, clEOA)); }
        { clObject L_0;
          clSetq(L_0, L_form);
          clSetq(L_form, clCdr(L_0, clEOA)); }
        clSetq(start, L_top39618); }
    else clSetq(start, clMissingArgs(I_2, clEOA));
    if (clTrue(L_form))
      { clObject L_top39619;
        { clObject L_0;
          clSetq(L_0, L_form);
          clSetq(L_top39619, clCar(L_0, clEOA)); }
        { clObject L_0;
          clSetq(L_0, L_form);
          clSetq(L_form, clCdr(L_0, clEOA)); }
        clSetq(end, L_top39619); }
    else clSetq(end, clNIL);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  if (clTrue(L_form))
    { clObject L_0; clSetq(L_0, L_form); clExtraArgs(L_0, clEOA); }
  { clObject CL_temps, CL_store_temps, CL_setter;
    clSetq(CL_temps, clMakeSymbols(CONS_756, clEOA));
    clSetq(CL_store_temps, clMakeSymbols(CONS_759, clEOA));
    { clObject L_0;
      clSetq(L_0, clMakeClosure(0, clLambda_r1_Lambda, clNULL_HOOK));
      clSetq(CL_setter,
             clApply(L_0, clAppend(CL_temps, CL_store_temps, clEOA),
                     clEOA)); }
    { clObject L_1;
      { clObject L_2__R1, L_1__R1, L_0__R1;
        clSetq(L_0__R1, sequence);
        clSetq(L_1__R1, start);
        clSetq(L_2__R1, end);
        clSetq(L_1, clList(L_0__R1, L_1__R1, L_2__R1, clEOA)); }
      return(clValues(CL_temps,
                      L_1,
                      CL_store_temps,
                      CL_setter,
                      clCons(clEXAMPLE_SUBSEQ, CL_temps, clEOA),
                      clEOA)); } } }

clObject clXy clVdecl(_ap)
{ clObject L_ap, L_keys, x, y;
  { clBeginParse(_ap);
    clSetq(L_keys, clVargs(_ap));
    if (clTrue(clSetq(L_ap, clKeyArg(clX, L_keys, clEOA))))
      { clObject L_0;
        clSetq(L_0, L_ap);
        clSetq(x, clCar(L_0, clEOA)); }
    else clSetq(x, I_0);
    if (clTrue(clSetq(L_ap, clKeyArg(clY, L_keys, clEOA))))
      { clObject L_0;
        clSetq(L_0, L_ap);
        clSetq(y, clCar(L_0, clEOA)); }
    else clSetq(y, I_0);
    clCheckKeys(L_keys, CONS_637, clEOA);
    clEndParse(_ap); }
  { clObject L_2, L_1, L_0;
    clSetq(L_0, clSymbolValue(clstarXYstar, clEOA));
    clSetq(L_1, x);
    clSetq(L_2, y);
    return(clAref(L_0, L_1, L_2, clEOA)); } }

clObject clSetXy clVdecl(_ap)
{ clObject L_ap, new_value, L_keys, x, y;
  { clBeginParse(_ap);
    clSetq(new_value,
           (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_1, clEOA)));
    clSetq(L_keys, clVargs(_ap));
    if (clTrue(clSetq(L_ap, clKeyArg(clX, L_keys, clEOA))))
      { clObject L_0;
        clSetq(L_0, L_ap);
        clSetq(x, clCar(L_0, clEOA)); }
    else clSetq(x, I_0);
    if (clTrue(clSetq(L_ap, clKeyArg(clY, L_keys, clEOA))))
      { clObject L_0;
        clSetq(L_0, L_ap);
        clSetq(y, clCar(L_0, clEOA)); }
    else clSetq(y, I_0);
    clCheckKeys(L_keys, CONS_637, clEOA);
    clEndParse(_ap); }
  { clObject L_arg39629, L_arg39630, L_arg39631, L_value39628;
    clSetq(L_arg39629, clSymbolValue(clstarXYstar, clEOA));
    clSetq(L_arg39630, x);
    clSetq(L_arg39631, y);
    clSetq(L_value39628, new_value);
    return(cl_SETF_Aref(L_value39628,
                        L_arg39629,
                        L_arg39630,
                        L_arg39631,
                        clEOA)); } }

static clObject clLambda_r2_Lambda clVdecl(_ap)
{ clObject store, y, x;
  { clBeginParse(_ap);
    clSetq(store,
           (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_1, clEOA)));
    clSetq(y, (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_2, clEOA)));
    clSetq(x, (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_3, clEOA)));
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject L_5, L_3, L_1;
    clSetq(L_1, store);
    clSetq(L_3, x);
    clSetq(L_5, y);
    return(clList(clSET_XY, L_1, CONS_244, L_3, CONS_769, L_5,
                  clEOA)); } }

static clObject clLambda_r2 clVdecl(_ap)
{ clObject L_form, L_ignored, CL_subforms;
  { clBeginParse(_ap);
    clSetq(L_form,
           (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_1, clEOA)));
    clSetq(L_ignored,
           (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_2, clEOA)));
    { clObject L_0;
      clSetq(L_0, L_form);
      clSetq(L_form, clCdr(L_0, clEOA)); }
    clSetq(CL_subforms, L_form);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject CL_temps, CL_store_temps;
    clSetq(CL_temps, clMakeSymbols(CL_subforms, STR_ARG__8, clEOA));
    clSetq(CL_store_temps, clMakeSymbols(CONS_761, clEOA));
    { clObject L_3;
      { clObject L_0__R1;
        { clObject L_2__R1;
          { clObject L_0__R3;
            clSetq(L_0__R3,
                   clMakeClosure(0, clLambda_r2_Lambda, clNULL_HOOK));
            clSetq(L_2__R1,
                   clApply(L_0__R3,
                           clAppend(CL_store_temps, CONS_637, clEOA),
                           clEOA)); }
          clSetq(L_0__R1,
                 clList(clLAMBDA, CONS_762, L_2__R1, clEOA)); }
        clSetq(L_3, clCons(L_0__R1, CL_temps, clEOA)); }
      return(clValues(CL_temps,
                      CL_subforms,
                      CL_store_temps,
                      L_3,
                      clCons(clXY, CL_temps, clEOA),
                      clEOA)); } } }

clDeclareEnv(clTstSetfLong_Lambda);
static clObject clTstSetfLong_Lambda clVdecl(_ap)
{ clUseEnv(clTstSetfLong_Lambda);
  { clObject L_ap, L_keys, x, y;
    { clBeginParse(_ap);
      clSetq(L_keys, clVargs(_ap));
      if (clTrue(clSetq(L_ap, clKeyArg(clX, L_keys, clEOA))))
        { clObject L_0;
          clSetq(L_0, L_ap);
          clSetq(x, clCar(L_0, clEOA)); }
      else clSetq(x, I_0);
      if (clTrue(clSetq(L_ap, clKeyArg(clY, L_keys, clEOA))))
        { clObject L_0;
          clSetq(L_0, L_ap);
          clSetq(y, clCar(L_0, clEOA)); }
      else clSetq(y, I_0);
      clCheckKeys(L_keys, CONS_637, clEOA);
      clEndParse(_ap); }
    { clObject L_4, L_2;
      clSetq(L_2, x);
      clSetq(L_4, y);
      return(clFuncallFunction(clSymbolFunctionValue(clSET_XY),
                               clEnv(0, *L_store39640),
                               clX,
                               L_2,
                               clY,
                               L_4,
                               clEOA)); } } }

clDeclareEnv(clTstSetfLong_Lambda_r1);
static clObject clTstSetfLong_Lambda_r1 clVdecl(_ap)
{ clUseEnv(clTstSetfLong_Lambda_r1);
  { clObject L_ap, L_keys, x, y;
    { clBeginParse(_ap);
      clSetq(L_keys, clVargs(_ap));
      if (clTrue(clSetq(L_ap, clKeyArg(clX, L_keys, clEOA))))
        { clObject L_0;
          clSetq(L_0, L_ap);
          clSetq(x, clCar(L_0, clEOA)); }
      else clSetq(x, I_0);
      if (clTrue(clSetq(L_ap, clKeyArg(clY, L_keys, clEOA))))
        { clObject L_0;
          clSetq(L_0, L_ap);
          clSetq(y, clCar(L_0, clEOA)); }
      else clSetq(y, I_0);
      clCheckKeys(L_keys, CONS_637, clEOA);
      clEndParse(_ap); }
    { clObject L_4, L_2;
      clSetq(L_2, x);
      clSetq(L_4, y);
      return(clFuncallFunction(clSymbolFunctionValue(clSET_XY),
                               clEnv(0, *L_store39650),
                               clX,
                               L_2,
                               clY,
                               L_4,
                               clEOA)); } } }

clDeclareEnv(clTstSetfLong_Lambda_r2);
static clObject clTstSetfLong_Lambda_r2 clVdecl(_ap)
{ clUseEnv(clTstSetfLong_Lambda_r2);
  { clObject L_ap, L_keys, x, y;
    { clBeginParse(_ap);
      clSetq(L_keys, clVargs(_ap));
      if (clTrue(clSetq(L_ap, clKeyArg(clX, L_keys, clEOA))))
        { clObject L_0;
          clSetq(L_0, L_ap);
          clSetq(x, clCar(L_0, clEOA)); }
      else clSetq(x, I_0);
      if (clTrue(clSetq(L_ap, clKeyArg(clY, L_keys, clEOA))))
        { clObject L_0;
          clSetq(L_0, L_ap);
          clSetq(y, clCar(L_0, clEOA)); }
      else clSetq(y, I_0);
      clCheckKeys(L_keys, CONS_637, clEOA);
      clEndParse(_ap); }
    { clObject L_4, L_2;
      clSetq(L_2, x);
      clSetq(L_4, y);
      return(clFuncallFunction(clSymbolFunctionValue(clSET_XY),
                               clEnv(0, *L_store39660),
                               clX,
                               L_2,
                               clY,
                               L_4,
                               clEOA)); } } }

clObject clTstSetfLong clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject L_3, L_2, L_1, L_0;
    { clObject *L_store39640 = clMakeBinding();
      clSetq(*L_store39640, I_1);
      clSetq(L_0,
             clFuncallFunction(clMakeClosure(1,
                                             clTstSetfLong_Lambda,
                                             &clEnvHook(clTstSetfLong_Lambda),
                                             &*L_store39640),
                               clX,
                               I_1,
                               clEOA)); }
    clSetq(L_1,
           clFuncallFunction(clSymbolFunctionValue(clXY),
                             clX,
                             I_1,
                             clEOA));
    { clObject a, b;
      clSetq(a, clX);
      clSetq(b, clY);
      { clObject *L_store39650 = clMakeBinding();
        clSetq(*L_store39650, I_3);
        clFuncallFunction(clMakeClosure(1,
                                        clTstSetfLong_Lambda_r1,
                                        &clEnvHook(clTstSetfLong_Lambda_r1),
                                        &*L_store39650),
                          a,
                          I_1,
                          b,
                          I_2,
                          clEOA); }
      { clObject *L_store39660 = clMakeBinding();
        clSetq(*L_store39660, I_14);
        clSetq(L_2,
               clFuncallFunction(clMakeClosure(1,
                                               clTstSetfLong_Lambda_r2,
                                               &clEnvHook(clTstSetfLong_Lambda_r2),
                                               &*L_store39660),
                                 b,
                                 I_5,
                                 a,
                                 I_9,
                                 clEOA)); } }
    clSetq(L_3,
           clFuncallFunction(clSymbolFunctionValue(clXY),
                             clY,
                             I_0,
                             clX,
                             I_1,
                             clEOA));
    return(clValues(L_0, L_1, L_2, L_3,
                    clFuncallFunction(clSymbolFunctionValue(clXY),
                                      clX,
                                      I_1,
                                      clY,
                                      I_2,
                                      clEOA),
                    clEOA)); } }

clDeclareEnv(clLambda_r3_Lambda);
static clObject clLambda_r3_Lambda clVdecl(_ap)
{ clUseEnv(clLambda_r3_Lambda);
  { clObject store, y, x;
    { clBeginParse(_ap);
      clSetq(store,
             (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_1, clEOA)));
      clSetq(y,
             (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_2, clEOA)));
      clSetq(x,
             (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_3, clEOA)));
      if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
      clEndParse(_ap); }
    { clObject L_value39668;
      clSetq(L_value39668, clEnv(0, *zz));
      clSet(clENV, L_value39668, clEOA); }
    { clObject L_5, L_3, L_1;
      clSetq(L_1, store);
      clSetq(L_3, x);
      clSetq(L_5, y);
      return(clList(clSET_XY, L_1, keyXX, L_3, keyYY, L_5,
                    clEOA)); } } }

static clObject clLambda_r3 clVdecl(_ap)
{ clObject L_form, *zz = clMakeBinding(), CL_subforms;
  { clBeginParse(_ap);
    clSetq(L_form,
           (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_1, clEOA)));
    clSetq(*zz,
           (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_2, clEOA)));
    { clObject L_0;
      clSetq(L_0, L_form);
      clSetq(L_form, clCdr(L_0, clEOA)); }
    clSetq(CL_subforms, L_form);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject CL_temps, CL_store_temps;
    clSetq(CL_temps, clMakeSymbols(CL_subforms, STR_ARG__8, clEOA));
    clSetq(CL_store_temps, clMakeSymbols(CONS_761, clEOA));
    { clObject L_3;
      { clObject L_0__R1;
        { clObject L_2__R1;
          { clObject L_0__R3;
            clSetq(L_0__R3,
                   clMakeClosure(1,
                                 clLambda_r3_Lambda,
                                 &clEnvHook(clLambda_r3_Lambda),
                                 &*zz));
            clSetq(L_2__R1,
                   clApply(L_0__R3,
                           clAppend(CL_store_temps, CONS_637, clEOA),
                           clEOA)); }
          clSetq(L_0__R1,
                 clList(clLAMBDA, CONS_812, L_2__R1, clEOA)); }
        clSetq(L_3, clCons(L_0__R1, CL_temps, clEOA)); }
      return(clValues(CL_temps,
                      CL_subforms,
                      CL_store_temps,
                      L_3,
                      clCons(clXXY, CL_temps, clEOA),
                      clEOA)); } } }

clObject clTstSetfLongEnv clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject e;
    clSetq(e,
           clAugmentEnvironment(clNIL, keyVARIABLE, CONS_830, clEOA));
    { clObject L_0;
      clSetq(L_0, clSymbolFunction(clGET_SETF_EXPANSION, clEOA));
      clFuncall(L_0, CONS_848, e, clEOA); }
    return(clEq(e, clSymbolValue(clENV, clEOA), clEOA)); } }

clObject clLastguy clVdecl(_ap)
{ clObject x;
  { clBeginParse(_ap);
    clSetq(x, (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_1, clEOA)));
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject L_0;
    { clObject L_0__R1;
      clSetq(L_0__R1, x);
      clSetq(L_0, clLast(L_0__R1, clEOA)); }
    return(clCar(L_0, clEOA)); } }

static clObject clLambda_r4 clVdecl(_ap)
{ clObject L_form, env, x;
  { clBeginParse(_ap);
    clSetq(L_form,
           (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_1, clEOA)));
    clSetq(env,
           (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_2, clEOA)));
    { clObject L_0;
      clSetq(L_0, L_form);
      clSetq(L_form, clCdr(L_0, clEOA)); }
    if (clTrue(L_form))
      { clObject L_top39674;
        { clObject L_0;
          clSetq(L_0, L_form);
          clSetq(L_top39674, clCar(L_0, clEOA)); }
        { clObject L_0;
          clSetq(L_0, L_form);
          clSetq(L_form, clCdr(L_0, clEOA)); }
        clSetq(x, L_top39674); }
    else clSetq(x, clMissingArgs(I_1, clEOA));
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  if (clTrue(L_form))
    { clObject L_0; clSetq(L_0, L_form); clExtraArgs(L_0, clEOA); }
  (void) STRn_12;
  { clObject L_values39675, dummies, vals, newval, setter, getter;
    { clMultipleValueCall(MVC);
      clSetq(MVC, clSymbolFunctionValue(clLIST));
      { clObject L_2, L_1, L_0;
        clSetq(L_0, clSymbolFunction(clGET_SETF_EXPANSION, clEOA));
        clSetq(L_1, x);
        clSetq(L_2, env);
        clFuncall(L_0, L_1, L_2, clEOA); }
      clAccumulateValues(MVC);
      clSetq(L_values39675, clMultipleValueFuncall(MVC)); }
    clSetq(dummies, clCar(L_values39675, clEOA));
    { clObject L_0;
      { clObject L_0__R1;
        clSetq(L_0__R1, L_values39675);
        clSetq(L_0, clSetq(L_values39675, clCdr(L_0__R1, clEOA))); }
      clSetq(vals, clCar(L_0, clEOA)); }
    { clObject L_0;
      { clObject L_0__R1;
        clSetq(L_0__R1, L_values39675);
        clSetq(L_0, clSetq(L_values39675, clCdr(L_0__R1, clEOA))); }
      clSetq(newval, clCar(L_0, clEOA)); }
    { clObject L_0;
      { clObject L_0__R1;
        clSetq(L_0__R1, L_values39675);
        clSetq(L_0, clSetq(L_values39675, clCdr(L_0__R1, clEOA))); }
      clSetq(setter, clCar(L_0, clEOA)); }
    { clObject L_0;
      { clObject L_0__R1;
        clSetq(L_0__R1, L_values39675);
        clSetq(L_0, clSetq(L_values39675, clCdr(L_0__R1, clEOA))); }
      clSetq(getter, clCar(L_0, clEOA)); }
    { clObject store;
      clSetq(store, clGensym(clEOA));
      { clObject L_3, L_2;
        clSetq(L_2, clList(store, clEOA));
        { clObject L_1__R1;
          { clObject L_1__R2;
            clSetq(L_1__R2, clList(clLAST, getter, clEOA));
            clSetq(L_1__R1, clList(clRPLACA, L_1__R2, store, clEOA)); }
          clSetq(L_3, clList(clPROGN, L_1__R1, store, clEOA)); }
        return(clValues(dummies,
                        vals,
                        L_2,
                        L_3,
                        clList(clLASTGUY, getter, clEOA),
                        clEOA)); } } } }

clObject clTstDefineSetfExpander clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject a, b, c;
    clSetq(a, clList(clA, clB, clC, clD, clEOA));
    clSetq(b, clList(clX, clEOA));
    clSetq(c,
           clList(I_1, I_2, I_3, clList(I_4, I_5, I_6, clEOA), clEOA));
    { { { clObject L_0__R1;
          clSetq(L_0__R1, clLast(a, clEOA));
          clRplaca(L_0__R1, I_3, clEOA); } }
      { { clObject L_0__R1;
          clSetq(L_0__R1, clLast(b, clEOA));
          clRplaca(L_0__R1, I_7, clEOA); } }
      { { clObject L_0__R1;
          clSetq(L_0__R1,
                 clLast(clFuncallFunction(clSymbolFunctionValue(clLASTGUY),
                                          c,
                                          clEOA),
                        clEOA));
          clRplaca(L_0__R1, clLASTGUY_SYMBOL, clEOA); } }
      return(clValues(I_3,
                      I_7,
                      clLASTGUY_SYMBOL,
                      a,
                      b,
                      c,
                      clEOA)); } } }

clDeclareEnv(clTstLocalAcrossFboundary_Lambda);
static clObject clTstLocalAcrossFboundary_Lambda clVdecl(_ap)
{ clUseEnv(clTstLocalAcrossFboundary_Lambda);
  { { clBeginParse(_ap);
      if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
      clEndParse(_ap); }
    return(clValues1(clEnv(0, *a))); } }

clObject clTstLocalAcrossFboundary clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject *a = clMakeBinding(), f;
    clSetq(*a, I_1);
    clSetq(f,
           clMakeClosure(1,
                         clTstLocalAcrossFboundary_Lambda,
                         &clEnvHook(clTstLocalAcrossFboundary_Lambda),
                         &*a));
    return(clFuncall(f, clEOA)); } }

clDeclareEnv(clTstLocalAssignmentAcrossFboundary_Lambda);
static clObject clTstLocalAssignmentAcrossFboundary_Lambda clVdecl(_ap)
{ clUseEnv(clTstLocalAssignmentAcrossFboundary_Lambda);
  { clObject x;
    { clBeginParse(_ap);
      clSetq(x,
             (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_1, clEOA)));
      if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
      clEndParse(_ap); }
    return(clValues1(clSetq(clEnv(0, *a), x))); } }

clDeclareEnv(clTstLocalAssignmentAcrossFboundary_Lambda_r1);
static clObject clTstLocalAssignmentAcrossFboundary_Lambda_r1 clVdecl(_ap)
{ clUseEnv(clTstLocalAssignmentAcrossFboundary_Lambda_r1);
  { { clBeginParse(_ap);
      if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
      clEndParse(_ap); }
    return(clValues1(clEnv(0, *a))); } }

clObject clTstLocalAssignmentAcrossFboundary clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject *a = clMakeBinding(), f, f2;
    clSetq(*a, I_1);
    clSetq(f,
           clMakeClosure(1,
                         clTstLocalAssignmentAcrossFboundary_Lambda,
                         &clEnvHook(clTstLocalAssignmentAcrossFboundary_Lambda),
                         &*a));
    clSetq(f2,
           clMakeClosure(1,
                         clTstLocalAssignmentAcrossFboundary_Lambda_r1,
                         &clEnvHook(clTstLocalAssignmentAcrossFboundary_Lambda_r1),
                         &*a));
    clFuncall(f, I_3, clEOA);
    return(clFuncall(f2, clEOA)); } }

clObject clTstApplyBoundSymbol clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject f;
    clSetq(f, clplussymbol);
    return(clApply(f, CONS_521, clEOA)); } }

clObject clTstApplySymbol clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  return(clApply(clplussymbol, CONS_521, clEOA)); }

clObject clTstApplyFunction clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject L_0;
    clSetq(L_0, clSymbolFunctionValue(clplussymbol));
    return(clApply(L_0, I_3, I_5, CONS_953, clEOA)); } }

clObject clTstApplySymbol2 clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  return(clApply(clCONS, CONS_963, clEOA)); }

clObject clTstApplyNullArgs clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject L_0;
    clSetq(L_0, clSymbolFunctionValue(clplussymbol));
    return(clApply(L_0, clNIL, clEOA)); } }

static clObject clTstApplyKeys_Lambda clVdecl(_ap)
{ clObject L_ap, L_keys, a, b;
  { clBeginParse(_ap);
    clSetq(L_keys, clVargs(_ap));
    if (clTrue(clSetq(L_ap, clKeyArg(keyA, L_keys, clEOA))))
      { clObject L_0;
        clSetq(L_0, L_ap);
        clSetq(a, clCar(L_0, clEOA)); }
    else clSetq(a, clNIL);
    if (clTrue(clSetq(L_ap, clKeyArg(keyB, L_keys, clEOA))))
      { clObject L_0;
        clSetq(L_0, L_ap);
        clSetq(b, clCar(L_0, clEOA)); }
    else clSetq(b, clNIL);
    clCheckKeys(L_keys, CONS_980, clEOA);
    clEndParse(_ap); }
  { clObject L_1, L_0;
    clSetq(L_0, a);
    clSetq(L_1, b);
    return(clList(L_0, L_1, clEOA)); } }

clObject clTstApplyKeys clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject L_0;
    clSetq(L_0, clMakeClosure(0, clTstApplyKeys_Lambda, clNULL_HOOK));
    return(clApply(L_0, CONS_979, clEOA)); } }

clObject clTstFuncallBoundSymbol clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject f;
    clSetq(f, clplussymbol);
    return(clFuncall(f, I_1, I_2, clEOA)); } }

clObject clTstFuncallSymbol clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  return(clPLUS_FUNC(I_1, I_2, clEOA)); }

clObject clTstFuncallFunction clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  return(clPLUS_FUNC(I_3, I_5, I_2, I_7, I_3, clEOA)); }

clObject clTstFuncallSymbol2 clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  return(clCons(CONS_964, I_4, clEOA)); }

clObject clTstFuncallNullArgs clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  return(clPLUS_FUNC(clEOA)); }

static clObject clTstFuncallKeys_Lambda clVdecl(_ap)
{ clObject L_ap, L_keys, a, b;
  { clBeginParse(_ap);
    clSetq(L_keys, clVargs(_ap));
    if (clTrue(clSetq(L_ap, clKeyArg(keyA, L_keys, clEOA))))
      { clObject L_0;
        clSetq(L_0, L_ap);
        clSetq(a, clCar(L_0, clEOA)); }
    else clSetq(a, clNIL);
    if (clTrue(clSetq(L_ap, clKeyArg(keyB, L_keys, clEOA))))
      { clObject L_0;
        clSetq(L_0, L_ap);
        clSetq(b, clCar(L_0, clEOA)); }
    else clSetq(b, clNIL);
    clCheckKeys(L_keys, CONS_980, clEOA);
    clEndParse(_ap); }
  { clObject L_1, L_0;
    clSetq(L_0, a);
    clSetq(L_1, b);
    return(clList(L_0, L_1, clEOA)); } }

clObject clTstFuncallKeys clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  return(clFuncallFunction(clMakeClosure(0,
                                         clTstFuncallKeys_Lambda,
                                         clNULL_HOOK),
                           keyB,
                           I_3,
                           clEOA)); }

clObject clTstCallArgumentsLimit clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  return(clFuncallFunction(clSymbolFunctionValue(clTYPEP),
                           I_50,
                           CONS_1008,
                           clEOA)); }

clObject clManyParameters clVdecl(_ap)
{ clObject a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14,
  a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28,
  a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42,
  a43, a44, a45, a46, a47, a48, a49;
  { clBeginParse(_ap);
    clSetq(a1, (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_1, clEOA)));
    clSetq(a2, (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_2, clEOA)));
    clSetq(a3, (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_3, clEOA)));
    clSetq(a4, (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_4, clEOA)));
    clSetq(a5, (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_5, clEOA)));
    clSetq(a6, (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_6, clEOA)));
    clSetq(a7, (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_7, clEOA)));
    clSetq(a8, (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_8, clEOA)));
    clSetq(a9, (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_9, clEOA)));
    clSetq(a10,
           (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_10, clEOA)));
    clSetq(a11,
           (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_11, clEOA)));
    clSetq(a12,
           (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_12, clEOA)));
    clSetq(a13,
           (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_13, clEOA)));
    clSetq(a14,
           (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_14, clEOA)));
    clSetq(a15,
           (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_15, clEOA)));
    clSetq(a16,
           (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_16, clEOA)));
    clSetq(a17,
           (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_17, clEOA)));
    clSetq(a18,
           (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_18, clEOA)));
    clSetq(a19,
           (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_19, clEOA)));
    clSetq(a20,
           (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_20, clEOA)));
    clSetq(a21,
           (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_21, clEOA)));
    clSetq(a22,
           (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_22, clEOA)));
    clSetq(a23,
           (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_23, clEOA)));
    clSetq(a24,
           (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_24, clEOA)));
    clSetq(a25,
           (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_25, clEOA)));
    clSetq(a26,
           (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_26, clEOA)));
    clSetq(a27,
           (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_27, clEOA)));
    clSetq(a28,
           (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_28, clEOA)));
    clSetq(a29,
           (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_29, clEOA)));
    clSetq(a30,
           (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_30, clEOA)));
    clSetq(a31,
           (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_31, clEOA)));
    clSetq(a32,
           (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_32, clEOA)));
    clSetq(a33,
           (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_33, clEOA)));
    clSetq(a34,
           (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_34, clEOA)));
    clSetq(a35,
           (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_35, clEOA)));
    clSetq(a36,
           (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_36, clEOA)));
    clSetq(a37,
           (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_37, clEOA)));
    clSetq(a38,
           (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_38, clEOA)));
    clSetq(a39,
           (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_39, clEOA)));
    clSetq(a40,
           (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_40, clEOA)));
    clSetq(a41,
           (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_41, clEOA)));
    clSetq(a42,
           (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_42, clEOA)));
    clSetq(a43,
           (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_43, clEOA)));
    clSetq(a44,
           (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_44, clEOA)));
    clSetq(a45,
           (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_45, clEOA)));
    clSetq(a46,
           (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_46, clEOA)));
    clSetq(a47,
           (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_47, clEOA)));
    clSetq(a48,
           (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_48, clEOA)));
    clSetq(a49,
           (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_49, clEOA)));
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject L_1, L_0;
    clSetq(L_0, a1);
    clSetq(L_1, a49);
    return(clValues(L_0, L_1, clEOA)); } }

clObject clTstCallArgumentsLimitWorks clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  return(clFuncallFunction(clSymbolFunctionValue(clMANY_PARAMETERS),
                           I_1,
                           I_2,
                           I_3,
                           I_4,
                           I_5,
                           I_6,
                           I_7,
                           I_8,
                           I_9,
                           I_10,
                           I_11,
                           I_12,
                           I_13,
                           I_14,
                           I_15,
                           I_16,
                           I_17,
                           I_18,
                           I_19,
                           I_20,
                           I_21,
                           I_22,
                           I_23,
                           I_24,
                           I_25,
                           I_26,
                           I_27,
                           I_28,
                           I_29,
                           I_30,
                           I_31,
                           I_32,
                           I_33,
                           I_34,
                           I_35,
                           I_36,
                           I_37,
                           I_38,
                           I_39,
                           I_40,
                           I_41,
                           I_42,
                           I_43,
                           I_44,
                           I_45,
                           I_46,
                           I_47,
                           I_48,
                           I_49,
                           clEOA)); }

clObject clTstEmptySequence clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  return(clValues1(clNIL)); }

clObject clTstSequence clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  (void) I_1;
  clFuncallFunction(clSymbolFunctionValue(clADD), I_1, I_2, clEOA);
  return(clValues1(I_9)); }

clObject clTstSequenceOrder clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject x;
    clSetq(x, clNIL);
    { clObject L_1;
      clSetq(x, I_1);
      clSetq(x, I_2);
      clSetq(L_1, x);
      return(clList(I_3, L_1, clEOA)); } } }

clObject clTstProg1 clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject temp;
    clSetq(temp, I_1);
    { clObject L_3, L_2, L_1, L_0;
      { clObject L_first_val39695;
        clSetq(L_first_val39695, temp);
        { clObject L_0__R1;
          clSetq(L_0__R1, temp);
          clSetq(temp,
                 clFuncallFunction(clSymbolFunctionValue(clADD),
                                   L_0__R1,
                                   I_1,
                                   clEOA)); }
        clSetq(L_0, L_first_val39695); }
      { clObject L_first_val39696;
        clSetq(L_first_val39696, temp);
        clSetq(temp, clNIL);
        clSetq(L_1, L_first_val39696); }
      clSetq(L_2, temp);
      { clObject L_first_val39697;
        clSetq(L_first_val39697, clValues(I_1, I_2, I_3, clEOA));
        (void) I_4;
        clSetq(L_3, L_first_val39697); }
      return(clValues(L_0, L_1, L_2, L_3, clEOA)); } } }

clObject clTstProg1a clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject temp;
    clSetq(temp, clList(clA, clB, clC, clEOA));
    { clObject L_0;
      { clObject L_first_val39698;
        clSetq(L_first_val39698, clCar(temp, clEOA));
        (clRplaca(temp, clALPHA, clEOA), clALPHA);
        clSetq(L_0, L_first_val39698); }
      return(clValues(L_0, temp, clEOA)); } } }

static clObject clTstProg1b_SwapSymbolValues clVdecl(_ap)
{ clObject x, y;
  { clBeginParse(_ap);
    clSetq(x, (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_1, clEOA)));
    clSetq(y, (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_2, clEOA)));
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject L_arg39702, L_value39701;
    clSetq(L_arg39702, x);
    { clObject L_first_val39703;
      { clObject L_0;
        clSetq(L_0, y);
        clSetq(L_first_val39703, clSymbolValue(L_0, clEOA)); }
      { clObject L_arg39705, L_value39704;
        clSetq(L_arg39705, y);
        { clObject L_0;
          clSetq(L_0, x);
          clSetq(L_value39704, clSymbolValue(L_0, clEOA)); }
        clSet(L_arg39705, L_value39704, clEOA); }
      clSetq(L_value39701, L_first_val39703); }
    return(clSet(L_arg39702, L_value39701, clEOA)); } }

clObject clTstProg1b clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject _SwapSymbolValues_;
    clSetq(_SwapSymbolValues_,
           clMakeClosure(0,
                         clTstProg1b_SwapSymbolValues,
                         clNULL_HOOK));
    { clObject STARfooSTAR, STARbarSTAR;
      clSetq(STARfooSTAR, I_1);
      clSetq(STARbarSTAR, I_2);
      clDbind(clstarBARstar);
      clSetSymbolValueValue(clstarBARstar, STARbarSTAR);
      clDbind(clstarFOOstar);
      clSetSymbolValueValue(clstarFOOstar, STARfooSTAR);
      clFuncallFunction(_SwapSymbolValues_,
                        clstarFOOstar,
                        clstarBARstar,
                        clEOA);
      { clObject L_0;
        clSetq(L_0, clSymbolValue(clstarFOOstar, clEOA));
        clUnwindReturn(clValues(L_0,
                                clSymbolValue(clstarBARstar, clEOA),
                                clEOA),
                       2); } } } }

clObject clTstProg2 clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject temp;
    clSetq(temp, I_1);
    { clObject L_2, L_1, L_0;
      { clObject L_0__R1;
        clSetq(L_0__R1, temp);
        clSetq(temp,
               clFuncallFunction(clSymbolFunctionValue(clADD),
                                 L_0__R1,
                                 I_1,
                                 clEOA)); }
      { clObject L_secondval39706;
        { clObject L_0__R1;
          clSetq(L_0__R1, temp);
          clSetq(L_secondval39706,
                 clSetq(temp,
                        clFuncallFunction(clSymbolFunctionValue(clADD),
                                          L_0__R1,
                                          I_1,
                                          clEOA))); }
        { clObject L_0__R1;
          clSetq(L_0__R1, temp);
          clSetq(temp,
                 clFuncallFunction(clSymbolFunctionValue(clADD),
                                   L_0__R1,
                                   I_1,
                                   clEOA)); }
        clSetq(L_0, L_secondval39706); }
      clSetq(L_1, temp);
      (void) I_1;
      { clObject L_secondval39707;
        clSetq(L_secondval39707, clValues(I_2, I_3, I_4, clEOA));
        (void) I_5;
        clSetq(L_2, L_secondval39707); }
      return(clValues(L_0, L_1, L_2, clEOA)); } } }

clObject clTstEmptyLet clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  return(clValues1(clNIL)); }

clObject clTstEmptyBindings clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  return(clValues1(I_3)); }

clObject clTstBindings clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject a, b;
    clSetq(a, I_1);
    clSetq(b, I_2);
    return(clList(a, b, clEOA)); } }

clObject clListSpecials clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject L_0;
    clSetq(L_0, clSymbolValue(clA, clEOA));
    return(clList(L_0, clSymbolValue(clB, clEOA), clEOA)); } }

clObject clTstSpecialBinding clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject a, b;
    clSetq(a, I_10);
    clSetq(b, I_20);
    clDbind(clB);
    clSetSymbolValueValue(clB, b);
    clDbind(clA);
    clSetSymbolValueValue(clA, a);
    clUnwindReturn(clFuncallFunction(clSymbolFunctionValue(clLIST_SPECIALS),
                                     clEOA),
                   2); } }

clObject clTstSpecialBinding2 clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject a, b;
    clSetq(a, I_10);
    clSetq(b, I_20);
    clDbind(clB);
    clSetSymbolValueValue(clB, b);
    clDbind(clA);
    clSetSymbolValueValue(clA, a);
    { clObject a__R1, d1, b__R1, d2;
      clSetq(a__R1, I_1);
      clSetq(d1,
             clFuncallFunction(clSymbolFunctionValue(clLIST_SPECIALS),
                               clEOA));
      clSetq(b__R1, I_2);
      clSetq(d2,
             clFuncallFunction(clSymbolFunctionValue(clLIST_SPECIALS),
                               clEOA));
      clDbind(clB);
      clSetSymbolValueValue(clB, b__R1);
      clDbind(clA);
      clSetSymbolValueValue(clA, a__R1);
      clUnwindReturn(clList(d1,
                            d2,
                            clFuncallFunction(clSymbolFunctionValue(clLIST_SPECIALS),
                                              clEOA),
                            clEOA),
                     4); } } }

clObject clTstBindingOrder clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject a, b;
    clSetq(a, clSetSymbolValueValue(clX, I_1));
    clSetq(b, clSetSymbolValueValue(clX, I_2));
    return(clList(a, b, clSymbolValue(clX, clEOA), clEOA)); } }

clObject clTstSpecialBindingOrder clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject a, b;
    clSetq(a, clSetSymbolValueValue(clX, I_1));
    clSetq(b, clSetSymbolValueValue(clX, I_2));
    clDbind(clB);
    clSetSymbolValueValue(clB, b);
    clDbind(clA);
    clSetSymbolValueValue(clA, a);
    { clObject L_1, L_0;
      clSetq(L_0, clSymbolValue(clA, clEOA));
      clSetq(L_1, clSymbolValue(clB, clEOA));
      clUnwindReturn(clList(L_0,
                            L_1,
                            clSymbolValue(clX, clEOA),
                            clEOA),
                     2); } } }

clObject clTstMixedBindingOrder clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject a, b;
    clSetq(a, clSetSymbolValueValue(clX, I_1));
    clSetq(b, clSetSymbolValueValue(clX, I_2));
    clDbind(clB);
    clSetSymbolValueValue(clB, b);
    { clObject L_1;
      clSetq(L_1, clSymbolValue(clB, clEOA));
      clUnwindReturn(clList(a, L_1, clSymbolValue(clX, clEOA), clEOA),
                     1); } } }

clObject clTstMixedBindingOrder2 clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject a, b;
    clSetq(a, clSetSymbolValueValue(clX, I_1));
    clSetq(b, clSetSymbolValueValue(clX, I_2));
    clDbind(clA);
    clSetSymbolValueValue(clA, a);
    { clObject L_0;
      clSetq(L_0, clSymbolValue(clA, clEOA));
      clUnwindReturn(clList(L_0, b, clSymbolValue(clX, clEOA), clEOA),
                     1); } } }

clObject clTstNestedAndEmptyLets clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject a, b;
    clSetq(a, I_1);
    clSetq(b, I_2);
    { clObject a__R1, b__R1, c;
      clSetq(a__R1, I_9);
      clSetq(b__R1, a);
      clSetq(c, I_3);
      return(clList(a__R1, b__R1, c, clEOA)); } } }

clObject clTstMissingInits clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject a, b;
    clSetq(a, clNIL);
    clSetq(b, clNIL);
    return(clList(a, b, clEOA)); } }

clObject clTstEmptyLetSTAR clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  return(clValues1(clNIL)); }

clObject clTstEmptyBindingsSTAR clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  return(clValues1(I_3)); }

clObject clTstBindingsSTAR clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject a, b;
    clSetq(a, I_1);
    clSetq(b, I_2);
    return(clList(a, b, clEOA)); } }

clObject clTstSpecialBindingSTAR clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clDbind(clA);
    clSetSymbolValueValue(clA, I_10);
    clDbind(clB);
    clSetSymbolValueValue(clB, I_20);
    clUnwindReturn(clFuncallFunction(clSymbolFunctionValue(clLIST_SPECIALS),
                                     clEOA),
                   2); } }

clObject clTstSpecialBinding2STAR clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject a, b;
    clSetq(a, I_10);
    clSetq(b, I_20);
    clDbind(clB);
    clSetSymbolValueValue(clB, b);
    clDbind(clA);
    clSetSymbolValueValue(clA, a);
    { clObject d1, d2;
      clDbind(clA);
      clSetSymbolValueValue(clA, I_1);
      clSetq(d1,
             clFuncallFunction(clSymbolFunctionValue(clLIST_SPECIALS),
                               clEOA));
      clDbind(clB);
      clSetSymbolValueValue(clB, I_2);
      clSetq(d2,
             clFuncallFunction(clSymbolFunctionValue(clLIST_SPECIALS),
                               clEOA));
      clUnwindReturn(clList(d1,
                            d2,
                            clFuncallFunction(clSymbolFunctionValue(clLIST_SPECIALS),
                                              clEOA),
                            clEOA),
                     4); } } }

clObject clTstBindingOrderSTAR clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject a, b;
    clSetq(a, clSetSymbolValueValue(clX, I_1));
    clSetq(b, clSetSymbolValueValue(clX, I_2));
    return(clList(a, b, clSymbolValue(clX, clEOA), clEOA)); } }

clObject clTstSpecialBindingOrderSTAR clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clDbind(clA);
    clSetSymbolValueValue(clA, clSetSymbolValueValue(clX, I_1));
    clDbind(clB);
    clSetSymbolValueValue(clB, clSetSymbolValueValue(clX, I_2));
    { clObject L_1, L_0;
      clSetq(L_0, clSymbolValue(clA, clEOA));
      clSetq(L_1, clSymbolValue(clB, clEOA));
      clUnwindReturn(clList(L_0,
                            L_1,
                            clSymbolValue(clX, clEOA),
                            clEOA),
                     2); } } }

clObject clTstMixedBindingOrderSTAR clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject a;
    clSetq(a, clSetSymbolValueValue(clX, I_1));
    clDbind(clB);
    clSetSymbolValueValue(clB, clSetSymbolValueValue(clX, I_2));
    { clObject L_1;
      clSetq(L_1, clSymbolValue(clB, clEOA));
      clUnwindReturn(clList(a, L_1, clSymbolValue(clX, clEOA), clEOA),
                     1); } } }

clObject clTstMixedBindingOrder2STAR clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject b;
    clDbind(clA);
    clSetSymbolValueValue(clA, clSetSymbolValueValue(clX, I_1));
    clSetq(b, clSetSymbolValueValue(clX, I_2));
    { clObject L_0;
      clSetq(L_0, clSymbolValue(clA, clEOA));
      clUnwindReturn(clList(L_0, b, clSymbolValue(clX, clEOA), clEOA),
                     1); } } }

clObject clTstNestedAndEmptyLetsSTAR clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject a, b;
    clSetq(a, I_1);
    clSetq(b, I_2);
    { clObject a__R1, b__R1, c;
      clSetq(a__R1, I_9);
      clSetq(b__R1, a__R1);
      clSetq(c, I_3);
      return(clList(a__R1, b__R1, c, clEOA)); } } }

clObject clTstMissingInitsSTAR clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject a, b;
    clSetq(a, clNIL);
    clSetq(b, clNIL);
    return(clList(a, b, clEOA)); } }

clObject clTstEmptyProgv clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject vals, symbols;
    clSetq(symbols, clNIL);
    clSetq(vals, clNIL);
    { clProgvStart(PROGV, symbols, vals);
      clValues1(clNIL);
      clProgvEnd(PROGV);
      return(clSavedValue(PROGV)); } } }

clObject clTstNoProgvBindings clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject vals, symbols;
    clSetq(symbols, clNIL);
    clSetq(vals, clNIL);
    { clProgvStart(PROGV, symbols, vals);
      clValues1(I_3);
      clProgvEnd(PROGV);
      return(clSavedValue(PROGV)); } } }

clObject clReportProgvSpecials clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject L_2, L_1, L_0;
    clSetq(L_0, clSymbolValue(clA, clEOA));
    clSetq(L_1, clSymbolValue(clB, clEOA));
    clSetq(L_2,
           (clTrue(clBoundp(clC, clEOA)) ? clSymbolValue(clC, clEOA) :
            I_99));
    return(clList(L_0, L_1, L_2, clEOA)); } }

clObject clTstProgv clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject vals, symbols;
    clSetq(symbols, CONS_321);
    clSetq(vals, CONS_326);
    { clProgvStart(PROGV, symbols, vals);
      clFuncallFunction(clSymbolFunctionValue(clREPORT_PROGV_SPECIALS),
                        clEOA);
      clProgvEnd(PROGV);
      return(clSavedValue(PROGV)); } } }

clObject clTstMissingProgvValues clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  clMakunbound(clC, clEOA);
  { clObject vals, symbols;
    clSetq(symbols, CONS_321);
    clSetq(vals, CONS_521);
    { clProgvStart(PROGV, symbols, vals);
      clFuncallFunction(clSymbolFunctionValue(clREPORT_PROGV_SPECIALS),
                        clEOA);
      clProgvEnd(PROGV);
      return(clSavedValue(PROGV)); } } }

clObject clTstExtraProgvValues clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject vals, symbols;
    clSetq(symbols, CONS_321);
    clSetq(vals, CONS_1355);
    { clProgvStart(PROGV, symbols, vals);
      clFuncallFunction(clSymbolFunctionValue(clREPORT_PROGV_SPECIALS),
                        clEOA);
      clProgvEnd(PROGV);
      return(clSavedValue(PROGV)); } } }

static clObject clTstFlet_PLUS_FUNC clVdecl(_ap)
{ clObject a, b;
  { clBeginParse(_ap);
    clSetq(a, (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_1, clEOA)));
    clSetq(b, (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_2, clEOA)));
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject L_1, L_0;
    clSetq(L_0, a);
    clSetq(L_1, b);
    return(clPLUS_FUNC(L_0, L_1, I_1, clEOA)); } }

clObject clTstFlet clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject _PLUS_FUNC_;
    clSetq(_PLUS_FUNC_,
           clMakeClosure(0, clTstFlet_PLUS_FUNC, clNULL_HOOK));
    return(clFuncallFunction(_PLUS_FUNC_, I_1, I_2, clEOA)); } }

clDeclareEnv(clTstLabels_Foo);
static clObject clTstLabels_Foo clVdecl(_ap)
{ clUseEnv(clTstLabels_Foo);
  { clObject a, b;
    { clBeginParse(_ap);
      clSetq(a,
             (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_1, clEOA)));
      clSetq(b,
             (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_2, clEOA)));
      if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
      clEndParse(_ap); }
    if (clTrue(b))
      { clObject L_1, L_0;
        clSetq(L_0, a);
        clSetq(L_1, b);
        return(clFuncallFunction(clEnv(0, *_Bar_),
                                 L_0,
                                 L_1,
                                 I_1,
                                 clEOA)); }
    else return(clValues1(a)); } }

clDeclareEnv(clTstLabels_Bar);
static clObject clTstLabels_Bar clVdecl(_ap)
{ clUseEnv(clTstLabels_Bar);
  { clObject a, b, c;
    { clBeginParse(_ap);
      clSetq(a,
             (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_1, clEOA)));
      clSetq(b,
             (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_2, clEOA)));
      clSetq(c,
             (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_3, clEOA)));
      if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
      clEndParse(_ap); }
    { clObject L_2, L_1, L_0;
      clSetq(L_0, a);
      clSetq(L_1, b);
      { clObject L_0__R1;
        clSetq(L_0__R1, c);
        clSetq(L_2,
               clFuncallFunction(clEnv(0, *_Foo_),
                                 L_0__R1,
                                 clNIL,
                                 clEOA)); }
      return(clList(L_0, L_1, L_2, clEOA)); } } }

clObject clTstLabels clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject *_Bar_ = clMakeBinding(), *_Foo_ = clMakeBinding();
    clSetq(*_Foo_,
           clMakeClosure(1,
                         clTstLabels_Foo,
                         &clEnvHook(clTstLabels_Foo),
                         &*_Bar_));
    clSetq(*_Bar_,
           clMakeClosure(1,
                         clTstLabels_Bar,
                         &clEnvHook(clTstLabels_Bar),
                         &*_Foo_));
    return(clFuncallFunction(*_Foo_, I_3, I_2, clEOA)); } }

clObject clTstMacrolet clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  return(clPLUS_FUNC(I_1, I_2, I_1, clEOA)); }

clObject clTstSymbolMacrolet clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject L_1;
    { clObject pollyanna;
      clSetq(pollyanna, clTWO_SHOES);
      clSetq(L_1, pollyanna); }
    return(clList(clGOODY, L_1, clEOA)); } }

clObject clTstTrueIf clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  if (clTrue(clT))
    return(clValues1(I_1));
  else return(clError(STR_here__14, clEOA)); }

clObject clTstFalseIf clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  if (clTrue(clNIL))
    return(clError(STR_here__14, clEOA));
  else return(clValues1(I_2)); }

clObject clTstUnusedMissingConsequent clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  if (clTrue(clT))
    return(clValues1(I_1));
  else return(clValues1(clNIL)); }

clObject clTstUsedMissingConsequent clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  if (clTrue(clNIL))
    return(clError(STR_here__14, clEOA));
  else return(clValues1(clNIL)); }

clObject clTstWhen clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject L_5, L_3, L_2, L_1, L_0;
    clSetq(L_0, (clTrue(clT) ? clHELLO : clNIL));
    clSetq(L_1, (clTrue(clNIL) ? clHELLO : clNIL));
    clSetq(L_2, (clTrue(clT) ? clNIL : clNIL));
    { clObject x;
      clSetq(x, I_0);
      { clObject L_1__R1, L_0__R1;
        if (clTrue(clT))
          { { clObject L_0__R2;
              clSetq(L_0__R2, x);
              clSetq(x,
                     clFuncallFunction(clSymbolFunctionValue(clADD),
                                       L_0__R2,
                                       I_1,
                                       clEOA)); }
            { clObject L_0__R2;
              clSetq(L_0__R2, x);
              clSetq(x,
                     clFuncallFunction(clSymbolFunctionValue(clADD),
                                       L_0__R2,
                                       I_1,
                                       clEOA)); }
            clSetq(L_0__R1, I_3); }
        else clSetq(L_0__R1, clNIL);
        clSetq(L_1__R1, x);
        clSetq(L_3, clList(L_0__R1, L_1__R1, clEOA)); } }
    { clObject x;
      clSetq(x, I_3);
      { clObject L_7, L_6, L_5__R1, L_4__R1, L_3__R1, L_2__R1, L_1__R1,
        L_0__R1;
        if (clTrue(clOddp(x, clEOA)))
          { { clObject L_0__R2;
              clSetq(L_0__R2, x);
              clSetq(x,
                     clFuncallFunction(clSymbolFunctionValue(clADD),
                                       L_0__R2,
                                       I_1,
                                       clEOA)); }
            { clObject L_0__R2;
              clSetq(L_0__R2, x);
              clSetq(L_0__R1, clList(L_0__R2, clEOA)); } }
        else clSetq(L_0__R1, clNIL);
        { clObject L_test;
          { clObject L_0__R2;
            clSetq(L_0__R2, x);
            clSetq(L_test, clOddp(L_0__R2, clEOA)); }
          if (clTrue(L_test))
            { { clObject L_0__R2;
                clSetq(L_0__R2, x);
                clSetq(x,
                       clFuncallFunction(clSymbolFunctionValue(clADD),
                                         L_0__R2,
                                         I_1,
                                         clEOA)); }
              { clObject L_0__R2;
                clSetq(L_0__R2, x);
                clSetq(L_1__R1, clList(L_0__R2, clEOA)); } }
          else clSetq(L_1__R1, clNIL); }
        { clObject L_test;
          { clObject L_0__R2;
            { clObject L_0__R3;
              clSetq(L_0__R3, x);
              clSetq(L_0__R2, clOddp(L_0__R3, clEOA)); }
            clSetq(L_test, clNot(L_0__R2, clEOA)); }
          if (clTrue(L_test))
            { { clObject L_0__R2;
                clSetq(L_0__R2, x);
                clSetq(x,
                       clFuncallFunction(clSymbolFunctionValue(clADD),
                                         L_0__R2,
                                         I_1,
                                         clEOA)); }
              { clObject L_0__R2;
                clSetq(L_0__R2, x);
                clSetq(L_2__R1, clList(L_0__R2, clEOA)); } }
          else clSetq(L_2__R1, clNIL); }
        { clObject L_test;
          { clObject L_0__R2;
            { clObject L_0__R3;
              clSetq(L_0__R3, x);
              clSetq(L_0__R2, clOddp(L_0__R3, clEOA)); }
            clSetq(L_test, clNot(L_0__R2, clEOA)); }
          if (clTrue(L_test))
            { { clObject L_0__R2;
                clSetq(L_0__R2, x);
                clSetq(x,
                       clFuncallFunction(clSymbolFunctionValue(clADD),
                                         L_0__R2,
                                         I_1,
                                         clEOA)); }
              { clObject L_0__R2;
                clSetq(L_0__R2, x);
                clSetq(L_3__R1, clList(L_0__R2, clEOA)); } }
          else clSetq(L_3__R1, clNIL); }
        { clObject L_test;
          { clObject L_0__R2;
            clSetq(L_0__R2, x);
            clSetq(L_test, clOddp(L_0__R2, clEOA)); }
          if (clTrue(L_test))
            { clObject L_0__R2;
              clSetq(L_0__R2, x);
              clSetq(L_4__R1,
                     clSetq(x,
                            clFuncallFunction(clSymbolFunctionValue(clADD),
                                              L_0__R2,
                                              I_1,
                                              clEOA))); }
          else
            { clObject L_0__R2;
              clSetq(L_0__R2, x);
              clSetq(L_4__R1, clList(L_0__R2, clEOA)); } }
        { clObject L_test;
          { clObject L_0__R2;
            clSetq(L_0__R2, x);
            clSetq(L_test, clOddp(L_0__R2, clEOA)); }
          if (clTrue(L_test))
            { clObject L_0__R2;
              clSetq(L_0__R2, x);
              clSetq(L_5__R1,
                     clSetq(x,
                            clFuncallFunction(clSymbolFunctionValue(clADD),
                                              L_0__R2,
                                              I_1,
                                              clEOA))); }
          else
            { clObject L_0__R2;
              clSetq(L_0__R2, x);
              clSetq(L_5__R1, clList(L_0__R2, clEOA)); } }
        { clObject L_test;
          { clObject L_0__R2;
            { clObject L_0__R3;
              clSetq(L_0__R3, x);
              clSetq(L_0__R2, clOddp(L_0__R3, clEOA)); }
            clSetq(L_test, clNot(L_0__R2, clEOA)); }
          if (clTrue(L_test))
            { clObject L_0__R2;
              clSetq(L_0__R2, x);
              clSetq(L_6,
                     clSetq(x,
                            clFuncallFunction(clSymbolFunctionValue(clADD),
                                              L_0__R2,
                                              I_1,
                                              clEOA))); }
          else
            { clObject L_0__R2;
              clSetq(L_0__R2, x);
              clSetq(L_6, clList(L_0__R2, clEOA)); } }
        { clObject L_test;
          { clObject L_0__R2;
            { clObject L_0__R3;
              clSetq(L_0__R3, x);
              clSetq(L_0__R2, clOddp(L_0__R3, clEOA)); }
            clSetq(L_test, clNot(L_0__R2, clEOA)); }
          if (clTrue(L_test))
            { clObject L_0__R2;
              clSetq(L_0__R2, x);
              clSetq(L_7,
                     clSetq(x,
                            clFuncallFunction(clSymbolFunctionValue(clADD),
                                              L_0__R2,
                                              I_1,
                                              clEOA))); }
          else
            { clObject L_0__R2;
              clSetq(L_0__R2, x);
              clSetq(L_7, clList(L_0__R2, clEOA)); } }
        clSetq(L_5,
               clList(L_0__R1,
                      L_1__R1,
                      L_2__R1,
                      L_3__R1,
                      L_4__R1,
                      L_5__R1,
                      L_6,
                      L_7,
                      clEOA)); } }
    return(clValues(L_0, L_1, L_2, L_3, clNIL, L_5, clEOA)); } }

clObject clTstUnless clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject L_4, L_2, L_1, L_0;
    clSetq(L_0, (clTrue(clNot(clT, clEOA)) ? clHELLO : clNIL));
    clSetq(L_1, (clTrue(clNot(clNIL, clEOA)) ? clHELLO : clNIL));
    clSetq(L_2, (clTrue(clNot(clNIL, clEOA)) ? clNIL : clNIL));
    { clObject x;
      clSetq(x, I_0);
      { clObject L_1__R1, L_0__R1;
        if (clTrue(clNot(clNIL, clEOA)))
          { { clObject L_0__R2;
              clSetq(L_0__R2, x);
              clSetq(x,
                     clFuncallFunction(clSymbolFunctionValue(clADD),
                                       L_0__R2,
                                       I_1,
                                       clEOA)); }
            { clObject L_0__R2;
              clSetq(L_0__R2, x);
              clSetq(x,
                     clFuncallFunction(clSymbolFunctionValue(clADD),
                                       L_0__R2,
                                       I_1,
                                       clEOA)); }
            clSetq(L_0__R1, I_3); }
        else clSetq(L_0__R1, clNIL);
        clSetq(L_1__R1, x);
        clSetq(L_4, clList(L_0__R1, L_1__R1, clEOA)); } }
    return(clValues(L_0, L_1, L_2, clNIL, L_4, clEOA)); } }

clObject clTstEmptyCond clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  return(clValues1(clNIL)); }

clObject clTstEmptyCondClause clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  if (clTrue(I_3))
    return(clValues1(I_3));
  else return(clValues1(clNIL)); }

clObject clTstEmptyCondClauseValues clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject L_test39716;
    clSetq(L_test39716, clValues(I_1, I_2, I_3, clEOA));
    if (clTrue(L_test39716))
      return(clValues1(L_test39716));
    else return(clValues1(clNIL)); } }

clObject clTstCondValues clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject a;
    clSetq(a, I_0);
    if (clTrue(clValues(I_1, I_2, I_3, clEOA)))
      { { clObject L_1, L_0;
          { clObject L_0__R1;
            clSetq(L_0__R1, a);
            clSetq(L_0,
                   clSetq(a,
                          clFuncallFunction(clSymbolFunctionValue(clADD),
                                            L_0__R1,
                                            I_1,
                                            clEOA))); }
          { clObject L_0__R1;
            clSetq(L_0__R1, a);
            clSetq(L_1,
                   clSetq(a,
                          clFuncallFunction(clSymbolFunctionValue(clADD),
                                            L_0__R1,
                                            I_1,
                                            clEOA))); }
          clValues(L_0, L_1, clEOA); }
        { clObject L_0;
          clSetq(L_0, a);
          clSetq(a,
                 clFuncallFunction(clSymbolFunctionValue(clADD),
                                   L_0,
                                   I_1,
                                   clEOA)); }
        { clObject L_1, L_0;
          { clObject L_0__R1;
            clSetq(L_0__R1, a);
            clSetq(L_0,
                   clSetq(a,
                          clFuncallFunction(clSymbolFunctionValue(clADD),
                                            L_0__R1,
                                            I_1,
                                            clEOA))); }
          clSetq(L_1, a);
          return(clValues(L_0, L_1, clEOA)); } }
    else return(clValues1(clNIL)); } }

clObject clTstCondNormal clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject a, b;
    clSetq(a, I_0);
    clSetq(b, I_0);
    { clObject L_test;
      { clObject L_test__R1;
        { clObject L_0;
          clSetq(L_0, a);
          clSetq(L_test__R1,
                 clSetq(a,
                        clFuncallFunction(clSymbolFunctionValue(clADD),
                                          L_0,
                                          I_1,
                                          clEOA))); }
        clSetq(L_test, (clTrue(L_test__R1) ? clNIL : clNIL)); }
      if (clTrue(L_test))
        { clObject L_0;
          clSetq(L_0, b);
          return(clValues1(clSetq(b,
                                  clFuncallFunction(clSymbolFunctionValue(clADD),
                                                    L_0,
                                                    I_1,
                                                    clEOA)))); }
      else
        { clObject L_test__R1;
          { clObject L_0;
            { clObject L_0__R1;
              clSetq(L_0__R1, a);
              clSetq(L_0,
                     clSetq(a,
                            clFuncallFunction(clSymbolFunctionValue(clADD),
                                              L_0__R1,
                                              I_1,
                                              clEOA))); }
            clSetq(L_test__R1,
                   clFuncallFunction(clSymbolFunctionValue(clEQ_NUMBER),
                                     L_0,
                                     I_1,
                                     clEOA)); }
          if (clTrue(L_test__R1))
            { clObject L_0;
              clSetq(L_0, b);
              return(clValues1(clSetq(b,
                                      clFuncallFunction(clSymbolFunctionValue(clADD),
                                                        L_0,
                                                        I_1,
                                                        clEOA)))); }
          else
            { clObject L_test__R2;
              { clObject L_0;
                clSetq(L_0, a);
                clSetq(L_test__R2,
                       clFuncallFunction(clSymbolFunctionValue(clEQ_NUMBER),
                                         L_0,
                                         I_2,
                                         clEOA)); }
              if (clTrue(L_test__R2))
                return(clValues1(b));
              else return(clValues1(clNIL)); } } } } }

clObject clTstCondNone clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject a, b;
    clSetq(a, I_0);
    clSetq(b, I_0);
    { clObject L_test;
      { clObject L_test__R1;
        { clObject L_0;
          clSetq(L_0, a);
          clSetq(L_test__R1,
                 clSetq(a,
                        clFuncallFunction(clSymbolFunctionValue(clADD),
                                          L_0,
                                          I_1,
                                          clEOA))); }
        clSetq(L_test, (clTrue(L_test__R1) ? clNIL : clNIL)); }
      if (clTrue(L_test))
        { clObject L_0;
          clSetq(L_0, b);
          return(clValues1(clSetq(b,
                                  clFuncallFunction(clSymbolFunctionValue(clADD),
                                                    L_0,
                                                    I_1,
                                                    clEOA)))); }
      else
        { clObject L_test__R1;
          { clObject L_0;
            { clObject L_0__R1;
              clSetq(L_0__R1, a);
              clSetq(L_0,
                     clSetq(a,
                            clFuncallFunction(clSymbolFunctionValue(clADD),
                                              L_0__R1,
                                              I_1,
                                              clEOA))); }
            clSetq(L_test__R1,
                   clFuncallFunction(clSymbolFunctionValue(clEQ_NUMBER),
                                     L_0,
                                     I_1,
                                     clEOA)); }
          if (clTrue(L_test__R1))
            { clObject L_0;
              clSetq(L_0, b);
              return(clValues1(clSetq(b,
                                      clFuncallFunction(clSymbolFunctionValue(clADD),
                                                        L_0,
                                                        I_1,
                                                        clEOA)))); }
          else
            { clObject L_test__R2;
              { clObject L_0;
                clSetq(L_0, a);
                clSetq(L_test__R2,
                       clFuncallFunction(clSymbolFunctionValue(clEQ_NUMBER),
                                         L_0,
                                         I_3,
                                         clEOA)); }
              if (clTrue(L_test__R2))
                return(clValues1(b));
              else return(clValues1(clNIL)); } } } } }

clObject clTstEmptyCase clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  (void) I_3;
  return(clValues1(clNIL)); }

clObject clTstEmptyCaseClause clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  if (clTrue((_clEq(I_2, I_1) ? CONS_326 :
              (_clEq(I_2, I_2) ? CONS_327 :
               (_clEq(I_2, I_3) ? CONS_11 : clNIL)))))
    return(clValues1(clNIL));
  else return(clValues1(clNIL)); }

clObject clTstCaseNormal clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject a, b;
    clSetq(a, I_0);
    clSetq(b, I_0);
    { clObject L_key39720;
      { clObject L_0;
        clSetq(L_0, a);
        clSetq(L_key39720,
               clSetq(a,
                      clFuncallFunction(clSymbolFunctionValue(clADD),
                                        L_0,
                                        I_1,
                                        clEOA))); }
      if (_clEq(L_key39720, I_0))
        { clObject L_0;
          clSetq(L_0, b);
          return(clValues1(clSetq(b,
                                  clFuncallFunction(clSymbolFunctionValue(clADD),
                                                    L_0,
                                                    I_1,
                                                    clEOA)))); }
      else if (clTrue((_clEq(L_key39720, I_9) ?
                       CONS_1602 :
                       (_clEq(L_key39720, I_1) ? CONS_81 : clNIL))))
        { { clObject L_0;
            clSetq(L_0, b);
            clSetq(b,
                   clFuncallFunction(clSymbolFunctionValue(clSUBT),
                                     L_0,
                                     I_1,
                                     clEOA)); }
          { clObject L_1, L_0;
            { clObject L_0__R1;
              clSetq(L_0__R1, b);
              clSetq(L_0,
                     clSetq(b,
                            clFuncallFunction(clSymbolFunctionValue(clSUBT),
                                              L_0__R1,
                                              I_1,
                                              clEOA))); }
            clSetq(L_1, b);
            return(clValues(L_0, L_1, clEOA)); } }
      else
        { clObject L_0;
          clSetq(L_0, b);
          return(clValues1(clSetq(b,
                                  clFuncallFunction(clSymbolFunctionValue(clADD),
                                                    L_0,
                                                    I_1,
                                                    clEOA)))); } } } }

clObject clTstCaseT clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject a, b;
    clSetq(a, I_0);
    clSetq(b, I_0);
    { clObject L_key39722;
      { clObject L_0;
        clSetq(L_0, a);
        clSetq(L_key39722,
               clSetq(a,
                      clFuncallFunction(clSymbolFunctionValue(clADD),
                                        L_0,
                                        I_1,
                                        clEOA))); }
      if (_clEq(L_key39722, I_0))
        { clObject L_0;
          clSetq(L_0, b);
          return(clValues1(clSetq(b,
                                  clFuncallFunction(clSymbolFunctionValue(clADD),
                                                    L_0,
                                                    I_1,
                                                    clEOA)))); }
      else if (clTrue((_clEq(L_key39722, I_9) ?
                       CONS_1620 :
                       (_clEq(L_key39722, I_2) ? CONS_88 : clNIL))))
        { clObject L_0;
          clSetq(L_0, b);
          return(clValues1(clSetq(b,
                                  clFuncallFunction(clSymbolFunctionValue(clADD),
                                                    L_0,
                                                    I_1,
                                                    clEOA)))); }
      else
        { clObject L_0;
          clSetq(L_0, b);
          return(clValues1(clSetq(b,
                                  clFuncallFunction(clSymbolFunctionValue(clADD),
                                                    L_0,
                                                    I_1,
                                                    clEOA)))); } } } }

clObject clTstCaseOtherwise clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject a, b;
    clSetq(a, I_0);
    clSetq(b, I_0);
    { clObject L_key39724;
      { clObject L_0;
        clSetq(L_0, a);
        clSetq(L_key39724,
               clSetq(a,
                      clFuncallFunction(clSymbolFunctionValue(clADD),
                                        L_0,
                                        I_1,
                                        clEOA))); }
      if (_clEq(L_key39724, I_0))
        { clObject L_0;
          clSetq(L_0, b);
          return(clValues1(clSetq(b,
                                  clFuncallFunction(clSymbolFunctionValue(clADD),
                                                    L_0,
                                                    I_1,
                                                    clEOA)))); }
      else if (clTrue((_clEq(L_key39724, I_9) ?
                       CONS_1620 :
                       (_clEq(L_key39724, I_2) ? CONS_88 : clNIL))))
        { clObject L_0;
          clSetq(L_0, b);
          return(clValues1(clSetq(b,
                                  clFuncallFunction(clSymbolFunctionValue(clADD),
                                                    L_0,
                                                    I_1,
                                                    clEOA)))); }
      else
        { clObject L_0;
          clSetq(L_0, b);
          return(clValues1(clSetq(b,
                                  clFuncallFunction(clSymbolFunctionValue(clADD),
                                                    L_0,
                                                    I_1,
                                                    clEOA)))); } } } }

clObject clTypecaseTest clVdecl(_ap)
{ clObject x;
  { clBeginParse(_ap);
    clSetq(x, (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_1, clEOA)));
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject counter, value;
    clSetq(counter, I_0);
    { clObject L_object39726, L_class_name39727;
      { clObject L_0;
        clSetq(L_0, counter);
        clSetq(counter,
               clFuncallFunction(clSymbolFunctionValue(clADD),
                                 L_0,
                                 I_1,
                                 clEOA)); }
      clSetq(L_object39726, x);
      clSetq(L_class_name39727, clInstanceTag(L_object39726));
      clSetq(value,
             (clTrue((_clEq(L_class_name39727, clDOUBLE_FLOAT) ?
                      CONS_1630 :
                      (_clEq(L_class_name39727, clSINGLE_FLOAT) ?
                       CONS_1631 :
                       clNIL))) ?
              STR_a_float__15 :
              (_clEq(L_class_name39727, clNULL) ?
               STR_a_symbol_dotdotdot__16 :
               (_clEq(L_class_name39727, clCONS) ? STR_a_list__17 :
                STR_otherwise__18)))); }
    { clObject L_test;
      { clObject L_0;
        clSetq(L_0, counter);
        clSetq(L_test,
               clFuncallFunction(clSymbolFunctionValue(clEQ_NUMBER),
                                 L_0,
                                 I_1,
                                 clEOA)); }
      if (clTrue(L_test))
        return(clValues1(value));
      else return(clValues1(clNIL)); } } }

clObject clTstTypecaseNil clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  return(clFuncallFunction(clSymbolFunctionValue(clTYPECASE_TEST),
                           clNIL,
                           clEOA)); }

clObject clTstTypecaseList clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  return(clFuncallFunction(clSymbolFunctionValue(clTYPECASE_TEST),
                           CONS_135,
                           clEOA)); }

clObject clTstTypecaseFloat clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  return(clFuncallFunction(clSymbolFunctionValue(clTYPECASE_TEST),
                           F_7_0,
                           clEOA)); }

clObject clTstTypecaseInteger clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  return(clFuncallFunction(clSymbolFunctionValue(clTYPECASE_TEST),
                           I_7,
                           clEOA)); }

clObject clTstTypecaseSymbol clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  return(clFuncallFunction(clSymbolFunctionValue(clTYPECASE_TEST),
                           clBOX,
                           clEOA)); }

clObject clTstEmptyBlock clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  return(clValues1(clNIL)); }

clObject clTstNormallyExitedBlock clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject a, b;
    clSetq(a, clNIL);
    clSetq(b, clNIL);
    { clObject L_2, L_1;
      clSetq(a, I_2);
      clSetq(b, I_3);
      clSetq(L_1, a);
      clSetq(L_2, b);
      return(clList(I_1, L_1, L_2, clEOA)); } } }

clObject clTstLocalBlock clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject a, b;
    clSetq(a, clNIL);
    clSetq(b, clNIL);
    { clObject L_2, L_1, L_0;
      clSetq(a, I_2);
      clSetq(b, I_3);
      if (clTrue(a))
        { clSetq(L_0, clSetq(b, I_2)); clLocalReturn(FOO); }
      else clSetq(L_0, I_1);
      clBlockEnd(FOO);
      clSetq(L_1, a);
      clSetq(L_2, b);
      return(clList(L_0, L_1, L_2, clEOA)); } } }

clObject clTstBlockAsReturn clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  if (clTrue(clFuncallFunction(clSymbolFunctionValue(clSOME_IDENTITY_FUNCTION),
                               I_3,
                               clEOA)))
    return(clValues1(I_9));
  else return(clValues1(clNIL)); }

clObject clTstNestedInnerLocalBlock clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject a, b;
    clSetq(a, clNIL);
    clSetq(b, clNIL);
    { clObject L_2, L_1;
      clSetq(a, I_2);
      clSetq(b, I_3);
      if (clTrue(a))
        { clSetq(b, I_2); clLocalReturn(FOO); }
      else (void) I_1;
      clBlockEnd(FOO);
      clSetq(L_1, a);
      clSetq(L_2, b);
      return(clList(I_9, L_1, L_2, clEOA)); } } }

clObject clTstNestedOuterLocalBlock clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject a, b;
    clSetq(a, clNIL);
    clSetq(b, clNIL);
    { clObject L_2, L_1, L_0;
      clSetq(a, I_2);
      clSetq(b, I_3);
      if (clTrue(a))
        { clSetq(L_0, clSetq(b, I_2)); clLocalReturn(FOO); }
      else (void) I_1;
      clSetq(L_0, I_9);
      clBlockEnd(FOO);
      clSetq(L_1, a);
      clSetq(L_2, b);
      return(clList(L_0, L_1, L_2, clEOA)); } } }

clDeclareEnv(clTstNonlocalBlock_Bar);
static clObject clTstNonlocalBlock_Bar clVdecl(_ap)
{ clUseEnv(clTstNonlocalBlock_Bar);
  { clObject x;
    { clBeginParse(_ap);
      clSetq(x,
             (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_1, clEOA)));
      if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
      clEndParse(_ap); }
    if (clTrue(x))
      { clReturnFrom(clEnv(0, FOO),
                     clValues1(clSetq(clEnv(1, *b), I_2)));
        return(clValues1(clNIL)); }
    else return(clValues1(I_1)); } }

clObject clTstNonlocalBlock clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { volatile clObject a, *b = clMakeBinding();
    clSetq(a, clNIL);
    clSetq(*b, clNIL);
    { volatile clObject L_2, L_1, L_0;
      { clBlock(FOO);
        if (clTrue(clReturned(FOO)))
          clSetq(L_0, clSavedValue(FOO));
        else
          { clObject _Bar_;
            clSetq(_Bar_,
                   clMakeClosure(2,
                                 clTstNonlocalBlock_Bar,
                                 &clEnvHook(clTstNonlocalBlock_Bar),
                                 &FOO,
                                 &*b));
            clSetq(a, I_2);
            clSetq(*b, I_3);
            { clObject L_0__R1;
              clSetq(L_0__R1, a);
              clSetq(L_0,
                     clFuncallFunction(_Bar_, L_0__R1, clEOA)); } } }
      clSetq(L_1, a);
      clSetq(L_2, *b);
      return(clList(L_0, L_1, L_2, clEOA)); } } }

clDeclareEnv(clTstNestedInnerNonlocalBlock_Bar);
static clObject clTstNestedInnerNonlocalBlock_Bar clVdecl(_ap)
{ clUseEnv(clTstNestedInnerNonlocalBlock_Bar);
  { clObject x;
    { clBeginParse(_ap);
      clSetq(x,
             (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_1, clEOA)));
      if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
      clEndParse(_ap); }
    if (clTrue(x))
      { clReturnFrom(clEnv(0, FOO),
                     clValues1(clSetq(clEnv(1, *b), I_2)));
        return(clValues1(clNIL)); }
    else return(clValues1(I_1)); } }

clObject clTstNestedInnerNonlocalBlock clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { volatile clObject a, *b = clMakeBinding();
    clSetq(a, clNIL);
    clSetq(*b, clNIL);
    { volatile clObject L_2, L_1;
      { clBlock(FOO);
        if (clTrue(clReturned(FOO)))
          clSavedValue(FOO);
        else
          { clObject _Bar_;
            clSetq(_Bar_,
                   clMakeClosure(2,
                                 clTstNestedInnerNonlocalBlock_Bar,
                                 &clEnvHook(clTstNestedInnerNonlocalBlock_Bar),
                                 &FOO,
                                 &*b));
            clSetq(a, I_2);
            clSetq(*b, I_3);
            { clObject L_0__R1;
              clSetq(L_0__R1, a);
              clFuncallFunction(_Bar_, L_0__R1, clEOA); } } }
      clSetq(L_1, a);
      clSetq(L_2, *b);
      return(clList(I_9, L_1, L_2, clEOA)); } } }

clDeclareEnv(clTstNestedOuterNonlocalBlock_Bar);
static clObject clTstNestedOuterNonlocalBlock_Bar clVdecl(_ap)
{ clUseEnv(clTstNestedOuterNonlocalBlock_Bar);
  { clObject x;
    { clBeginParse(_ap);
      clSetq(x,
             (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_1, clEOA)));
      if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
      clEndParse(_ap); }
    if (clTrue(x))
      { clReturnFrom(clEnv(0, FOO),
                     clValues1(clSetq(clEnv(1, *b), I_2)));
        return(clValues1(clNIL)); }
    else return(clValues1(I_1)); } }

clObject clTstNestedOuterNonlocalBlock clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { volatile clObject a, *b = clMakeBinding();
    clSetq(a, clNIL);
    clSetq(*b, clNIL);
    { volatile clObject L_2, L_1, L_0;
      { clBlock(FOO);
        if (clTrue(clReturned(FOO)))
          clSetq(L_0, clSavedValue(FOO));
        else
          { { clObject _Bar_;
              clSetq(_Bar_,
                     clMakeClosure(2,
                                   clTstNestedOuterNonlocalBlock_Bar,
                                   &clEnvHook(clTstNestedOuterNonlocalBlock_Bar),
                                   &FOO,
                                   &*b));
              clSetq(a, I_2);
              clSetq(*b, I_3);
              { clObject L_0__R1;
                clSetq(L_0__R1, a);
                clFuncallFunction(_Bar_, L_0__R1, clEOA); } }
            clSetq(L_0, I_9); } }
      clSetq(L_1, a);
      clSetq(L_2, *b);
      return(clList(L_0, L_1, L_2, clEOA)); } } }

clDeclareEnv(clTstNestedOuterDoubleNonlocalBlock_Something);
static clObject clTstNestedOuterDoubleNonlocalBlock_Something clVdecl(_ap)
{ clUseEnv(clTstNestedOuterDoubleNonlocalBlock_Something);
  { clObject a;
    { clBeginParse(_ap);
      clSetq(a,
             (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_1, clEOA)));
      if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
      clEndParse(_ap); }
    { clObject L_0;
      clSetq(L_0, a);
      return(clFuncallFunction(clEnv(0, *_Bar_), L_0, clEOA)); } } }

clDeclareEnv(clTstNestedOuterDoubleNonlocalBlock_Bar);
static clObject clTstNestedOuterDoubleNonlocalBlock_Bar clVdecl(_ap)
{ clUseEnv(clTstNestedOuterDoubleNonlocalBlock_Bar);
  { clObject x;
    { clBeginParse(_ap);
      clSetq(x,
             (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_1, clEOA)));
      if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
      clEndParse(_ap); }
    if (clTrue(x))
      { clReturnFrom(clEnv(0, FOO),
                     clValues1(clSetq(clEnv(1, *b), I_2)));
        return(clValues1(clNIL)); }
    else return(clValues1(I_1)); } }

clObject clTstNestedOuterDoubleNonlocalBlock clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { volatile clObject a, *b = clMakeBinding();
    clSetq(a, clNIL);
    clSetq(*b, clNIL);
    { volatile clObject L_2, L_1, L_0;
      { clBlock(FOO);
        if (clTrue(clReturned(FOO)))
          clSetq(L_0, clSavedValue(FOO));
        else
          { { clObject *_Bar_ = clMakeBinding();
              clSetq(*_Bar_,
                     clMakeClosure(2,
                                   clTstNestedOuterDoubleNonlocalBlock_Bar,
                                   &clEnvHook(clTstNestedOuterDoubleNonlocalBlock_Bar),
                                   &FOO,
                                   &*b));
              clSetq(a, I_2);
              clSetq(*b, I_3);
              { clObject _Something_;
                clSetq(_Something_,
                       clMakeClosure(1,
                                     clTstNestedOuterDoubleNonlocalBlock_Something,
                                     &clEnvHook(clTstNestedOuterDoubleNonlocalBlock_Something),
                                     &*_Bar_));
                { clObject L_0__R1;
                  clSetq(L_0__R1, a);
                  clFuncallFunction(_Something_, L_0__R1, clEOA); } } }
            clSetq(L_0, I_9); } }
      clSetq(L_1, a);
      clSetq(L_2, *b);
      return(clList(L_0, L_1, L_2, clEOA)); } } }

clObject clTrouble clVdecl(_ap)
{ clObject exit;
  { clBeginParse(_ap);
    clSetq(exit,
           (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_1, clEOA)));
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject L_0; clSetq(L_0, exit); return(clFuncall(L_0, clEOA)); } }

clDeclareEnv(clTstBlockLabelsNotDynamic_Lambda);
static clObject clTstBlockLabelsNotDynamic_Lambda clVdecl(_ap)
{ clUseEnv(clTstBlockLabelsNotDynamic_Lambda);
  { { clBeginParse(_ap);
      if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
      clEndParse(_ap); }
    clReturnFrom(clEnv(0, FOO), clValues1(I_9));
    return(clValues1(clNIL)); } }

clObject clTstBlockLabelsNotDynamic clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { volatile clObject should_be_clear;
    clSetq(should_be_clear, clNIL);
    { volatile clObject L_1, L_0;
      { clBlock(FOO);
        if (clTrue(clReturned(FOO)))
          clSetq(L_0, clSavedValue(FOO));
        else
          { { clObject L_0__R1;
              clSetq(L_0__R1,
                     clMakeClosure(1,
                                   clTstBlockLabelsNotDynamic_Lambda,
                                   &clEnvHook(clTstBlockLabelsNotDynamic_Lambda),
                                   &FOO));
              clFuncallFunction(clSymbolFunctionValue(clTROUBLE),
                                L_0__R1,
                                clEOA); }
            clSetq(L_0, clSetq(should_be_clear, clT)); } }
      clSetq(L_1, should_be_clear);
      return(clList(L_0, L_1, clEOA)); } } }

clObject clTstBlockBreaksUpCatchers clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clBlock(LOSER);
    if (clTrue(clReturned(LOSER)))
      return(clSavedValue(LOSER));
    else
      { clCatch(CATCH);
        clSetq(CATCH, clSTUFF);
        if (clTrue(clThrown(CATCH)))
          return(clReturnedValue(CATCH));
        else if (clTrue(clFuncallFunction(clSymbolFunctionValue(clSOME_IDENTITY_FUNCTION),
                                          I_3,
                                          clEOA)))
          { clReturnFrom(LOSER, clValues1(I_9));
            return(clValues1(clNIL)); }
        else clUnwindReturn(clValues1(clNIL), 1); } } }

clObject clTstBlockBreaksUpCatchers2 clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clCatch(CATCH);
    clSetq(CATCH, clSTUFF);
    if (clTrue(clThrown(CATCH)))
      return(clReturnedValue(CATCH));
    else
      { { clThrow(THROW);
          clSetq(THROW, clSTUFF);
          clFindCatcher(THROW);
          { clBlock(LOSER);
            if (clTrue(clReturned(LOSER)))
              clExitThrow(THROW, clSavedValue(LOSER));
            else
              { { clCatch(CATCH__r1);
                  clSetq(CATCH__r1, clSTUFF);
                  if (clTrue(clThrown(CATCH__r1)))
                    clReturnedValue(CATCH__r1);
                  else
                    { clReturnFrom(LOSER, clValues1(I_3));
                      clEndCatch(CATCH__r1); } }
                clExitThrow(THROW, clValues1(I_9)); } } }
        clUnwindReturn(clValues1(I_4), 1); } } }

clObject clTstReturnFromThrow clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { volatile clObject L_0;
    { clCatch(CATCH);
      clSetq(CATCH, clFOO);
      if (clTrue(clThrown(CATCH)))
        clSetq(L_0, clReturnedValue(CATCH));
      else
        { { clObject a;
            clSetq(a, I_1);
            { clThrow(THROW);
              clSetq(THROW, clFOO);
              clFindCatcher(THROW);
              if (clTrue(a))
                { clSetq(L_0, a); clLocalReturn(FOO); }
              else clExitThrow(THROW, clValues1(I_99)); }
            clBlockEnd(FOO); }
          clEndCatch(CATCH); } }
    return(clList(L_0, clEOA)); } }

clObject clTstReturnFromThrowMvc clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clMultipleValueCall(MVC);
    clSetq(MVC, clSymbolFunctionValue(clplussymbol));
    clValues(I_2, I_3, clEOA);
    clAccumulateValues(MVC);
    { clCatch(CATCH);
      clSetq(CATCH, clFOO);
      if (clTrue(clThrown(CATCH)))
        clReturnedValue(CATCH);
      else
        { { clObject a;
            clSetq(a, I_1);
            { clThrow(THROW);
              clSetq(THROW, clFOO);
              clFindCatcher(THROW);
              if (clTrue(a))
                { clValues1(a); clLocalReturn(FOO); }
              else clExitThrow(THROW, clValues1(I_99)); }
            clBlockEnd(FOO); }
          clEndCatch(CATCH); } }
    clAccumulateValues(MVC);
    clValues1(I_4);
    clAccumulateValues(MVC);
    return(clMultipleValueFuncall(MVC)); } }

clDeclareEnv(clTstNonlocalReturnFromThrowMvc_Returner);
static clObject clTstNonlocalReturnFromThrowMvc_Returner clVdecl(_ap)
{ clUseEnv(clTstNonlocalReturnFromThrowMvc_Returner);
  { clObject x;
    { clBeginParse(_ap);
      clSetq(x,
             (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_1, clEOA)));
      if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
      clEndParse(_ap); }
    if (clTrue(clEnv(0, *a)))
      { clReturnFrom(clEnv(1, FOO), clValues1(clEnv(0, *a)));
        return(clValues1(clNIL)); }
    else return(clValues1(x)); } }

clObject clTstNonlocalReturnFromThrowMvc clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clMultipleValueCall(MVC);
    clSetq(MVC, clSymbolFunctionValue(clplussymbol));
    clValues(I_2, I_3, clEOA);
    clAccumulateValues(MVC);
    { clCatch(CATCH);
      clSetq(CATCH, clFOO);
      if (clTrue(clThrown(CATCH)))
        clReturnedValue(CATCH);
      else
        { { volatile clObject *a = clMakeBinding();
            clSetq(*a, I_1);
            { clBlock(FOO);
              if (clTrue(clReturned(FOO)))
                clSavedValue(FOO);
              else
                { clThrow(THROW);
                  clSetq(THROW, clFOO);
                  clFindCatcher(THROW);
                  { clObject _Returner_;
                    clSetq(_Returner_,
                           clMakeClosure(2,
                                         clTstNonlocalReturnFromThrowMvc_Returner,
                                         &clEnvHook(clTstNonlocalReturnFromThrowMvc_Returner),
                                         &*a,
                                         &FOO));
                    clExitThrow(THROW,
                                clFuncallFunction(_Returner_,
                                                  I_99,
                                                  clEOA)); } } } }
          clEndCatch(CATCH); } }
    clAccumulateValues(MVC);
    clValues1(I_4);
    clAccumulateValues(MVC);
    return(clMultipleValueFuncall(MVC)); } }

clObject clTstReturnFromMvc clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject L_0;
    { clObject a;
      clSetq(a, I_1);
      { clMultipleValueCall(MVC);
        clSetq(MVC, clSymbolFunctionValue(clplussymbol));
        clValues(I_1, I_2, clEOA);
        clAccumulateValues(MVC);
        if (clTrue(a))
          { clRestoreValues(MVC); clSetq(L_0, a); clLocalReturn(FOO); }
        else clValues1(I_99);
        clAccumulateValues(MVC);
        clSetq(L_0, clMultipleValueFuncall(MVC)); }
      clBlockEnd(FOO); }
    return(clList(L_0, clEOA)); } }

clObject clTstReturnFromMvcMvc clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clMultipleValueCall(MVC);
    clSetq(MVC, clSymbolFunctionValue(clplussymbol));
    clValues(I_2, I_3, clEOA);
    clAccumulateValues(MVC);
    { clObject a;
      clSetq(a, I_1);
      { clMultipleValueCall(MVC__r1);
        clSetq(MVC__r1, clSymbolFunctionValue(clplussymbol));
        clValues(I_1, I_2, clEOA);
        clAccumulateValues(MVC__r1);
        if (clTrue(a))
          { clRestoreValues(MVC__r1);
            clValues1(a);
            clLocalReturn(FOO); }
        else clValues1(I_99);
        clAccumulateValues(MVC__r1);
        clMultipleValueFuncall(MVC__r1); }
      clBlockEnd(FOO); }
    clAccumulateValues(MVC);
    clValues1(I_4);
    clAccumulateValues(MVC);
    return(clMultipleValueFuncall(MVC)); } }

clObject clTstReturnFromMvcMvp clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clMultipleValueCall(MVC);
    clSetq(MVC, clSymbolFunctionValue(clplussymbol));
    clValues(I_2, I_3, clEOA);
    clAccumulateValues(MVC);
    { clObject a;
      clSetq(a, I_1);
      { clMultipleValueProg1(MVP1);
        clValues(I_1, I_2, clEOA);
        clSaveValues(MVP1);
        if (clTrue(a))
          { clRestoreValues(MVP1); clValues1(a); clLocalReturn(FOO); }
        else (void) I_99;
        clRestoreValues(MVP1);
        clSavedValue(MVP1); }
      clBlockEnd(FOO); }
    clAccumulateValues(MVC);
    clValues1(I_4);
    clAccumulateValues(MVC);
    return(clMultipleValueFuncall(MVC)); } }

clDeclareEnv(clTstReturnFromMvcMvpCaptured_Silly);
static clObject clTstReturnFromMvcMvpCaptured_Silly clVdecl(_ap)
{ clUseEnv(clTstReturnFromMvcMvpCaptured_Silly);
  { clObject a;
    { clBeginParse(_ap);
      clSetq(a,
             (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_1, clEOA)));
      if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
      clEndParse(_ap); }
    if (clTrue(a))
      { clReturnFrom(clEnv(0, FOO), clValues1(a));
        return(clValues1(clNIL)); }
    else return(clValues1(I_99)); } }

clObject clTstReturnFromMvcMvpCaptured clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clMultipleValueCall(MVC);
    clSetq(MVC, clSymbolFunctionValue(clplussymbol));
    clValues(I_2, I_3, clEOA);
    clAccumulateValues(MVC);
    { volatile clObject a;
      clSetq(a, I_1);
      { clBlock(FOO);
        if (clTrue(clReturned(FOO)))
          clSavedValue(FOO);
        else
          { clMultipleValueProg1(MVP1);
            clValues(I_1, I_2, clEOA);
            clSaveValues(MVP1);
            { clObject _Silly_;
              clSetq(_Silly_,
                     clMakeClosure(1,
                                   clTstReturnFromMvcMvpCaptured_Silly,
                                   &clEnvHook(clTstReturnFromMvcMvpCaptured_Silly),
                                   &FOO));
              clFuncallFunction(_Silly_, a, clEOA); }
            clRestoreValues(MVP1);
            clSavedValue(MVP1); } } }
    clAccumulateValues(MVC);
    clValues1(I_4);
    clAccumulateValues(MVC);
    return(clMultipleValueFuncall(MVC)); } }

clDeclareEnv(clTstReturnFromMvcCapturedMvp_Silly);
static clObject clTstReturnFromMvcCapturedMvp_Silly clVdecl(_ap)
{ clUseEnv(clTstReturnFromMvcCapturedMvp_Silly);
  { clObject a;
    { clBeginParse(_ap);
      clSetq(a,
             (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_1, clEOA)));
      if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
      clEndParse(_ap); }
    { clMultipleValueProg1(MVP1);
      clValues(I_1, I_2, clEOA);
      clSaveValues(MVP1);
      if (clTrue(a))
        clReturnFrom(clEnv(0, FOO), clValues1(a));
      else (void) I_99;
      clRestoreValues(MVP1);
      return(clSavedValue(MVP1)); } } }

clObject clTstReturnFromMvcCapturedMvp clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clMultipleValueCall(MVC);
    clSetq(MVC, clSymbolFunctionValue(clplussymbol));
    clValues(I_2, I_3, clEOA);
    clAccumulateValues(MVC);
    { volatile clObject a;
      clSetq(a, I_1);
      { clBlock(FOO);
        if (clTrue(clReturned(FOO)))
          clSavedValue(FOO);
        else
          { clObject _Silly_;
            clSetq(_Silly_,
                   clMakeClosure(1,
                                 clTstReturnFromMvcCapturedMvp_Silly,
                                 &clEnvHook(clTstReturnFromMvcCapturedMvp_Silly),
                                 &FOO));
            clFuncallFunction(_Silly_, a, clEOA); } } }
    clAccumulateValues(MVC);
    clValues1(I_4);
    clAccumulateValues(MVC);
    return(clMultipleValueFuncall(MVC)); } }

static clObject clTstReturnFromMvcExit_Silly clVdecl(_ap)
{ clObject a;
  { clBeginParse(_ap);
    clSetq(a, (_clVp(_ap) ? clVpop(_ap) : clMissingArgs(I_1, clEOA)));
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clMultipleValueProg1(MVP1);
    clValues(I_1, I_2, clEOA);
    clSaveValues(MVP1);
    if (clTrue(a))
      { clRestoreValues(MVP1); return(clValues1(a)); }
    else (void) I_99;
    clRestoreValues(MVP1);
    return(clSavedValue(MVP1)); } }

clObject clTstReturnFromMvcExit clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clMultipleValueCall(MVC);
    clSetq(MVC, clSymbolFunctionValue(clplussymbol));
    clValues(I_2, I_3, clEOA);
    clAccumulateValues(MVC);
    { clObject a;
      clSetq(a, I_1);
      { clObject _Silly_;
        clSetq(_Silly_,
               clMakeClosure(0,
                             clTstReturnFromMvcExit_Silly,
                             clNULL_HOOK));
        clFuncallFunction(_Silly_, a, clEOA); } }
    clAccumulateValues(MVC);
    clValues1(I_4);
    clAccumulateValues(MVC);
    return(clMultipleValueFuncall(MVC)); } }

clObject clTstReturn clVdecl(_ap)
{ { clBeginParse(_ap);
    if (_clVp(_ap)) clExtraArgs(clVargs(_ap), clEOA);
    clEndParse(_ap); }
  { clObject x;
    clSetq(x, I_0);
    { clObject L_1, L_0;
      clSetq(L_0, I_9);
      clLocalReturn(NIL);
      { clObject L_0__R1;
        clSetq(L_0__R1, x);
        clSetq(L_0,
               clSetq(x,
                      clFuncallFunction(clSymbolFunctionValue(clADD),
                                        L_0__R1,
                                        I_1,
                                        clEOA))); }
      clBlockEnd(NIL);
      clSetq(L_1, x);
      return(clValues(L_0, L_1, clEOA)); } } }

void clControl __P((void)) 
{ clDbind(clstarPACKAGEstar);
  clDbind(clstarREADTABLEstar);
  clDbind(clstarLOAD_TRUENAMEstar);
  clDbind(clstarLOAD_PATHNAMEstar);
  clSetq(I_1, clIntFixnum(1));
  clSetq(I_43, clIntFixnum(43));
  clSetq(CONS_4, clCons(I_43, clNIL, clEOA));
  clSetq(CONS_3, clCons(clA, CONS_4, clEOA));
  clSetq(CONS_2, clCons(clSETQ, CONS_3, clEOA));
  clSetq(I_3, clIntFixnum(3));
  clSetq(CONS_11, clCons(I_3, clNIL, clEOA));
  clSetq(CONS_10, clCons(clA, CONS_11, clEOA));
  clSetq(CONS_9, clCons(clCONS, CONS_10, clEOA));
  clSetq(CONS_8, clCons(CONS_9, clNIL, clEOA));
  clSetq(CONS_7, clCons(clA, CONS_8, clEOA));
  clSetq(CONS_6, clCons(clLIST, CONS_7, clEOA));
  clSetq(CONS_5, clCons(CONS_6, clNIL, clEOA));
  clSetq(CONS_1, clCons(CONS_2, CONS_5, clEOA));
  clSetq(CONS_0, clCons(clPROGN, CONS_1, clEOA));
  clSetq(CONS_15, clCons(I_43, I_3, clEOA));
  clSetq(CONS_14, clCons(CONS_15, clNIL, clEOA));
  clSetq(CONS_13, clCons(I_43, CONS_14, clEOA));
  clSetq(CONS_12, clCons(CONS_13, clNIL, clEOA));
  clSetq(STR_ADD_ENTRY__0, clCharpSimpleBaseString("ADD-ENTRY"));
  clSetq(STR_ECLIPSE_TEST__1, clCharpSimpleBaseString("ECLIPSE-TEST"));
  clSetq(PKG_ECLIPSE_TEST, clPkg(STR_ECLIPSE_TEST__1, clEOA));
  clSetq(etADD_ENTRY,
         clIntern(STR_ADD_ENTRY__0, PKG_ECLIPSE_TEST, clEOA));
  clSetq(CONS_19, clCons(clA, clNIL, clEOA));
  clSetq(CONS_18, clCons(clQUOTE, CONS_19, clEOA));
  clSetq(CONS_21, clCons(clQUOTE, CONS_8, clEOA));
  clSetq(CONS_20, clCons(CONS_21, clNIL, clEOA));
  clSetq(CONS_17, clCons(CONS_18, CONS_20, clEOA));
  clSetq(CONS_16, clCons(clLIST, CONS_17, clEOA));
  clSetq(CONS_22, clCons(CONS_7, clNIL, clEOA));
  clSetq(CONS_25, clCons(clADDER, CONS_11, clEOA));
  clSetq(I_5, clIntFixnum(5));
  clSetq(CONS_26, clCons(I_5, clNIL, clEOA));
  clSetq(CONS_24, clCons(CONS_25, CONS_26, clEOA));
  clSetq(CONS_23, clCons(clFUNCALL, CONS_24, clEOA));
  clSetq(I_8, clIntFixnum(8));
  clSetq(CONS_27, clCons(I_8, clNIL, clEOA));
  clSetq(CONS_36, clCons(clX, clNIL, clEOA));
  clSetq(CONS_43, clCons(clNIL, CONS_36, clEOA));
  clSetq(CONS_42, clCons(clLAMBDA, CONS_43, clEOA));
  clSetq(CONS_41, clCons(CONS_42, clNIL, clEOA));
  clSetq(CONS_40, clCons(clFUNCTION, CONS_41, clEOA));
  clSetq(CONS_49, clCons(clY, clNIL, clEOA));
  clSetq(CONS_52, clCons(clX, CONS_49, clEOA));
  clSetq(CONS_51, clCons(clSETQ, CONS_52, clEOA));
  clSetq(CONS_50, clCons(CONS_51, clNIL, clEOA));
  clSetq(CONS_48, clCons(CONS_49, CONS_50, clEOA));
  clSetq(CONS_47, clCons(clLAMBDA, CONS_48, clEOA));
  clSetq(CONS_46, clCons(CONS_47, clNIL, clEOA));
  clSetq(CONS_45, clCons(clFUNCTION, CONS_46, clEOA));
  clSetq(CONS_44, clCons(CONS_45, clNIL, clEOA));
  clSetq(CONS_39, clCons(CONS_40, CONS_44, clEOA));
  clSetq(CONS_38, clCons(clLIST, CONS_39, clEOA));
  clSetq(CONS_37, clCons(CONS_38, clNIL, clEOA));
  clSetq(CONS_35, clCons(CONS_36, CONS_37, clEOA));
  clSetq(CONS_34, clCons(clLAMBDA, CONS_35, clEOA));
  clSetq(I_6, clIntFixnum(6));
  clSetq(CONS_53, clCons(I_6, clNIL, clEOA));
  clSetq(CONS_33, clCons(CONS_34, CONS_53, clEOA));
  clSetq(CONS_32, clCons(CONS_33, clNIL, clEOA));
  clSetq(CONS_31, clCons(clFUNS, CONS_32, clEOA));
  clSetq(CONS_30, clCons(CONS_31, clNIL, clEOA));
  clSetq(CONS_60, clCons(clFUNS, clNIL, clEOA));
  clSetq(CONS_59, clCons(clCAR, CONS_60, clEOA));
  clSetq(CONS_58, clCons(CONS_59, clNIL, clEOA));
  clSetq(CONS_57, clCons(clFUNCALL, CONS_58, clEOA));
  clSetq(CONS_64, clCons(clCADR, CONS_60, clEOA));
  clSetq(CONS_63, clCons(CONS_64, CONS_4, clEOA));
  clSetq(CONS_62, clCons(clFUNCALL, CONS_63, clEOA));
  clSetq(CONS_65, clCons(CONS_57, clNIL, clEOA));
  clSetq(CONS_61, clCons(CONS_62, CONS_65, clEOA));
  clSetq(CONS_56, clCons(CONS_57, CONS_61, clEOA));
  clSetq(CONS_55, clCons(clLIST, CONS_56, clEOA));
  clSetq(CONS_54, clCons(CONS_55, clNIL, clEOA));
  clSetq(CONS_29, clCons(CONS_30, CONS_54, clEOA));
  clSetq(CONS_28, clCons(clLET, CONS_29, clEOA));
  clSetq(CONS_68, clCons(I_43, CONS_4, clEOA));
  clSetq(CONS_67, clCons(I_6, CONS_68, clEOA));
  clSetq(CONS_66, clCons(CONS_67, clNIL, clEOA));
  clSetq(CONS_74, clCons(clTWO_FUNS, CONS_53, clEOA));
  clSetq(CONS_73, clCons(CONS_74, clNIL, clEOA));
  clSetq(CONS_72, clCons(clFUNS, CONS_73, clEOA));
  clSetq(CONS_71, clCons(CONS_72, clNIL, clEOA));
  clSetq(CONS_70, clCons(CONS_71, CONS_54, clEOA));
  clSetq(CONS_69, clCons(clLET, CONS_70, clEOA));
  clSetq(CONS_80, clCons(CONS_18, clNIL, clEOA));
  clSetq(CONS_79, clCons(clSYMBOL_VALUE, CONS_80, clEOA));
  clSetq(CONS_81, clCons(I_1, clNIL, clEOA));
  clSetq(CONS_78, clCons(CONS_79, CONS_81, clEOA));
  clSetq(CONS_77, clCons(clSETF, CONS_78, clEOA));
  clSetq(I_2, clIntFixnum(2));
  clSetq(CONS_88, clCons(I_2, clNIL, clEOA));
  clSetq(CONS_87, clCons(clA, CONS_88, clEOA));
  clSetq(CONS_86, clCons(CONS_87, clNIL, clEOA));
  clSetq(CONS_92, clCons(clIGNORABLE, CONS_19, clEOA));
  clSetq(CONS_91, clCons(CONS_92, clNIL, clEOA));
  clSetq(CONS_90, clCons(clDECLARE, CONS_91, clEOA));
  clSetq(CONS_93, clCons(CONS_79, clNIL, clEOA));
  clSetq(CONS_89, clCons(CONS_90, CONS_93, clEOA));
  clSetq(CONS_85, clCons(CONS_86, CONS_89, clEOA));
  clSetq(CONS_84, clCons(clLET, CONS_85, clEOA));
  clSetq(CONS_99, clCons(clSETQ, CONS_10, clEOA));
  clSetq(CONS_98, clCons(CONS_99, CONS_93, clEOA));
  clSetq(CONS_97, clCons(CONS_90, CONS_98, clEOA));
  clSetq(CONS_96, clCons(CONS_86, CONS_97, clEOA));
  clSetq(CONS_95, clCons(clLET, CONS_96, clEOA));
  clSetq(CONS_106, clCons(clSPECIAL, CONS_19, clEOA));
  clSetq(CONS_105, clCons(CONS_106, clNIL, clEOA));
  clSetq(CONS_104, clCons(clDECLARE, CONS_105, clEOA));
  clSetq(CONS_103, clCons(CONS_104, CONS_89, clEOA));
  clSetq(CONS_102, clCons(CONS_86, CONS_103, clEOA));
  clSetq(CONS_101, clCons(clLET, CONS_102, clEOA));
  clSetq(CONS_110, clCons(CONS_104, CONS_98, clEOA));
  clSetq(CONS_109, clCons(CONS_86, CONS_110, clEOA));
  clSetq(CONS_108, clCons(clLET, CONS_109, clEOA));
  clSetq(CONS_116, clCons(CONS_79, CONS_11, clEOA));
  clSetq(CONS_115, clCons(clSETF, CONS_116, clEOA));
  clSetq(CONS_114, clCons(CONS_115, CONS_19, clEOA));
  clSetq(CONS_113, clCons(CONS_86, CONS_114, clEOA));
  clSetq(CONS_112, clCons(clLET, CONS_113, clEOA));
  clSetq(I_4, clIntFixnum(4));
  clSetq(CONS_123, clCons(I_4, clNIL, clEOA));
  clSetq(CONS_122, clCons(clA, CONS_123, clEOA));
  clSetq(CONS_121, clCons(CONS_122, clNIL, clEOA));
  clSetq(CONS_129, clCons(clB, CONS_93, clEOA));
  clSetq(CONS_128, clCons(CONS_129, clNIL, clEOA));
  clSetq(CONS_132, clCons(CONS_79, CONS_26, clEOA));
  clSetq(CONS_131, clCons(clSETF, CONS_132, clEOA));
  clSetq(CONS_136, clCons(clB, clNIL, clEOA));
  clSetq(CONS_135, clCons(clA, CONS_136, clEOA));
  clSetq(CONS_134, clCons(clLIST, CONS_135, clEOA));
  clSetq(CONS_133, clCons(CONS_134, clNIL, clEOA));
  clSetq(CONS_130, clCons(CONS_131, CONS_133, clEOA));
  clSetq(CONS_127, clCons(CONS_128, CONS_130, clEOA));
  clSetq(CONS_126, clCons(clLET, CONS_127, clEOA));
  clSetq(CONS_125, clCons(CONS_126, clNIL, clEOA));
  clSetq(CONS_124, clCons(CONS_104, CONS_125, clEOA));
  clSetq(CONS_120, clCons(CONS_121, CONS_124, clEOA));
  clSetq(CONS_119, clCons(clLET, CONS_120, clEOA));
  clSetq(CONS_139, clCons(CONS_104, CONS_19, clEOA));
  clSetq(CONS_138, clCons(clLOCALLY, CONS_139, clEOA));
  clSetq(STR_ANY_KEYWORD__2, clCharpSimpleBaseString("ANY-KEYWORD"));
  clSetq(keyANY_KEYWORD, clMakeKeyword(STR_ANY_KEYWORD__2, clEOA));
  clSetq(CONS_142, clCons(keyANY_KEYWORD, clNIL, clEOA));
  clSetq(CONS_141, clCons(clSYMBOL_VALUE, CONS_142, clEOA));
  clSetq(CONS_147, clCons(clNIL, clNIL, clEOA));
  clSetq(CONS_146, clCons(clQUOTE, CONS_147, clEOA));
  clSetq(CONS_145, clCons(CONS_146, clNIL, clEOA));
  clSetq(CONS_144, clCons(clSYMBOL_VALUE, CONS_145, clEOA));
  clSetq(CONS_143, clCons(CONS_144, clNIL, clEOA));
  clSetq(CONS_140, clCons(CONS_141, CONS_143, clEOA));
  clSetq(CONS_137, clCons(CONS_138, CONS_140, clEOA));
  clSetq(CONS_118, clCons(CONS_119, CONS_137, clEOA));
  clSetq(CONS_117, clCons(CONS_79, CONS_118, clEOA));
  clSetq(CONS_111, clCons(CONS_112, CONS_117, clEOA));
  clSetq(CONS_107, clCons(CONS_108, CONS_111, clEOA));
  clSetq(CONS_100, clCons(CONS_101, CONS_107, clEOA));
  clSetq(CONS_94, clCons(CONS_95, CONS_100, clEOA));
  clSetq(CONS_83, clCons(CONS_84, CONS_94, clEOA));
  clSetq(CONS_82, clCons(CONS_79, CONS_83, clEOA));
  clSetq(CONS_76, clCons(CONS_77, CONS_82, clEOA));
  clSetq(CONS_75, clCons(clVALUES, CONS_76, clEOA));
  clSetq(CONS_157, clCons(I_5, CONS_123, clEOA));
  clSetq(CONS_159, clCons(keyANY_KEYWORD, CONS_147, clEOA));
  clSetq(CONS_158, clCons(I_3, CONS_159, clEOA));
  clSetq(CONS_156, clCons(CONS_157, CONS_158, clEOA));
  clSetq(CONS_155, clCons(I_3, CONS_156, clEOA));
  clSetq(CONS_154, clCons(I_2, CONS_155, clEOA));
  clSetq(CONS_153, clCons(I_3, CONS_154, clEOA));
  clSetq(CONS_152, clCons(I_2, CONS_153, clEOA));
  clSetq(CONS_151, clCons(I_1, CONS_152, clEOA));
  clSetq(CONS_150, clCons(I_1, CONS_151, clEOA));
  clSetq(CONS_149, clCons(I_1, CONS_150, clEOA));
  clSetq(CONS_148, clCons(I_1, CONS_149, clEOA));
  clSetq(CONS_168, clCons(clNIL, CONS_11, clEOA));
  clSetq(CONS_167, clCons(clLAMBDA, CONS_168, clEOA));
  clSetq(CONS_166, clCons(CONS_167, clNIL, clEOA));
  clSetq(CONS_165, clCons(clFUNCTION, CONS_166, clEOA));
  clSetq(CONS_164, clCons(CONS_165, clNIL, clEOA));
  clSetq(CONS_163, clCons(clF, CONS_164, clEOA));
  clSetq(CONS_162, clCons(CONS_163, clNIL, clEOA));
  clSetq(CONS_179, clCons(clFOO, clNIL, clEOA));
  clSetq(CONS_178, clCons(clQUOTE, CONS_179, clEOA));
  clSetq(CONS_177, clCons(CONS_178, clNIL, clEOA));
  clSetq(CONS_176, clCons(clSYMBOL_FUNCTION, CONS_177, clEOA));
  clSetq(CONS_180, clCons(clF, clNIL, clEOA));
  clSetq(CONS_175, clCons(CONS_176, CONS_180, clEOA));
  clSetq(CONS_174, clCons(clSETF, CONS_175, clEOA));
  clSetq(CONS_173, clCons(CONS_174, CONS_180, clEOA));
  clSetq(CONS_172, clCons(clEQ, CONS_173, clEOA));
  clSetq(CONS_183, clCons(CONS_176, clNIL, clEOA));
  clSetq(CONS_182, clCons(clFUNCALL, CONS_183, clEOA));
  clSetq(CONS_181, clCons(CONS_182, clNIL, clEOA));
  clSetq(CONS_171, clCons(CONS_172, CONS_181, clEOA));
  clSetq(CONS_170, clCons(clVALUES, CONS_171, clEOA));
  clSetq(CONS_169, clCons(CONS_170, clNIL, clEOA));
  clSetq(CONS_161, clCons(CONS_162, CONS_169, clEOA));
  clSetq(CONS_160, clCons(clLET, CONS_161, clEOA));
  clSetq(CONS_184, clCons(clT, CONS_11, clEOA));
  clSetq(CONS_194, clCons(clFDEFINITION, CONS_177, clEOA));
  clSetq(CONS_193, clCons(CONS_194, CONS_180, clEOA));
  clSetq(CONS_192, clCons(clSETF, CONS_193, clEOA));
  clSetq(CONS_191, clCons(CONS_192, CONS_180, clEOA));
  clSetq(CONS_190, clCons(clEQ, CONS_191, clEOA));
  clSetq(CONS_197, clCons(CONS_194, clNIL, clEOA));
  clSetq(CONS_196, clCons(clFUNCALL, CONS_197, clEOA));
  clSetq(CONS_195, clCons(CONS_196, clNIL, clEOA));
  clSetq(CONS_189, clCons(CONS_190, CONS_195, clEOA));
  clSetq(CONS_188, clCons(clVALUES, CONS_189, clEOA));
  clSetq(CONS_187, clCons(CONS_188, clNIL, clEOA));
  clSetq(CONS_186, clCons(CONS_162, CONS_187, clEOA));
  clSetq(CONS_185, clCons(clLET, CONS_186, clEOA));
  clSetq(I_0, clIntFixnum(0));
  clSetq(CONS_202, clCons(I_0, clNIL, clEOA));
  clSetq(CONS_201, clCons(clX, CONS_202, clEOA));
  clSetq(CONS_210, clCons(clNEW, clNIL, clEOA));
  clSetq(CONS_213, clCons(clX, CONS_210, clEOA));
  clSetq(CONS_212, clCons(clSETQ, CONS_213, clEOA));
  clSetq(CONS_211, clCons(CONS_212, clNIL, clEOA));
  clSetq(CONS_209, clCons(CONS_210, CONS_211, clEOA));
  clSetq(CONS_208, clCons(clLAMBDA, CONS_209, clEOA));
  clSetq(CONS_207, clCons(CONS_208, clNIL, clEOA));
  clSetq(CONS_206, clCons(clFUNCTION, CONS_207, clEOA));
  clSetq(CONS_205, clCons(CONS_206, clNIL, clEOA));
  clSetq(CONS_204, clCons(clF, CONS_205, clEOA));
  clSetq(CONS_203, clCons(CONS_204, clNIL, clEOA));
  clSetq(CONS_200, clCons(CONS_201, CONS_203, clEOA));
  clSetq(CONS_225, clCons(clSETF, CONS_36, clEOA));
  clSetq(CONS_224, clCons(CONS_225, clNIL, clEOA));
  clSetq(CONS_223, clCons(clQUOTE, CONS_224, clEOA));
  clSetq(CONS_222, clCons(CONS_223, clNIL, clEOA));
  clSetq(CONS_221, clCons(clFDEFINITION, CONS_222, clEOA));
  clSetq(CONS_220, clCons(CONS_221, CONS_180, clEOA));
  clSetq(CONS_219, clCons(clSETF, CONS_220, clEOA));
  clSetq(CONS_218, clCons(CONS_219, CONS_180, clEOA));
  clSetq(CONS_217, clCons(clEQ, CONS_218, clEOA));
  clSetq(CONS_228, clCons(CONS_221, CONS_11, clEOA));
  clSetq(CONS_227, clCons(clFUNCALL, CONS_228, clEOA));
  clSetq(CONS_226, clCons(CONS_227, CONS_36, clEOA));
  clSetq(CONS_216, clCons(CONS_217, CONS_226, clEOA));
  clSetq(CONS_215, clCons(clVALUES, CONS_216, clEOA));
  clSetq(CONS_214, clCons(CONS_215, clNIL, clEOA));
  clSetq(CONS_199, clCons(CONS_200, CONS_214, clEOA));
  clSetq(CONS_198, clCons(clLETstar, CONS_199, clEOA));
  clSetq(CONS_230, clCons(I_3, CONS_11, clEOA));
  clSetq(CONS_229, clCons(clT, CONS_230, clEOA));
  clSetq(CONS_237, clCons(clSPECIAL, CONS_36, clEOA));
  clSetq(CONS_236, clCons(CONS_237, clNIL, clEOA));
  clSetq(CONS_235, clCons(clDECLARE, CONS_236, clEOA));
  clSetq(CONS_240, clCons(clX, CONS_81, clEOA));
  clSetq(CONS_239, clCons(clSETQ, CONS_240, clEOA));
  clSetq(CONS_238, clCons(CONS_239, clNIL, clEOA));
  clSetq(CONS_234, clCons(CONS_235, CONS_238, clEOA));
  clSetq(CONS_233, clCons(clLOCALLY, CONS_234, clEOA));
  clSetq(CONS_244, clCons(clQUOTE, CONS_36, clEOA));
  clSetq(CONS_243, clCons(CONS_244, clNIL, clEOA));
  clSetq(CONS_242, clCons(clBOUNDP, CONS_243, clEOA));
  clSetq(CONS_246, clCons(clMAKUNBOUND, CONS_243, clEOA));
  clSetq(CONS_252, clCons(clX, CONS_88, clEOA));
  clSetq(CONS_251, clCons(CONS_252, clNIL, clEOA));
  clSetq(CONS_256, clCons(clIGNORABLE, CONS_36, clEOA));
  clSetq(CONS_255, clCons(CONS_256, clNIL, clEOA));
  clSetq(CONS_254, clCons(clDECLARE, CONS_255, clEOA));
  clSetq(CONS_257, clCons(CONS_242, clNIL, clEOA));
  clSetq(CONS_253, clCons(CONS_254, CONS_257, clEOA));
  clSetq(CONS_250, clCons(CONS_251, CONS_253, clEOA));
  clSetq(CONS_249, clCons(clLET, CONS_250, clEOA));
  clSetq(CONS_261, clCons(CONS_235, CONS_257, clEOA));
  clSetq(CONS_260, clCons(CONS_251, CONS_261, clEOA));
  clSetq(CONS_259, clCons(clLET, CONS_260, clEOA));
  clSetq(CONS_258, clCons(CONS_259, clNIL, clEOA));
  clSetq(CONS_248, clCons(CONS_249, CONS_258, clEOA));
  clSetq(CONS_247, clCons(CONS_242, CONS_248, clEOA));
  clSetq(CONS_245, clCons(CONS_246, CONS_247, clEOA));
  clSetq(CONS_241, clCons(CONS_242, CONS_245, clEOA));
  clSetq(CONS_232, clCons(CONS_233, CONS_241, clEOA));
  clSetq(CONS_231, clCons(clVALUES, CONS_232, clEOA));
  clSetq(CONS_267, clCons(clT, clNIL, clEOA));
  clSetq(CONS_266, clCons(clNIL, CONS_267, clEOA));
  clSetq(CONS_265, clCons(clNIL, CONS_266, clEOA));
  clSetq(CONS_264, clCons(clX, CONS_265, clEOA));
  clSetq(CONS_263, clCons(clT, CONS_264, clEOA));
  clSetq(CONS_262, clCons(I_1, CONS_263, clEOA));
  clSetq(CONS_277, clCons(clSYMBOL_FUNCTION, CONS_243, clEOA));
  clSetq(CONS_276, clCons(CONS_277, CONS_180, clEOA));
  clSetq(CONS_275, clCons(clSETF, CONS_276, clEOA));
  clSetq(CONS_274, clCons(CONS_275, CONS_180, clEOA));
  clSetq(CONS_273, clCons(clEQ, CONS_274, clEOA));
  clSetq(CONS_272, clCons(CONS_273, clNIL, clEOA));
  clSetq(CONS_271, clCons(CONS_162, CONS_272, clEOA));
  clSetq(CONS_270, clCons(clLET, CONS_271, clEOA));
  clSetq(CONS_283, clCons(clFBOUNDP, CONS_243, clEOA));
  clSetq(CONS_282, clCons(CONS_283, clNIL, clEOA));
  clSetq(CONS_281, clCons(clNULL, CONS_282, clEOA));
  clSetq(CONS_280, clCons(CONS_281, clNIL, clEOA));
  clSetq(CONS_279, clCons(clNOT, CONS_280, clEOA));
  clSetq(CONS_285, clCons(clFMAKUNBOUND, CONS_243, clEOA));
  clSetq(I_9, clIntFixnum(9));
  clSetq(CONS_293, clCons(I_9, clNIL, clEOA));
  clSetq(CONS_292, clCons(clNIL, CONS_293, clEOA));
  clSetq(CONS_291, clCons(clX, CONS_292, clEOA));
  clSetq(CONS_290, clCons(CONS_291, clNIL, clEOA));
  clSetq(CONS_295, clCons(CONS_36, clNIL, clEOA));
  clSetq(CONS_294, clCons(CONS_283, CONS_295, clEOA));
  clSetq(CONS_289, clCons(CONS_290, CONS_294, clEOA));
  clSetq(CONS_288, clCons(clFLET, CONS_289, clEOA));
  clSetq(CONS_287, clCons(CONS_288, clNIL, clEOA));
  clSetq(CONS_286, clCons(CONS_283, CONS_287, clEOA));
  clSetq(CONS_284, clCons(CONS_285, CONS_286, clEOA));
  clSetq(CONS_278, clCons(CONS_279, CONS_284, clEOA));
  clSetq(CONS_269, clCons(CONS_270, CONS_278, clEOA));
  clSetq(CONS_268, clCons(clVALUES, CONS_269, clEOA));
  clSetq(CONS_297, clCons(clT, CONS_291, clEOA));
  clSetq(CONS_296, clCons(clT, CONS_297, clEOA));
  clSetq(CONS_303, clCons(clIF, clNIL, clEOA));
  clSetq(CONS_302, clCons(clQUOTE, CONS_303, clEOA));
  clSetq(CONS_301, clCons(CONS_302, clNIL, clEOA));
  clSetq(CONS_300, clCons(clSPECIAL_OPERATOR_P, CONS_301, clEOA));
  clSetq(CONS_299, clCons(CONS_300, clNIL, clEOA));
  clSetq(CONS_298, clCons(clNOT, CONS_299, clEOA));
  clSetq(CONS_307, clCons(clCAR, clNIL, clEOA));
  clSetq(CONS_306, clCons(clQUOTE, CONS_307, clEOA));
  clSetq(CONS_305, clCons(CONS_306, clNIL, clEOA));
  clSetq(CONS_304, clCons(clSPECIAL_OPERATOR_P, CONS_305, clEOA));
  clSetq(CONS_311, clCons(clONE, clNIL, clEOA));
  clSetq(CONS_310, clCons(clQUOTE, CONS_311, clEOA));
  clSetq(CONS_309, clCons(CONS_310, clNIL, clEOA));
  clSetq(CONS_308, clCons(clSPECIAL_OPERATOR_P, CONS_309, clEOA));
  clSetq(CONS_312, clCons(clSETQ, clNIL, clEOA));
  clSetq(CONS_320, clCons(clC, CONS_11, clEOA));
  clSetq(CONS_319, clCons(I_2, CONS_320, clEOA));
  clSetq(CONS_318, clCons(clB, CONS_319, clEOA));
  clSetq(CONS_317, clCons(I_1, CONS_318, clEOA));
  clSetq(CONS_316, clCons(clA, CONS_317, clEOA));
  clSetq(CONS_315, clCons(clSETQ, CONS_316, clEOA));
  clSetq(CONS_323, clCons(clC, clNIL, clEOA));
  clSetq(CONS_322, clCons(clB, CONS_323, clEOA));
  clSetq(CONS_321, clCons(clA, CONS_322, clEOA));
  clSetq(CONS_314, clCons(CONS_315, CONS_321, clEOA));
  clSetq(CONS_313, clCons(clLIST, CONS_314, clEOA));
  clSetq(CONS_327, clCons(I_2, CONS_11, clEOA));
  clSetq(CONS_326, clCons(I_1, CONS_327, clEOA));
  clSetq(CONS_325, clCons(I_3, CONS_326, clEOA));
  clSetq(CONS_324, clCons(CONS_325, clNIL, clEOA));
  clSetq(CONS_334, clCons(clB, CONS_81, clEOA));
  clSetq(CONS_333, clCons(clplussymbol, CONS_334, clEOA));
  clSetq(CONS_338, clCons(clA, CONS_81, clEOA));
  clSetq(CONS_337, clCons(clplussymbol, CONS_338, clEOA));
  clSetq(CONS_341, clCons(clplussymbol, CONS_135, clEOA));
  clSetq(CONS_340, clCons(CONS_341, clNIL, clEOA));
  clSetq(CONS_339, clCons(clC, CONS_340, clEOA));
  clSetq(CONS_336, clCons(CONS_337, CONS_339, clEOA));
  clSetq(CONS_335, clCons(clB, CONS_336, clEOA));
  clSetq(CONS_332, clCons(CONS_333, CONS_335, clEOA));
  clSetq(CONS_331, clCons(clA, CONS_332, clEOA));
  clSetq(CONS_330, clCons(clSETQ, CONS_331, clEOA));
  clSetq(CONS_329, clCons(CONS_330, CONS_321, clEOA));
  clSetq(CONS_328, clCons(clLIST, CONS_329, clEOA));
  clSetq(I_7, clIntFixnum(7));
  clSetq(CONS_346, clCons(I_7, clNIL, clEOA));
  clSetq(CONS_345, clCons(I_4, CONS_346, clEOA));
  clSetq(CONS_344, clCons(I_3, CONS_345, clEOA));
  clSetq(CONS_343, clCons(I_7, CONS_344, clEOA));
  clSetq(CONS_342, clCons(CONS_343, clNIL, clEOA));
  clSetq(CONS_354, clCons(I_2, CONS_81, clEOA));
  clSetq(CONS_353, clCons(I_3, CONS_354, clEOA));
  clSetq(CONS_352, clCons(clplussymbol, CONS_353, clEOA));
  clSetq(CONS_358, clCons(clX, CONS_147, clEOA));
  clSetq(CONS_357, clCons(clCONS, CONS_358, clEOA));
  clSetq(CONS_356, clCons(CONS_357, clNIL, clEOA));
  clSetq(CONS_355, clCons(clY, CONS_356, clEOA));
  clSetq(CONS_351, clCons(CONS_352, CONS_355, clEOA));
  clSetq(CONS_350, clCons(clX, CONS_351, clEOA));
  clSetq(CONS_349, clCons(clSETQ, CONS_350, clEOA));
  clSetq(CONS_348, clCons(CONS_349, CONS_52, clEOA));
  clSetq(CONS_347, clCons(clLIST, CONS_348, clEOA));
  clSetq(CONS_362, clCons(CONS_53, clNIL, clEOA));
  clSetq(CONS_361, clCons(I_6, CONS_362, clEOA));
  clSetq(CONS_360, clCons(CONS_53, CONS_361, clEOA));
  clSetq(CONS_359, clCons(CONS_360, clNIL, clEOA));
  clSetq(I_10, clIntFixnum(10));
  clSetq(I_20, clIntFixnum(20));
  clSetq(I_30, clIntFixnum(30));
  clSetq(CONS_371, clCons(I_30, clNIL, clEOA));
  clSetq(CONS_370, clCons(I_20, CONS_371, clEOA));
  clSetq(CONS_369, clCons(I_10, CONS_370, clEOA));
  clSetq(CONS_368, clCons(clLIST, CONS_369, clEOA));
  clSetq(CONS_367, clCons(CONS_368, clNIL, clEOA));
  clSetq(CONS_366, clCons(clX, CONS_367, clEOA));
  clSetq(CONS_365, clCons(CONS_366, clNIL, clEOA));
  clSetq(CONS_378, clCons(clCAR, CONS_36, clEOA));
  clSetq(CONS_377, clCons(CONS_378, clNIL, clEOA));
  clSetq(CONS_376, clCons(clY, CONS_377, clEOA));
  clSetq(CONS_382, clCons(clCADR, CONS_36, clEOA));
  clSetq(CONS_381, clCons(CONS_382, clNIL, clEOA));
  clSetq(CONS_380, clCons(clZ, CONS_381, clEOA));
  clSetq(CONS_379, clCons(CONS_380, clNIL, clEOA));
  clSetq(CONS_375, clCons(CONS_376, CONS_379, clEOA));
  clSetq(CONS_389, clCons(clZ, clNIL, clEOA));
  clSetq(CONS_388, clCons(I_1, CONS_389, clEOA));
  clSetq(CONS_387, clCons(clplussymbol, CONS_388, clEOA));
  clSetq(CONS_392, clCons(clplussymbol, CONS_49, clEOA));
  clSetq(CONS_391, clCons(CONS_392, clNIL, clEOA));
  clSetq(CONS_390, clCons(clZ, CONS_391, clEOA));
  clSetq(CONS_386, clCons(CONS_387, CONS_390, clEOA));
  clSetq(CONS_385, clCons(clY, CONS_386, clEOA));
  clSetq(CONS_384, clCons(clSETQ, CONS_385, clEOA));
  clSetq(CONS_396, clCons(clY, CONS_389, clEOA));
  clSetq(CONS_395, clCons(clX, CONS_396, clEOA));
  clSetq(CONS_394, clCons(clLIST, CONS_395, clEOA));
  clSetq(CONS_393, clCons(CONS_394, clNIL, clEOA));
  clSetq(CONS_383, clCons(CONS_384, CONS_393, clEOA));
  clSetq(CONS_374, clCons(CONS_375, CONS_383, clEOA));
  clSetq(CONS_373, clCons(clSYMBOL_MACROLET, CONS_374, clEOA));
  clSetq(CONS_372, clCons(CONS_373, clNIL, clEOA));
  clSetq(CONS_364, clCons(CONS_365, CONS_372, clEOA));
  clSetq(CONS_363, clCons(clLET, CONS_364, clEOA));
  clSetq(I_21, clIntFixnum(21));
  clSetq(CONS_400, clCons(I_21, CONS_371, clEOA));
  clSetq(CONS_399, clCons(I_21, CONS_400, clEOA));
  clSetq(CONS_402, clCons(I_21, clNIL, clEOA));
  clSetq(CONS_401, clCons(I_21, CONS_402, clEOA));
  clSetq(CONS_398, clCons(CONS_399, CONS_401, clEOA));
  clSetq(CONS_397, clCons(CONS_398, clNIL, clEOA));
  clSetq(CONS_415, clCons(I_1, CONS_49, clEOA));
  clSetq(CONS_414, clCons(clplussymbol, CONS_415, clEOA));
  clSetq(CONS_413, clCons(CONS_414, clNIL, clEOA));
  clSetq(CONS_412, clCons(clZ, CONS_413, clEOA));
  clSetq(CONS_411, clCons(CONS_387, CONS_412, clEOA));
  clSetq(CONS_410, clCons(clY, CONS_411, clEOA));
  clSetq(CONS_409, clCons(clSETQ, CONS_410, clEOA));
  clSetq(CONS_408, clCons(CONS_409, CONS_393, clEOA));
  clSetq(CONS_407, clCons(CONS_375, CONS_408, clEOA));
  clSetq(CONS_406, clCons(clSYMBOL_MACROLET, CONS_407, clEOA));
  clSetq(CONS_405, clCons(CONS_406, clNIL, clEOA));
  clSetq(CONS_404, clCons(CONS_365, CONS_405, clEOA));
  clSetq(CONS_403, clCons(clLET, CONS_404, clEOA));
  clSetq(I_22, clIntFixnum(22));
  clSetq(CONS_419, clCons(I_22, CONS_371, clEOA));
  clSetq(CONS_418, clCons(I_21, CONS_419, clEOA));
  clSetq(CONS_421, clCons(I_22, clNIL, clEOA));
  clSetq(CONS_420, clCons(I_21, CONS_421, clEOA));
  clSetq(CONS_417, clCons(CONS_418, CONS_420, clEOA));
  clSetq(CONS_416, clCons(CONS_417, clNIL, clEOA));
  clSetq(CONS_422, clCons(clPSETQ, clNIL, clEOA));
  clSetq(CONS_428, clCons(clPSETQ, CONS_316, clEOA));
  clSetq(CONS_433, clCons(cl1plussymbol, CONS_136, clEOA));
  clSetq(CONS_436, clCons(cl1plussymbol, CONS_19, clEOA));
  clSetq(CONS_435, clCons(CONS_436, CONS_339, clEOA));
  clSetq(CONS_434, clCons(clB, CONS_435, clEOA));
  clSetq(CONS_432, clCons(CONS_433, CONS_434, clEOA));
  clSetq(CONS_431, clCons(clA, CONS_432, clEOA));
  clSetq(CONS_430, clCons(clPSETQ, CONS_431, clEOA));
  clSetq(CONS_429, clCons(CONS_430, CONS_321, clEOA));
  clSetq(CONS_427, clCons(CONS_428, CONS_429, clEOA));
  clSetq(CONS_426, clCons(clVALUES, CONS_427, clEOA));
  clSetq(CONS_425, clCons(CONS_426, clNIL, clEOA));
  clSetq(CONS_424, clCons(CONS_321, CONS_425, clEOA));
  clSetq(CONS_423, clCons(clLET, CONS_424, clEOA));
  clSetq(CONS_439, clCons(I_3, CONS_327, clEOA));
  clSetq(CONS_438, clCons(clNIL, CONS_439, clEOA));
  clSetq(CONS_437, clCons(clNIL, CONS_438, clEOA));
  clSetq(CONS_449, clCons(cl1plussymbol, CONS_389, clEOA));
  clSetq(CONS_452, clCons(cl1plussymbol, CONS_49, clEOA));
  clSetq(CONS_451, clCons(CONS_452, clNIL, clEOA));
  clSetq(CONS_450, clCons(clZ, CONS_451, clEOA));
  clSetq(CONS_448, clCons(CONS_449, CONS_450, clEOA));
  clSetq(CONS_447, clCons(clY, CONS_448, clEOA));
  clSetq(CONS_446, clCons(clPSETQ, CONS_447, clEOA));
  clSetq(CONS_445, clCons(CONS_446, CONS_393, clEOA));
  clSetq(CONS_444, clCons(CONS_375, CONS_445, clEOA));
  clSetq(CONS_443, clCons(clSYMBOL_MACROLET, CONS_444, clEOA));
  clSetq(CONS_442, clCons(CONS_443, clNIL, clEOA));
  clSetq(CONS_441, clCons(CONS_365, CONS_442, clEOA));
  clSetq(CONS_440, clCons(clLET, CONS_441, clEOA));
  clSetq(I_11, clIntFixnum(11));
  clSetq(CONS_456, clCons(I_11, CONS_371, clEOA));
  clSetq(CONS_455, clCons(I_21, CONS_456, clEOA));
  clSetq(CONS_458, clCons(I_11, clNIL, clEOA));
  clSetq(CONS_457, clCons(I_21, CONS_458, clEOA));
  clSetq(CONS_454, clCons(CONS_455, CONS_457, clEOA));
  clSetq(CONS_453, clCons(CONS_454, clNIL, clEOA));
  clSetq(CONS_463, clCons(clB, CONS_88, clEOA));
  clSetq(CONS_462, clCons(CONS_463, clNIL, clEOA));
  clSetq(CONS_461, clCons(CONS_338, CONS_462, clEOA));
  clSetq(CONS_468, clCons(clB, CONS_19, clEOA));
  clSetq(CONS_467, clCons(clB, CONS_468, clEOA));
  clSetq(CONS_466, clCons(clA, CONS_467, clEOA));
  clSetq(CONS_465, clCons(clPSETQ, CONS_466, clEOA));
  clSetq(CONS_470, clCons(clVALUES, CONS_135, clEOA));
  clSetq(CONS_469, clCons(CONS_470, clNIL, clEOA));
  clSetq(CONS_464, clCons(CONS_465, CONS_469, clEOA));
  clSetq(CONS_460, clCons(CONS_461, CONS_464, clEOA));
  clSetq(CONS_459, clCons(clLET, CONS_460, clEOA));
  clSetq(CONS_474, clCons(CONS_18, CONS_81, clEOA));
  clSetq(CONS_473, clCons(clSET, CONS_474, clEOA));
  clSetq(CONS_481, clCons(CONS_18, CONS_11, clEOA));
  clSetq(CONS_480, clCons(clSET, CONS_481, clEOA));
  clSetq(CONS_479, clCons(CONS_480, CONS_19, clEOA));
  clSetq(CONS_478, clCons(CONS_86, CONS_479, clEOA));
  clSetq(CONS_477, clCons(clLET, CONS_478, clEOA));
  clSetq(CONS_492, clCons(CONS_18, CONS_26, clEOA));
  clSetq(CONS_491, clCons(clSET, CONS_492, clEOA));
  clSetq(CONS_490, clCons(CONS_491, CONS_133, clEOA));
  clSetq(CONS_489, clCons(CONS_128, CONS_490, clEOA));
  clSetq(CONS_488, clCons(clLET, CONS_489, clEOA));
  clSetq(CONS_487, clCons(CONS_488, clNIL, clEOA));
  clSetq(CONS_486, clCons(CONS_104, CONS_487, clEOA));
  clSetq(CONS_485, clCons(CONS_121, CONS_486, clEOA));
  clSetq(CONS_484, clCons(clLET, CONS_485, clEOA));
  clSetq(CONS_483, clCons(CONS_484, clNIL, clEOA));
  clSetq(CONS_482, clCons(CONS_79, CONS_483, clEOA));
  clSetq(CONS_476, clCons(CONS_477, CONS_482, clEOA));
  clSetq(CONS_475, clCons(CONS_79, CONS_476, clEOA));
  clSetq(CONS_472, clCons(CONS_473, CONS_475, clEOA));
  clSetq(CONS_471, clCons(clVALUES, CONS_472, clEOA));
  clSetq(CONS_497, clCons(CONS_157, clNIL, clEOA));
  clSetq(CONS_496, clCons(I_3, CONS_497, clEOA));
  clSetq(CONS_495, clCons(I_2, CONS_496, clEOA));
  clSetq(CONS_494, clCons(I_1, CONS_495, clEOA));
  clSetq(CONS_493, clCons(I_1, CONS_494, clEOA));
  clSetq(CONS_498, clCons(clSETF, clNIL, clEOA));
  clSetq(CONS_503, clCons(CONS_320, clNIL, clEOA));
  clSetq(CONS_502, clCons(CONS_463, CONS_503, clEOA));
  clSetq(CONS_501, clCons(CONS_338, CONS_502, clEOA));
  clSetq(CONS_512, clCons(clC, CONS_136, clEOA));
  clSetq(CONS_511, clCons(clC, CONS_512, clEOA));
  clSetq(CONS_510, clCons(clB, CONS_511, clEOA));
  clSetq(CONS_509, clCons(I_2, CONS_510, clEOA));
  clSetq(CONS_508, clCons(clA, CONS_509, clEOA));
  clSetq(CONS_507, clCons(clSETF, CONS_508, clEOA));
  clSetq(CONS_506, clCons(CONS_507, CONS_321, clEOA));
  clSetq(CONS_505, clCons(clVALUES, CONS_506, clEOA));
  clSetq(CONS_504, clCons(CONS_505, clNIL, clEOA));
  clSetq(CONS_500, clCons(CONS_501, CONS_504, clEOA));
  clSetq(CONS_499, clCons(clLET, CONS_500, clEOA));
  clSetq(CONS_514, clCons(I_2, CONS_230, clEOA));
  clSetq(CONS_513, clCons(I_3, CONS_514, clEOA));
  clSetq(CONS_521, clCons(I_1, CONS_88, clEOA));
  clSetq(CONS_520, clCons(clLIST, CONS_521, clEOA));
  clSetq(CONS_519, clCons(CONS_520, clNIL, clEOA));
  clSetq(CONS_518, clCons(clX, CONS_519, clEOA));
  clSetq(CONS_523, clCons(clY, CONS_11, clEOA));
  clSetq(CONS_522, clCons(CONS_523, clNIL, clEOA));
  clSetq(CONS_517, clCons(CONS_518, CONS_522, clEOA));
  clSetq(CONS_530, clCons(clINTEGER, CONS_381, clEOA));
  clSetq(CONS_529, clCons(clTHE, CONS_530, clEOA));
  clSetq(CONS_532, clCons(clplussymbol, CONS_523, clEOA));
  clSetq(CONS_531, clCons(CONS_532, clNIL, clEOA));
  clSetq(CONS_528, clCons(CONS_529, CONS_531, clEOA));
  clSetq(CONS_527, clCons(clSETF, CONS_528, clEOA));
  clSetq(CONS_526, clCons(CONS_527, CONS_52, clEOA));
  clSetq(CONS_525, clCons(clVALUES, CONS_526, clEOA));
  clSetq(CONS_524, clCons(CONS_525, clNIL, clEOA));
  clSetq(CONS_516, clCons(CONS_517, CONS_524, clEOA));
  clSetq(CONS_515, clCons(clLET, CONS_516, clEOA));
  clSetq(CONS_535, clCons(I_1, CONS_53, clEOA));
  clSetq(CONS_534, clCons(CONS_535, CONS_11, clEOA));
  clSetq(CONS_533, clCons(I_6, CONS_534, clEOA));
  clSetq(CONS_544, clCons(clQUOTE, CONS_136, clEOA));
  clSetq(CONS_543, clCons(CONS_544, clNIL, clEOA));
  clSetq(CONS_542, clCons(CONS_18, CONS_543, clEOA));
  clSetq(CONS_541, clCons(clCONS, CONS_542, clEOA));
  clSetq(CONS_540, clCons(CONS_541, clNIL, clEOA));
  clSetq(CONS_539, clCons(clX, CONS_540, clEOA));
  clSetq(CONS_548, clCons(clLIST, CONS_326, clEOA));
  clSetq(CONS_547, clCons(CONS_548, clNIL, clEOA));
  clSetq(CONS_546, clCons(clY, CONS_547, clEOA));
  clSetq(CONS_545, clCons(CONS_546, clNIL, clEOA));
  clSetq(CONS_538, clCons(CONS_539, CONS_545, clEOA));
  clSetq(CONS_556, clCons(clCADR, CONS_49, clEOA));
  clSetq(CONS_559, clCons(clCDR, CONS_36, clEOA));
  clSetq(CONS_558, clCons(CONS_559, CONS_49, clEOA));
  clSetq(CONS_557, clCons(CONS_378, CONS_558, clEOA));
  clSetq(CONS_555, clCons(CONS_556, CONS_557, clEOA));
  clSetq(CONS_554, clCons(CONS_244, CONS_555, clEOA));
  clSetq(CONS_553, clCons(CONS_378, CONS_554, clEOA));
  clSetq(CONS_552, clCons(clPSETF, CONS_553, clEOA));
  clSetq(CONS_551, clCons(CONS_552, CONS_52, clEOA));
  clSetq(CONS_550, clCons(clVALUES, CONS_551, clEOA));
  clSetq(CONS_549, clCons(CONS_550, clNIL, clEOA));
  clSetq(CONS_537, clCons(CONS_538, CONS_549, clEOA));
  clSetq(CONS_536, clCons(clLET, CONS_537, clEOA));
  clSetq(CONS_563, clCons(I_1, CONS_10, clEOA));
  clSetq(CONS_562, clCons(clX, CONS_563, clEOA));
  clSetq(CONS_564, clCons(CONS_563, clNIL, clEOA));
  clSetq(CONS_561, clCons(CONS_562, CONS_564, clEOA));
  clSetq(CONS_560, clCons(clNIL, CONS_561, clEOA));
  clSetq(CONS_568, clCons(clX, CONS_547, clEOA));
  clSetq(CONS_573, clCons(clTRASH, clNIL, clEOA));
  clSetq(CONS_572, clCons(clQUOTE, CONS_573, clEOA));
  clSetq(CONS_571, clCons(CONS_572, clNIL, clEOA));
  clSetq(CONS_570, clCons(clY, CONS_571, clEOA));
  clSetq(CONS_569, clCons(CONS_570, clNIL, clEOA));
  clSetq(CONS_567, clCons(CONS_568, CONS_569, clEOA));
  clSetq(CONS_585, clCons(clTHERE, clNIL, clEOA));
  clSetq(CONS_584, clCons(clHI, CONS_585, clEOA));
  clSetq(CONS_583, clCons(CONS_584, clNIL, clEOA));
  clSetq(CONS_582, clCons(clQUOTE, CONS_583, clEOA));
  clSetq(CONS_581, clCons(CONS_582, clNIL, clEOA));
  clSetq(CONS_580, clCons(CONS_559, CONS_581, clEOA));
  clSetq(CONS_579, clCons(clX, CONS_580, clEOA));
  clSetq(CONS_578, clCons(clY, CONS_579, clEOA));
  clSetq(CONS_577, clCons(clSHIFTF, CONS_578, clEOA));
  clSetq(CONS_576, clCons(CONS_577, CONS_52, clEOA));
  clSetq(CONS_575, clCons(clVALUES, CONS_576, clEOA));
  clSetq(CONS_574, clCons(CONS_575, clNIL, clEOA));
  clSetq(CONS_566, clCons(CONS_567, CONS_574, clEOA));
  clSetq(CONS_565, clCons(clLET, CONS_566, clEOA));
  clSetq(CONS_589, clCons(I_1, CONS_584, clEOA));
  clSetq(CONS_588, clCons(CONS_589, clNIL, clEOA));
  clSetq(CONS_587, clCons(CONS_327, CONS_588, clEOA));
  clSetq(CONS_586, clCons(clTRASH, CONS_587, clEOA));
  clSetq(CONS_593, clCons(clN, CONS_202, clEOA));
  clSetq(CONS_601, clCons(clQUOTE, CONS_323, clEOA));
  clSetq(CONS_604, clCons(clD, clNIL, clEOA));
  clSetq(CONS_603, clCons(clQUOTE, CONS_604, clEOA));
  clSetq(CONS_607, clCons(clE, clNIL, clEOA));
  clSetq(CONS_606, clCons(clQUOTE, CONS_607, clEOA));
  clSetq(CONS_609, clCons(clQUOTE, CONS_180, clEOA));
  clSetq(CONS_612, clCons(clG, clNIL, clEOA));
  clSetq(CONS_611, clCons(clQUOTE, CONS_612, clEOA));
  clSetq(CONS_610, clCons(CONS_611, clNIL, clEOA));
  clSetq(CONS_608, clCons(CONS_609, CONS_610, clEOA));
  clSetq(CONS_605, clCons(CONS_606, CONS_608, clEOA));
  clSetq(CONS_602, clCons(CONS_603, CONS_605, clEOA));
  clSetq(CONS_600, clCons(CONS_601, CONS_602, clEOA));
  clSetq(CONS_599, clCons(CONS_544, CONS_600, clEOA));
  clSetq(CONS_598, clCons(CONS_18, CONS_599, clEOA));
  clSetq(CONS_597, clCons(clLIST, CONS_598, clEOA));
  clSetq(CONS_596, clCons(CONS_597, clNIL, clEOA));
  clSetq(CONS_595, clCons(clX, CONS_596, clEOA));
  clSetq(CONS_594, clCons(CONS_595, clNIL, clEOA));
  clSetq(CONS_592, clCons(CONS_593, CONS_594, clEOA));
  clSetq(CONS_619, clCons(clN, clNIL, clEOA));
  clSetq(CONS_618, clCons(clINCF, CONS_619, clEOA));
  clSetq(CONS_617, clCons(CONS_618, CONS_36, clEOA));
  clSetq(CONS_616, clCons(clNTH, CONS_617, clEOA));
  clSetq(CONS_621, clCons(CONS_616, clNIL, clEOA));
  clSetq(CONS_620, clCons(CONS_616, CONS_621, clEOA));
  clSetq(CONS_615, clCons(CONS_616, CONS_620, clEOA));
  clSetq(CONS_614, clCons(clROTATEF, CONS_615, clEOA));
  clSetq(CONS_613, clCons(CONS_614, CONS_36, clEOA));
  clSetq(CONS_591, clCons(CONS_592, CONS_613, clEOA));
  clSetq(CONS_590, clCons(clLET, CONS_591, clEOA));
  clSetq(CONS_628, clCons(clF, CONS_612, clEOA));
  clSetq(CONS_627, clCons(clE, CONS_628, clEOA));
  clSetq(CONS_626, clCons(clB, CONS_627, clEOA));
  clSetq(CONS_625, clCons(clD, CONS_626, clEOA));
  clSetq(CONS_624, clCons(clC, CONS_625, clEOA));
  clSetq(CONS_623, clCons(clA, CONS_624, clEOA));
  clSetq(CONS_622, clCons(CONS_623, clNIL, clEOA));
  clSetq(CONS_635, clCons(CONS_321, clNIL, clEOA));
  clSetq(CONS_634, clCons(clQUOTE, CONS_635, clEOA));
  clSetq(CONS_633, clCons(CONS_634, clNIL, clEOA));
  clSetq(CONS_632, clCons(clX, CONS_633, clEOA));
  clSetq(CONS_637, clCons(clY, CONS_36, clEOA));
  clSetq(CONS_636, clCons(CONS_637, CONS_86, clEOA));
  clSetq(CONS_631, clCons(CONS_632, CONS_636, clEOA));
  clSetq(CONS_647, clCons(clE, CONS_180, clEOA));
  clSetq(CONS_646, clCons(clD, CONS_647, clEOA));
  clSetq(CONS_645, clCons(CONS_646, clNIL, clEOA));
  clSetq(CONS_644, clCons(clQUOTE, CONS_645, clEOA));
  clSetq(CONS_650, clCons(CONS_326, clNIL, clEOA));
  clSetq(CONS_649, clCons(clQUOTE, CONS_650, clEOA));
  clSetq(CONS_648, clCons(CONS_649, clNIL, clEOA));
  clSetq(CONS_643, clCons(CONS_644, CONS_648, clEOA));
  clSetq(CONS_642, clCons(clX, CONS_643, clEOA));
  clSetq(CONS_641, clCons(clAPPENDF, CONS_642, clEOA));
  clSetq(CONS_654, clCons(clNEW_INCF, CONS_19, clEOA));
  clSetq(CONS_658, clCons(I_10, clNIL, clEOA));
  clSetq(CONS_657, clCons(clA, CONS_658, clEOA));
  clSetq(CONS_656, clCons(clNEW_INCF, CONS_657, clEOA));
  clSetq(STR_B__3, clCharpSimpleBaseString("B"));
  clSetq(STR_D__4, clCharpSimpleBaseString("D"));
  clSetq(CONS_669, clCons(STR_D__4, clNIL, clEOA));
  clSetq(CONS_668, clCons(STR_B__3, CONS_669, clEOA));
  clSetq(CONS_667, clCons(CONS_668, clNIL, clEOA));
  clSetq(CONS_666, clCons(clQUOTE, CONS_667, clEOA));
  clSetq(STR_TEST__5, clCharpSimpleBaseString("TEST"));
  clSetq(keyTEST, clMakeKeyword(STR_TEST__5, clEOA));
  clSetq(CONS_673, clCons(clSTRINGequal, clNIL, clEOA));
  clSetq(CONS_672, clCons(clFUNCTION, CONS_673, clEOA));
  clSetq(CONS_671, clCons(CONS_672, clNIL, clEOA));
  clSetq(CONS_670, clCons(keyTEST, CONS_671, clEOA));
  clSetq(CONS_665, clCons(CONS_666, CONS_670, clEOA));
  clSetq(CONS_664, clCons(clY, CONS_665, clEOA));
  clSetq(CONS_663, clCons(clUNIONF, CONS_664, clEOA));
  clSetq(CONS_682, clCons(clC, CONS_604, clEOA));
  clSetq(CONS_681, clCons(clB, CONS_682, clEOA));
  clSetq(CONS_680, clCons(clA, CONS_681, clEOA));
  clSetq(CONS_679, clCons(CONS_680, clNIL, clEOA));
  clSetq(CONS_678, clCons(clQUOTE, CONS_679, clEOA));
  clSetq(CONS_677, clCons(CONS_678, CONS_670, clEOA));
  clSetq(CONS_676, clCons(clY, CONS_677, clEOA));
  clSetq(CONS_675, clCons(clSET_EXCLUSIVE_OR, CONS_676, clEOA));
  clSetq(CONS_674, clCons(CONS_675, clNIL, clEOA));
  clSetq(CONS_662, clCons(CONS_663, CONS_674, clEOA));
  clSetq(CONS_661, clCons(clPROGN, CONS_662, clEOA));
  clSetq(CONS_660, clCons(CONS_661, clNIL, clEOA));
  clSetq(CONS_659, clCons(clA, CONS_660, clEOA));
  clSetq(CONS_655, clCons(CONS_656, CONS_659, clEOA));
  clSetq(CONS_653, clCons(CONS_654, CONS_655, clEOA));
  clSetq(CONS_652, clCons(clY, CONS_653, clEOA));
  clSetq(CONS_651, clCons(clX, CONS_652, clEOA));
  clSetq(CONS_640, clCons(CONS_641, CONS_651, clEOA));
  clSetq(CONS_639, clCons(clVALUES, CONS_640, clEOA));
  clSetq(CONS_638, clCons(CONS_639, clNIL, clEOA));
  clSetq(CONS_630, clCons(CONS_631, CONS_638, clEOA));
  clSetq(CONS_629, clCons(clLETstar, CONS_630, clEOA));
  clSetq(CONS_689, clCons(clF, CONS_326, clEOA));
  clSetq(CONS_688, clCons(clE, CONS_689, clEOA));
  clSetq(CONS_687, clCons(clD, CONS_688, clEOA));
  clSetq(CONS_686, clCons(clC, CONS_687, clEOA));
  clSetq(CONS_685, clCons(clB, CONS_686, clEOA));
  clSetq(CONS_684, clCons(clA, CONS_685, clEOA));
  clSetq(I_13, clIntFixnum(13));
  clSetq(CONS_694, clCons(I_13, CONS_147, clEOA));
  clSetq(CONS_693, clCons(I_13, CONS_694, clEOA));
  clSetq(CONS_692, clCons(I_3, CONS_693, clEOA));
  clSetq(CONS_691, clCons(CONS_321, CONS_692, clEOA));
  clSetq(CONS_690, clCons(CONS_684, CONS_691, clEOA));
  clSetq(CONS_683, clCons(CONS_684, CONS_690, clEOA));
  clSetq(CONS_695, clCons(clSET_MIDDLEGUY, clNIL, clEOA));
  clSetq(CONS_705, clCons(CONS_603, clNIL, clEOA));
  clSetq(CONS_704, clCons(CONS_601, CONS_705, clEOA));
  clSetq(CONS_703, clCons(CONS_544, CONS_704, clEOA));
  clSetq(CONS_702, clCons(CONS_18, CONS_703, clEOA));
  clSetq(CONS_701, clCons(clLIST, CONS_702, clEOA));
  clSetq(CONS_700, clCons(CONS_701, clNIL, clEOA));
  clSetq(CONS_699, clCons(clA, CONS_700, clEOA));
  clSetq(CONS_709, clCons(clLIST, CONS_243, clEOA));
  clSetq(CONS_708, clCons(CONS_709, clNIL, clEOA));
  clSetq(CONS_707, clCons(clB, CONS_708, clEOA));
  clSetq(CONS_720, clCons(I_5, CONS_53, clEOA));
  clSetq(CONS_719, clCons(I_4, CONS_720, clEOA));
  clSetq(CONS_718, clCons(clLIST, CONS_719, clEOA));
  clSetq(CONS_722, clCons(I_8, CONS_293, clEOA));
  clSetq(CONS_721, clCons(I_7, CONS_722, clEOA));
  clSetq(CONS_717, clCons(CONS_718, CONS_721, clEOA));
  clSetq(CONS_716, clCons(I_3, CONS_717, clEOA));
  clSetq(CONS_715, clCons(I_2, CONS_716, clEOA));
  clSetq(CONS_714, clCons(I_1, CONS_715, clEOA));
  clSetq(CONS_713, clCons(clLIST, CONS_714, clEOA));
  clSetq(CONS_712, clCons(CONS_713, clNIL, clEOA));
  clSetq(CONS_711, clCons(clC, CONS_712, clEOA));
  clSetq(CONS_710, clCons(CONS_711, clNIL, clEOA));
  clSetq(CONS_706, clCons(CONS_707, CONS_710, clEOA));
  clSetq(CONS_698, clCons(CONS_699, CONS_706, clEOA));
  clSetq(CONS_728, clCons(clMIDDLEGUY, CONS_19, clEOA));
  clSetq(CONS_727, clCons(CONS_728, CONS_11, clEOA));
  clSetq(CONS_726, clCons(clSETF, CONS_727, clEOA));
  clSetq(CONS_732, clCons(clMIDDLEGUY, CONS_136, clEOA));
  clSetq(CONS_731, clCons(CONS_732, CONS_346, clEOA));
  clSetq(CONS_730, clCons(clSETF, CONS_731, clEOA));
  clSetq(CONS_738, clCons(clMIDDLEGUY, CONS_323, clEOA));
  clSetq(CONS_737, clCons(CONS_738, clNIL, clEOA));
  clSetq(CONS_736, clCons(clMIDDLEGUY, CONS_737, clEOA));
  clSetq(CONS_741, clCons(clMIDDLEGUY_SYMBOL, clNIL, clEOA));
  clSetq(CONS_740, clCons(clQUOTE, CONS_741, clEOA));
  clSetq(CONS_739, clCons(CONS_740, clNIL, clEOA));
  clSetq(CONS_735, clCons(CONS_736, CONS_739, clEOA));
  clSetq(CONS_734, clCons(clSETF, CONS_735, clEOA));
  clSetq(CONS_733, clCons(CONS_734, CONS_321, clEOA));
  clSetq(CONS_729, clCons(CONS_730, CONS_733, clEOA));
  clSetq(CONS_725, clCons(CONS_726, CONS_729, clEOA));
  clSetq(CONS_724, clCons(clVALUES, CONS_725, clEOA));
  clSetq(CONS_723, clCons(CONS_724, clNIL, clEOA));
  clSetq(CONS_697, clCons(CONS_698, CONS_723, clEOA));
  clSetq(CONS_696, clCons(clLET, CONS_697, clEOA));
  clSetq(CONS_747, clCons(I_3, CONS_682, clEOA));
  clSetq(CONS_746, clCons(clA, CONS_747, clEOA));
  clSetq(CONS_755, clCons(clMIDDLEGUY_SYMBOL, CONS_53, clEOA));
  clSetq(CONS_754, clCons(I_4, CONS_755, clEOA));
  clSetq(CONS_753, clCons(CONS_754, CONS_721, clEOA));
  clSetq(CONS_752, clCons(I_3, CONS_753, clEOA));
  clSetq(CONS_751, clCons(I_2, CONS_752, clEOA));
  clSetq(CONS_750, clCons(I_1, CONS_751, clEOA));
  clSetq(CONS_749, clCons(CONS_750, clNIL, clEOA));
  clSetq(CONS_748, clCons(CONS_346, CONS_749, clEOA));
  clSetq(CONS_745, clCons(CONS_746, CONS_748, clEOA));
  clSetq(CONS_744, clCons(clMIDDLEGUY_SYMBOL, CONS_745, clEOA));
  clSetq(CONS_743, clCons(I_7, CONS_744, clEOA));
  clSetq(CONS_742, clCons(I_3, CONS_743, clEOA));
  clSetq(CONS_758, clCons(clEND, clNIL, clEOA));
  clSetq(CONS_757, clCons(clSTART, CONS_758, clEOA));
  clSetq(CONS_756, clCons(clSEQUENCE, CONS_757, clEOA));
  clSetq(CONS_759, clCons(clNEW_SEQUENCE, clNIL, clEOA));
  clSetq(STR_START1__6, clCharpSimpleBaseString("START1"));
  clSetq(keySTART1, clMakeKeyword(STR_START1__6, clEOA));
  clSetq(STR_END1__7, clCharpSimpleBaseString("END1"));
  clSetq(keyEND1, clMakeKeyword(STR_END1__7, clEOA));
  clSetq(CONS_760, clCons(I_10, CONS_658, clEOA));
  clSetq(STR_ARG__8, clCharpSimpleBaseString("ARG"));
  clSetq(CONS_761, clCons(clSTORE, clNIL, clEOA));
  clSetq(CONS_765, clCons(clX, CONS_36, clEOA));
  clSetq(CONS_764, clCons(CONS_765, CONS_202, clEOA));
  clSetq(CONS_768, clCons(clY, CONS_49, clEOA));
  clSetq(CONS_767, clCons(CONS_768, CONS_202, clEOA));
  clSetq(CONS_766, clCons(CONS_767, clNIL, clEOA));
  clSetq(CONS_763, clCons(CONS_764, CONS_766, clEOA));
  clSetq(CONS_762, clCons(clampersandKEY, CONS_763, clEOA));
  clSetq(CONS_769, clCons(clQUOTE, CONS_49, clEOA));
  clSetq(CONS_775, clCons(CONS_244, CONS_81, clEOA));
  clSetq(CONS_774, clCons(clXY, CONS_775, clEOA));
  clSetq(CONS_773, clCons(CONS_774, CONS_81, clEOA));
  clSetq(CONS_772, clCons(clSETF, CONS_773, clEOA));
  clSetq(CONS_781, clCons(clA, CONS_243, clEOA));
  clSetq(CONS_784, clCons(CONS_769, clNIL, clEOA));
  clSetq(CONS_783, clCons(clB, CONS_784, clEOA));
  clSetq(CONS_782, clCons(CONS_783, clNIL, clEOA));
  clSetq(CONS_780, clCons(CONS_781, CONS_782, clEOA));
  clSetq(CONS_790, clCons(I_1, CONS_463, clEOA));
  clSetq(CONS_789, clCons(clA, CONS_790, clEOA));
  clSetq(CONS_788, clCons(clXY, CONS_789, clEOA));
  clSetq(CONS_787, clCons(CONS_788, CONS_11, clEOA));
  clSetq(CONS_786, clCons(clSETF, CONS_787, clEOA));
  clSetq(CONS_797, clCons(clA, CONS_293, clEOA));
  clSetq(CONS_796, clCons(I_5, CONS_797, clEOA));
  clSetq(CONS_795, clCons(clB, CONS_796, clEOA));
  clSetq(CONS_794, clCons(clXY, CONS_795, clEOA));
  clSetq(I_14, clIntFixnum(14));
  clSetq(CONS_798, clCons(I_14, clNIL, clEOA));
  clSetq(CONS_793, clCons(CONS_794, CONS_798, clEOA));
  clSetq(CONS_792, clCons(clSETF, CONS_793, clEOA));
  clSetq(CONS_791, clCons(CONS_792, clNIL, clEOA));
  clSetq(CONS_785, clCons(CONS_786, CONS_791, clEOA));
  clSetq(CONS_779, clCons(CONS_780, CONS_785, clEOA));
  clSetq(CONS_778, clCons(clLET, CONS_779, clEOA));
  clSetq(CONS_802, clCons(I_0, CONS_775, clEOA));
  clSetq(CONS_801, clCons(CONS_769, CONS_802, clEOA));
  clSetq(CONS_800, clCons(clXY, CONS_801, clEOA));
  clSetq(CONS_807, clCons(CONS_769, CONS_88, clEOA));
  clSetq(CONS_806, clCons(I_1, CONS_807, clEOA));
  clSetq(CONS_805, clCons(CONS_244, CONS_806, clEOA));
  clSetq(CONS_804, clCons(clXY, CONS_805, clEOA));
  clSetq(CONS_803, clCons(CONS_804, clNIL, clEOA));
  clSetq(CONS_799, clCons(CONS_800, CONS_803, clEOA));
  clSetq(CONS_777, clCons(CONS_778, CONS_799, clEOA));
  clSetq(CONS_776, clCons(CONS_774, CONS_777, clEOA));
  clSetq(CONS_771, clCons(CONS_772, CONS_776, clEOA));
  clSetq(CONS_770, clCons(clVALUES, CONS_771, clEOA));
  clSetq(CONS_811, clCons(I_1, CONS_11, clEOA));
  clSetq(CONS_810, clCons(I_14, CONS_811, clEOA));
  clSetq(CONS_809, clCons(I_1, CONS_810, clEOA));
  clSetq(CONS_808, clCons(I_1, CONS_809, clEOA));
  clSetq(STR_XX__9, clCharpSimpleBaseString("XX"));
  clSetq(keyXX, clMakeKeyword(STR_XX__9, clEOA));
  clSetq(CONS_815, clCons(keyXX, CONS_36, clEOA));
  clSetq(CONS_814, clCons(CONS_815, CONS_202, clEOA));
  clSetq(STR_YY__10, clCharpSimpleBaseString("YY"));
  clSetq(keyYY, clMakeKeyword(STR_YY__10, clEOA));
  clSetq(CONS_818, clCons(keyYY, CONS_49, clEOA));
  clSetq(CONS_817, clCons(CONS_818, CONS_202, clEOA));
  clSetq(CONS_816, clCons(CONS_817, clNIL, clEOA));
  clSetq(CONS_813, clCons(CONS_814, CONS_816, clEOA));
  clSetq(CONS_812, clCons(clampersandKEY, CONS_813, clEOA));
  clSetq(STR_VARIABLE__11, clCharpSimpleBaseString("VARIABLE"));
  clSetq(keyVARIABLE, clMakeKeyword(STR_VARIABLE__11, clEOA));
  clSetq(CONS_830, clCons(clWW, clNIL, clEOA));
  clSetq(CONS_829, clCons(CONS_830, clNIL, clEOA));
  clSetq(CONS_828, clCons(clQUOTE, CONS_829, clEOA));
  clSetq(CONS_827, clCons(CONS_828, clNIL, clEOA));
  clSetq(CONS_826, clCons(keyVARIABLE, CONS_827, clEOA));
  clSetq(CONS_825, clCons(clNIL, CONS_826, clEOA));
  clSetq(CONS_824, clCons(clAUGMENT_ENVIRONMENT, CONS_825, clEOA));
  clSetq(CONS_823, clCons(CONS_824, clNIL, clEOA));
  clSetq(CONS_822, clCons(clE, CONS_823, clEOA));
  clSetq(CONS_821, clCons(CONS_822, clNIL, clEOA));
  clSetq(CONS_835, clCons(clENV, clNIL, clEOA));
  clSetq(CONS_834, clCons(clSPECIAL, CONS_835, clEOA));
  clSetq(CONS_838, clCons(clGET_SETF_EXPANSION, clNIL, clEOA));
  clSetq(CONS_837, clCons(clNOTINLINE, CONS_838, clEOA));
  clSetq(CONS_836, clCons(CONS_837, clNIL, clEOA));
  clSetq(CONS_833, clCons(CONS_834, CONS_836, clEOA));
  clSetq(CONS_832, clCons(clDECLARE, CONS_833, clEOA));
  clSetq(CONS_844, clCons(clQUOTE, CONS_838, clEOA));
  clSetq(CONS_843, clCons(CONS_844, clNIL, clEOA));
  clSetq(CONS_842, clCons(clSYMBOL_FUNCTION, CONS_843, clEOA));
  clSetq(CONS_848, clCons(clXXY, CONS_135, clEOA));
  clSetq(CONS_847, clCons(CONS_848, clNIL, clEOA));
  clSetq(CONS_846, clCons(clQUOTE, CONS_847, clEOA));
  clSetq(CONS_845, clCons(CONS_846, CONS_607, clEOA));
  clSetq(CONS_841, clCons(CONS_842, CONS_845, clEOA));
  clSetq(CONS_840, clCons(clFUNCALL, CONS_841, clEOA));
  clSetq(CONS_851, clCons(clE, CONS_835, clEOA));
  clSetq(CONS_850, clCons(clEQ, CONS_851, clEOA));
  clSetq(CONS_849, clCons(CONS_850, clNIL, clEOA));
  clSetq(CONS_839, clCons(CONS_840, CONS_849, clEOA));
  clSetq(CONS_831, clCons(CONS_832, CONS_839, clEOA));
  clSetq(CONS_820, clCons(CONS_821, CONS_831, clEOA));
  clSetq(CONS_819, clCons(clLET, CONS_820, clEOA));
  clSetq(STRn_12,
         clCharpSimpleBaseString("Set the last element in a list to the given value."));
  clSetq(CONS_863, clCons(CONS_718, clNIL, clEOA));
  clSetq(CONS_862, clCons(I_3, CONS_863, clEOA));
  clSetq(CONS_861, clCons(I_2, CONS_862, clEOA));
  clSetq(CONS_860, clCons(I_1, CONS_861, clEOA));
  clSetq(CONS_859, clCons(clLIST, CONS_860, clEOA));
  clSetq(CONS_858, clCons(CONS_859, clNIL, clEOA));
  clSetq(CONS_857, clCons(clC, CONS_858, clEOA));
  clSetq(CONS_856, clCons(CONS_857, clNIL, clEOA));
  clSetq(CONS_855, clCons(CONS_707, CONS_856, clEOA));
  clSetq(CONS_854, clCons(CONS_699, CONS_855, clEOA));
  clSetq(CONS_869, clCons(clLASTGUY, CONS_19, clEOA));
  clSetq(CONS_868, clCons(CONS_869, CONS_11, clEOA));
  clSetq(CONS_867, clCons(clSETF, CONS_868, clEOA));
  clSetq(CONS_873, clCons(clLASTGUY, CONS_136, clEOA));
  clSetq(CONS_872, clCons(CONS_873, CONS_346, clEOA));
  clSetq(CONS_871, clCons(clSETF, CONS_872, clEOA));
  clSetq(CONS_879, clCons(clLASTGUY, CONS_323, clEOA));
  clSetq(CONS_878, clCons(CONS_879, clNIL, clEOA));
  clSetq(CONS_877, clCons(clLASTGUY, CONS_878, clEOA));
  clSetq(CONS_882, clCons(clLASTGUY_SYMBOL, clNIL, clEOA));
  clSetq(CONS_881, clCons(clQUOTE, CONS_882, clEOA));
  clSetq(CONS_880, clCons(CONS_881, clNIL, clEOA));
  clSetq(CONS_876, clCons(CONS_877, CONS_880, clEOA));
  clSetq(CONS_875, clCons(clSETF, CONS_876, clEOA));
  clSetq(CONS_874, clCons(CONS_875, CONS_321, clEOA));
  clSetq(CONS_870, clCons(CONS_871, CONS_874, clEOA));
  clSetq(CONS_866, clCons(CONS_867, CONS_870, clEOA));
  clSetq(CONS_865, clCons(clVALUES, CONS_866, clEOA));
  clSetq(CONS_864, clCons(CONS_865, clNIL, clEOA));
  clSetq(CONS_853, clCons(CONS_854, CONS_864, clEOA));
  clSetq(CONS_852, clCons(clLET, CONS_853, clEOA));
  clSetq(CONS_888, clCons(clB, CONS_320, clEOA));
  clSetq(CONS_887, clCons(clA, CONS_888, clEOA));
  clSetq(CONS_896, clCons(I_5, CONS_882, clEOA));
  clSetq(CONS_895, clCons(I_4, CONS_896, clEOA));
  clSetq(CONS_894, clCons(CONS_895, clNIL, clEOA));
  clSetq(CONS_893, clCons(I_3, CONS_894, clEOA));
  clSetq(CONS_892, clCons(I_2, CONS_893, clEOA));
  clSetq(CONS_891, clCons(I_1, CONS_892, clEOA));
  clSetq(CONS_890, clCons(CONS_891, clNIL, clEOA));
  clSetq(CONS_889, clCons(CONS_346, CONS_890, clEOA));
  clSetq(CONS_886, clCons(CONS_887, CONS_889, clEOA));
  clSetq(CONS_885, clCons(clLASTGUY_SYMBOL, CONS_886, clEOA));
  clSetq(CONS_884, clCons(I_7, CONS_885, clEOA));
  clSetq(CONS_883, clCons(I_3, CONS_884, clEOA));
  clSetq(CONS_906, clCons(clNIL, CONS_19, clEOA));
  clSetq(CONS_905, clCons(clLAMBDA, CONS_906, clEOA));
  clSetq(CONS_904, clCons(CONS_905, clNIL, clEOA));
  clSetq(CONS_903, clCons(clFUNCTION, CONS_904, clEOA));
  clSetq(CONS_902, clCons(CONS_903, clNIL, clEOA));
  clSetq(CONS_901, clCons(clF, CONS_902, clEOA));
  clSetq(CONS_900, clCons(CONS_901, clNIL, clEOA));
  clSetq(CONS_899, clCons(CONS_338, CONS_900, clEOA));
  clSetq(CONS_908, clCons(clFUNCALL, CONS_180, clEOA));
  clSetq(CONS_907, clCons(CONS_908, clNIL, clEOA));
  clSetq(CONS_898, clCons(CONS_899, CONS_907, clEOA));
  clSetq(CONS_897, clCons(clLETstar, CONS_898, clEOA));
  clSetq(CONS_921, clCons(clA, CONS_36, clEOA));
  clSetq(CONS_920, clCons(clSETQ, CONS_921, clEOA));
  clSetq(CONS_919, clCons(CONS_920, clNIL, clEOA));
  clSetq(CONS_918, clCons(CONS_36, CONS_919, clEOA));
  clSetq(CONS_917, clCons(clLAMBDA, CONS_918, clEOA));
  clSetq(CONS_916, clCons(CONS_917, clNIL, clEOA));
  clSetq(CONS_915, clCons(clFUNCTION, CONS_916, clEOA));
  clSetq(CONS_914, clCons(CONS_915, clNIL, clEOA));
  clSetq(CONS_913, clCons(clF, CONS_914, clEOA));
  clSetq(CONS_923, clCons(clF2, CONS_902, clEOA));
  clSetq(CONS_922, clCons(CONS_923, clNIL, clEOA));
  clSetq(CONS_912, clCons(CONS_913, CONS_922, clEOA));
  clSetq(CONS_911, clCons(CONS_338, CONS_912, clEOA));
  clSetq(CONS_926, clCons(clF, CONS_11, clEOA));
  clSetq(CONS_925, clCons(clFUNCALL, CONS_926, clEOA));
  clSetq(CONS_929, clCons(clF2, clNIL, clEOA));
  clSetq(CONS_928, clCons(clFUNCALL, CONS_929, clEOA));
  clSetq(CONS_927, clCons(CONS_928, clNIL, clEOA));
  clSetq(CONS_924, clCons(CONS_925, CONS_927, clEOA));
  clSetq(CONS_910, clCons(CONS_911, CONS_924, clEOA));
  clSetq(CONS_909, clCons(clLETstar, CONS_910, clEOA));
  clSetq(CONS_936, clCons(clplussymbol, clNIL, clEOA));
  clSetq(CONS_935, clCons(clQUOTE, CONS_936, clEOA));
  clSetq(CONS_934, clCons(CONS_935, clNIL, clEOA));
  clSetq(CONS_933, clCons(clF, CONS_934, clEOA));
  clSetq(CONS_932, clCons(CONS_933, clNIL, clEOA));
  clSetq(CONS_942, clCons(CONS_521, clNIL, clEOA));
  clSetq(CONS_941, clCons(clQUOTE, CONS_942, clEOA));
  clSetq(CONS_940, clCons(CONS_941, clNIL, clEOA));
  clSetq(CONS_939, clCons(clF, CONS_940, clEOA));
  clSetq(CONS_938, clCons(clAPPLY, CONS_939, clEOA));
  clSetq(CONS_937, clCons(CONS_938, clNIL, clEOA));
  clSetq(CONS_931, clCons(CONS_932, CONS_937, clEOA));
  clSetq(CONS_930, clCons(clLET, CONS_931, clEOA));
  clSetq(CONS_944, clCons(CONS_935, CONS_940, clEOA));
  clSetq(CONS_943, clCons(clAPPLY, CONS_944, clEOA));
  clSetq(CONS_947, clCons(clFUNCTION, CONS_936, clEOA));
  clSetq(CONS_954, clCons(I_7, CONS_11, clEOA));
  clSetq(CONS_953, clCons(I_2, CONS_954, clEOA));
  clSetq(CONS_952, clCons(CONS_953, clNIL, clEOA));
  clSetq(CONS_951, clCons(clQUOTE, CONS_952, clEOA));
  clSetq(CONS_950, clCons(CONS_951, clNIL, clEOA));
  clSetq(CONS_949, clCons(I_5, CONS_950, clEOA));
  clSetq(CONS_948, clCons(I_3, CONS_949, clEOA));
  clSetq(CONS_946, clCons(CONS_947, CONS_948, clEOA));
  clSetq(CONS_945, clCons(clAPPLY, CONS_946, clEOA));
  clSetq(CONS_955, clCons(I_20, clNIL, clEOA));
  clSetq(CONS_959, clCons(clCONS, clNIL, clEOA));
  clSetq(CONS_958, clCons(clQUOTE, CONS_959, clEOA));
  clSetq(CONS_964, clCons(clplussymbol, CONS_327, clEOA));
  clSetq(CONS_963, clCons(CONS_964, CONS_123, clEOA));
  clSetq(CONS_962, clCons(CONS_963, clNIL, clEOA));
  clSetq(CONS_961, clCons(clQUOTE, CONS_962, clEOA));
  clSetq(CONS_960, clCons(CONS_961, clNIL, clEOA));
  clSetq(CONS_957, clCons(CONS_958, CONS_960, clEOA));
  clSetq(CONS_956, clCons(clAPPLY, CONS_957, clEOA));
  clSetq(CONS_966, clCons(CONS_964, I_4, clEOA));
  clSetq(CONS_965, clCons(CONS_966, clNIL, clEOA));
  clSetq(CONS_968, clCons(CONS_947, CONS_145, clEOA));
  clSetq(CONS_967, clCons(clAPPLY, CONS_968, clEOA));
  clSetq(CONS_975, clCons(clampersandKEY, CONS_135, clEOA));
  clSetq(CONS_974, clCons(CONS_975, CONS_133, clEOA));
  clSetq(CONS_973, clCons(clLAMBDA, CONS_974, clEOA));
  clSetq(CONS_972, clCons(CONS_973, clNIL, clEOA));
  clSetq(CONS_971, clCons(clFUNCTION, CONS_972, clEOA));
  clSetq(keyB, clMakeKeyword(STR_B__3, clEOA));
  clSetq(CONS_979, clCons(keyB, CONS_11, clEOA));
  clSetq(CONS_978, clCons(CONS_979, clNIL, clEOA));
  clSetq(CONS_977, clCons(clQUOTE, CONS_978, clEOA));
  clSetq(CONS_976, clCons(CONS_977, clNIL, clEOA));
  clSetq(CONS_970, clCons(CONS_971, CONS_976, clEOA));
  clSetq(CONS_969, clCons(clAPPLY, CONS_970, clEOA));
  clSetq(STR_A__13, clCharpSimpleBaseString("A"));
  clSetq(keyA, clMakeKeyword(STR_A__13, clEOA));
  clSetq(CONS_981, clCons(keyA, clNIL, clEOA));
  clSetq(CONS_980, clCons(keyB, CONS_981, clEOA));
  clSetq(CONS_982, clCons(CONS_168, clNIL, clEOA));
  clSetq(CONS_987, clCons(clF, CONS_521, clEOA));
  clSetq(CONS_986, clCons(clFUNCALL, CONS_987, clEOA));
  clSetq(CONS_985, clCons(CONS_986, clNIL, clEOA));
  clSetq(CONS_984, clCons(CONS_932, CONS_985, clEOA));
  clSetq(CONS_983, clCons(clLET, CONS_984, clEOA));
  clSetq(CONS_989, clCons(CONS_935, CONS_521, clEOA));
  clSetq(CONS_988, clCons(clFUNCALL, CONS_989, clEOA));
  clSetq(CONS_993, clCons(I_5, CONS_953, clEOA));
  clSetq(CONS_992, clCons(I_3, CONS_993, clEOA));
  clSetq(CONS_991, clCons(CONS_947, CONS_992, clEOA));
  clSetq(CONS_990, clCons(clFUNCALL, CONS_991, clEOA));
  clSetq(CONS_998, clCons(CONS_964, clNIL, clEOA));
  clSetq(CONS_997, clCons(clQUOTE, CONS_998, clEOA));
  clSetq(CONS_996, clCons(CONS_997, CONS_123, clEOA));
  clSetq(CONS_995, clCons(CONS_958, CONS_996, clEOA));
  clSetq(CONS_994, clCons(clFUNCALL, CONS_995, clEOA));
  clSetq(CONS_1000, clCons(CONS_947, clNIL, clEOA));
  clSetq(CONS_999, clCons(clFUNCALL, CONS_1000, clEOA));
  clSetq(CONS_1002, clCons(CONS_971, CONS_979, clEOA));
  clSetq(CONS_1001, clCons(clFUNCALL, CONS_1002, clEOA));
  clSetq(I_50, clIntFixnum(50));
  clSetq(CONS_1009, clCons(I_50, clNIL, clEOA));
  clSetq(CONS_1008, clCons(clINTEGER, CONS_1009, clEOA));
  clSetq(CONS_1007, clCons(CONS_1008, clNIL, clEOA));
  clSetq(CONS_1006, clCons(clQUOTE, CONS_1007, clEOA));
  clSetq(CONS_1005, clCons(CONS_1006, clNIL, clEOA));
  clSetq(CONS_1004, clCons(clCALL_ARGUMENTS_LIMIT, CONS_1005, clEOA));
  clSetq(CONS_1003, clCons(clTYPEP, CONS_1004, clEOA));
  clSetq(I_12, clIntFixnum(12));
  clSetq(I_15, clIntFixnum(15));
  clSetq(I_16, clIntFixnum(16));
  clSetq(I_17, clIntFixnum(17));
  clSetq(I_18, clIntFixnum(18));
  clSetq(I_19, clIntFixnum(19));
  clSetq(I_23, clIntFixnum(23));
  clSetq(I_24, clIntFixnum(24));
  clSetq(I_25, clIntFixnum(25));
  clSetq(I_26, clIntFixnum(26));
  clSetq(I_27, clIntFixnum(27));
  clSetq(I_28, clIntFixnum(28));
  clSetq(I_29, clIntFixnum(29));
  clSetq(I_31, clIntFixnum(31));
  clSetq(I_32, clIntFixnum(32));
  clSetq(I_33, clIntFixnum(33));
  clSetq(I_34, clIntFixnum(34));
  clSetq(I_35, clIntFixnum(35));
  clSetq(I_36, clIntFixnum(36));
  clSetq(I_37, clIntFixnum(37));
  clSetq(I_38, clIntFixnum(38));
  clSetq(I_39, clIntFixnum(39));
  clSetq(I_40, clIntFixnum(40));
  clSetq(I_41, clIntFixnum(41));
  clSetq(I_42, clIntFixnum(42));
  clSetq(I_44, clIntFixnum(44));
  clSetq(I_45, clIntFixnum(45));
  clSetq(I_46, clIntFixnum(46));
  clSetq(I_47, clIntFixnum(47));
  clSetq(I_48, clIntFixnum(48));
  clSetq(I_49, clIntFixnum(49));
  clSetq(CONS_1015, clCons(clMANY_PARAMETERS, clNIL, clEOA));
  clSetq(CONS_1014, clCons(clNOTINLINE, CONS_1015, clEOA));
  clSetq(CONS_1013, clCons(CONS_1014, clNIL, clEOA));
  clSetq(CONS_1012, clCons(clDECLARE, CONS_1013, clEOA));
  clSetq(CONS_1066, clCons(I_49, clNIL, clEOA));
  clSetq(CONS_1065, clCons(I_48, CONS_1066, clEOA));
  clSetq(CONS_1064, clCons(I_47, CONS_1065, clEOA));
  clSetq(CONS_1063, clCons(I_46, CONS_1064, clEOA));
  clSetq(CONS_1062, clCons(I_45, CONS_1063, clEOA));
  clSetq(CONS_1061, clCons(I_44, CONS_1062, clEOA));
  clSetq(CONS_1060, clCons(I_43, CONS_1061, clEOA));
  clSetq(CONS_1059, clCons(I_42, CONS_1060, clEOA));
  clSetq(CONS_1058, clCons(I_41, CONS_1059, clEOA));
  clSetq(CONS_1057, clCons(I_40, CONS_1058, clEOA));
  clSetq(CONS_1056, clCons(I_39, CONS_1057, clEOA));
  clSetq(CONS_1055, clCons(I_38, CONS_1056, clEOA));
  clSetq(CONS_1054, clCons(I_37, CONS_1055, clEOA));
  clSetq(CONS_1053, clCons(I_36, CONS_1054, clEOA));
  clSetq(CONS_1052, clCons(I_35, CONS_1053, clEOA));
  clSetq(CONS_1051, clCons(I_34, CONS_1052, clEOA));
  clSetq(CONS_1050, clCons(I_33, CONS_1051, clEOA));
  clSetq(CONS_1049, clCons(I_32, CONS_1050, clEOA));
  clSetq(CONS_1048, clCons(I_31, CONS_1049, clEOA));
  clSetq(CONS_1047, clCons(I_30, CONS_1048, clEOA));
  clSetq(CONS_1046, clCons(I_29, CONS_1047, clEOA));
  clSetq(CONS_1045, clCons(I_28, CONS_1046, clEOA));
  clSetq(CONS_1044, clCons(I_27, CONS_1045, clEOA));
  clSetq(CONS_1043, clCons(I_26, CONS_1044, clEOA));
  clSetq(CONS_1042, clCons(I_25, CONS_1043, clEOA));
  clSetq(CONS_1041, clCons(I_24, CONS_1042, clEOA));
  clSetq(CONS_1040, clCons(I_23, CONS_1041, clEOA));
  clSetq(CONS_1039, clCons(I_22, CONS_1040, clEOA));
  clSetq(CONS_1038, clCons(I_21, CONS_1039, clEOA));
  clSetq(CONS_1037, clCons(I_20, CONS_1038, clEOA));
  clSetq(CONS_1036, clCons(I_19, CONS_1037, clEOA));
  clSetq(CONS_1035, clCons(I_18, CONS_1036, clEOA));
  clSetq(CONS_1034, clCons(I_17, CONS_1035, clEOA));
  clSetq(CONS_1033, clCons(I_16, CONS_1034, clEOA));
  clSetq(CONS_1032, clCons(I_15, CONS_1033, clEOA));
  clSetq(CONS_1031, clCons(I_14, CONS_1032, clEOA));
  clSetq(CONS_1030, clCons(I_13, CONS_1031, clEOA));
  clSetq(CONS_1029, clCons(I_12, CONS_1030, clEOA));
  clSetq(CONS_1028, clCons(I_11, CONS_1029, clEOA));
  clSetq(CONS_1027, clCons(I_10, CONS_1028, clEOA));
  clSetq(CONS_1026, clCons(I_9, CONS_1027, clEOA));
  clSetq(CONS_1025, clCons(I_8, CONS_1026, clEOA));
  clSetq(CONS_1024, clCons(I_7, CONS_1025, clEOA));
  clSetq(CONS_1023, clCons(I_6, CONS_1024, clEOA));
  clSetq(CONS_1022, clCons(I_5, CONS_1023, clEOA));
  clSetq(CONS_1021, clCons(I_4, CONS_1022, clEOA));
  clSetq(CONS_1020, clCons(I_3, CONS_1021, clEOA));
  clSetq(CONS_1019, clCons(I_2, CONS_1020, clEOA));
  clSetq(CONS_1018, clCons(I_1, CONS_1019, clEOA));
  clSetq(CONS_1017, clCons(clMANY_PARAMETERS, CONS_1018, clEOA));
  clSetq(CONS_1016, clCons(CONS_1017, clNIL, clEOA));
  clSetq(CONS_1011, clCons(CONS_1012, CONS_1016, clEOA));
  clSetq(CONS_1010, clCons(clLOCALLY, CONS_1011, clEOA));
  clSetq(CONS_1067, clCons(I_1, CONS_1066, clEOA));
  clSetq(CONS_1068, clCons(clPROGN, clNIL, clEOA));
  clSetq(CONS_1072, clCons(clplussymbol, CONS_521, clEOA));
  clSetq(CONS_1071, clCons(CONS_1072, CONS_293, clEOA));
  clSetq(CONS_1070, clCons(I_1, CONS_1071, clEOA));
  clSetq(CONS_1069, clCons(clPROGN, CONS_1070, clEOA));
  clSetq(CONS_1081, clCons(clSETQ, CONS_252, clEOA));
  clSetq(CONS_1080, clCons(CONS_1081, CONS_11, clEOA));
  clSetq(CONS_1079, clCons(CONS_239, CONS_1080, clEOA));
  clSetq(CONS_1078, clCons(clPROGN, CONS_1079, clEOA));
  clSetq(CONS_1077, clCons(CONS_1078, CONS_36, clEOA));
  clSetq(CONS_1076, clCons(clLIST, CONS_1077, clEOA));
  clSetq(CONS_1075, clCons(CONS_1076, clNIL, clEOA));
  clSetq(CONS_1074, clCons(CONS_36, CONS_1075, clEOA));
  clSetq(CONS_1073, clCons(clLET, CONS_1074, clEOA));
  clSetq(CONS_1083, clCons(I_3, CONS_88, clEOA));
  clSetq(CONS_1082, clCons(CONS_1083, clNIL, clEOA));
  clSetq(CONS_1087, clCons(clTEMP, CONS_81, clEOA));
  clSetq(CONS_1086, clCons(CONS_1087, clNIL, clEOA));
  clSetq(CONS_1095, clCons(clTEMP, clNIL, clEOA));
  clSetq(CONS_1094, clCons(clINCF, CONS_1095, clEOA));
  clSetq(CONS_1093, clCons(CONS_1094, clNIL, clEOA));
  clSetq(CONS_1092, clCons(clTEMP, CONS_1093, clEOA));
  clSetq(CONS_1091, clCons(clPROG1, CONS_1092, clEOA));
  clSetq(CONS_1101, clCons(clTEMP, CONS_147, clEOA));
  clSetq(CONS_1100, clCons(clSETQ, CONS_1101, clEOA));
  clSetq(CONS_1099, clCons(CONS_1100, clNIL, clEOA));
  clSetq(CONS_1098, clCons(clTEMP, CONS_1099, clEOA));
  clSetq(CONS_1097, clCons(clPROG1, CONS_1098, clEOA));
  clSetq(CONS_1106, clCons(clVALUES, CONS_326, clEOA));
  clSetq(CONS_1105, clCons(CONS_1106, CONS_123, clEOA));
  clSetq(CONS_1104, clCons(clPROG1, CONS_1105, clEOA));
  clSetq(CONS_1103, clCons(CONS_1104, clNIL, clEOA));
  clSetq(CONS_1102, clCons(clTEMP, CONS_1103, clEOA));
  clSetq(CONS_1096, clCons(CONS_1097, CONS_1102, clEOA));
  clSetq(CONS_1090, clCons(CONS_1091, CONS_1096, clEOA));
  clSetq(CONS_1089, clCons(clVALUES, CONS_1090, clEOA));
  clSetq(CONS_1088, clCons(CONS_1089, clNIL, clEOA));
  clSetq(CONS_1085, clCons(CONS_1086, CONS_1088, clEOA));
  clSetq(CONS_1084, clCons(clLET, CONS_1085, clEOA));
  clSetq(CONS_1109, clCons(clNIL, CONS_81, clEOA));
  clSetq(CONS_1108, clCons(I_2, CONS_1109, clEOA));
  clSetq(CONS_1107, clCons(I_1, CONS_1108, clEOA));
  clSetq(CONS_1118, clCons(CONS_601, clNIL, clEOA));
  clSetq(CONS_1117, clCons(CONS_544, CONS_1118, clEOA));
  clSetq(CONS_1116, clCons(CONS_18, CONS_1117, clEOA));
  clSetq(CONS_1115, clCons(clLIST, CONS_1116, clEOA));
  clSetq(CONS_1114, clCons(CONS_1115, clNIL, clEOA));
  clSetq(CONS_1113, clCons(clTEMP, CONS_1114, clEOA));
  clSetq(CONS_1112, clCons(CONS_1113, clNIL, clEOA));
  clSetq(CONS_1124, clCons(clCAR, CONS_1095, clEOA));
  clSetq(CONS_1130, clCons(clALPHA, clNIL, clEOA));
  clSetq(CONS_1129, clCons(clQUOTE, CONS_1130, clEOA));
  clSetq(CONS_1128, clCons(CONS_1129, clNIL, clEOA));
  clSetq(CONS_1127, clCons(CONS_1124, CONS_1128, clEOA));
  clSetq(CONS_1126, clCons(clSETF, CONS_1127, clEOA));
  clSetq(CONS_1125, clCons(CONS_1126, clNIL, clEOA));
  clSetq(CONS_1123, clCons(CONS_1124, CONS_1125, clEOA));
  clSetq(CONS_1122, clCons(clPROG1, CONS_1123, clEOA));
  clSetq(CONS_1121, clCons(CONS_1122, CONS_1095, clEOA));
  clSetq(CONS_1120, clCons(clVALUES, CONS_1121, clEOA));
  clSetq(CONS_1119, clCons(CONS_1120, clNIL, clEOA));
  clSetq(CONS_1111, clCons(CONS_1112, CONS_1119, clEOA));
  clSetq(CONS_1110, clCons(clLET, CONS_1111, clEOA));
  clSetq(CONS_1133, clCons(clALPHA, CONS_322, clEOA));
  clSetq(CONS_1132, clCons(CONS_1133, clNIL, clEOA));
  clSetq(CONS_1131, clCons(clA, CONS_1132, clEOA));
  clSetq(CONS_1142, clCons(clSYMBOL_VALUE, CONS_36, clEOA));
  clSetq(CONS_1146, clCons(clSYMBOL_VALUE, CONS_49, clEOA));
  clSetq(CONS_1150, clCons(CONS_1142, clNIL, clEOA));
  clSetq(CONS_1149, clCons(CONS_1146, CONS_1150, clEOA));
  clSetq(CONS_1148, clCons(clSETF, CONS_1149, clEOA));
  clSetq(CONS_1147, clCons(CONS_1148, clNIL, clEOA));
  clSetq(CONS_1145, clCons(CONS_1146, CONS_1147, clEOA));
  clSetq(CONS_1144, clCons(clPROG1, CONS_1145, clEOA));
  clSetq(CONS_1143, clCons(CONS_1144, clNIL, clEOA));
  clSetq(CONS_1141, clCons(CONS_1142, CONS_1143, clEOA));
  clSetq(CONS_1140, clCons(clSETF, CONS_1141, clEOA));
  clSetq(CONS_1139, clCons(CONS_1140, clNIL, clEOA));
  clSetq(CONS_1138, clCons(CONS_52, CONS_1139, clEOA));
  clSetq(CONS_1137, clCons(clSWAP_SYMBOL_VALUES, CONS_1138, clEOA));
  clSetq(CONS_1136, clCons(CONS_1137, clNIL, clEOA));
  clSetq(CONS_1155, clCons(clstarFOOstar, CONS_81, clEOA));
  clSetq(CONS_1157, clCons(clstarBARstar, CONS_88, clEOA));
  clSetq(CONS_1156, clCons(CONS_1157, clNIL, clEOA));
  clSetq(CONS_1154, clCons(CONS_1155, CONS_1156, clEOA));
  clSetq(CONS_1163, clCons(clstarBARstar, clNIL, clEOA));
  clSetq(CONS_1162, clCons(clstarFOOstar, CONS_1163, clEOA));
  clSetq(CONS_1161, clCons(clSPECIAL, CONS_1162, clEOA));
  clSetq(CONS_1160, clCons(CONS_1161, clNIL, clEOA));
  clSetq(CONS_1159, clCons(clDECLARE, CONS_1160, clEOA));
  clSetq(CONS_1168, clCons(clstarFOOstar, clNIL, clEOA));
  clSetq(CONS_1167, clCons(clQUOTE, CONS_1168, clEOA));
  clSetq(CONS_1170, clCons(clQUOTE, CONS_1163, clEOA));
  clSetq(CONS_1169, clCons(CONS_1170, clNIL, clEOA));
  clSetq(CONS_1166, clCons(CONS_1167, CONS_1169, clEOA));
  clSetq(CONS_1165, clCons(clSWAP_SYMBOL_VALUES, CONS_1166, clEOA));
  clSetq(CONS_1172, clCons(clVALUES, CONS_1162, clEOA));
  clSetq(CONS_1171, clCons(CONS_1172, clNIL, clEOA));
  clSetq(CONS_1164, clCons(CONS_1165, CONS_1171, clEOA));
  clSetq(CONS_1158, clCons(CONS_1159, CONS_1164, clEOA));
  clSetq(CONS_1153, clCons(CONS_1154, CONS_1158, clEOA));
  clSetq(CONS_1152, clCons(clLET, CONS_1153, clEOA));
  clSetq(CONS_1151, clCons(CONS_1152, clNIL, clEOA));
  clSetq(CONS_1135, clCons(CONS_1136, CONS_1151, clEOA));
  clSetq(CONS_1134, clCons(clFLET, CONS_1135, clEOA));
  clSetq(CONS_1180, clCons(CONS_1094, CONS_1093, clEOA));
  clSetq(CONS_1179, clCons(CONS_1094, CONS_1180, clEOA));
  clSetq(CONS_1178, clCons(clPROG2, CONS_1179, clEOA));
  clSetq(CONS_1188, clCons(I_3, CONS_123, clEOA));
  clSetq(CONS_1187, clCons(I_2, CONS_1188, clEOA));
  clSetq(CONS_1186, clCons(clVALUES, CONS_1187, clEOA));
  clSetq(CONS_1185, clCons(CONS_1186, CONS_26, clEOA));
  clSetq(CONS_1184, clCons(I_1, CONS_1185, clEOA));
  clSetq(CONS_1183, clCons(clPROG2, CONS_1184, clEOA));
  clSetq(CONS_1182, clCons(CONS_1183, clNIL, clEOA));
  clSetq(CONS_1181, clCons(clTEMP, CONS_1182, clEOA));
  clSetq(CONS_1177, clCons(CONS_1178, CONS_1181, clEOA));
  clSetq(CONS_1176, clCons(clVALUES, CONS_1177, clEOA));
  clSetq(CONS_1175, clCons(CONS_1176, clNIL, clEOA));
  clSetq(CONS_1174, clCons(CONS_1086, CONS_1175, clEOA));
  clSetq(CONS_1173, clCons(clLET, CONS_1174, clEOA));
  clSetq(CONS_1190, clCons(I_4, CONS_88, clEOA));
  clSetq(CONS_1189, clCons(I_3, CONS_1190, clEOA));
  clSetq(CONS_1191, clCons(clLET, CONS_147, clEOA));
  clSetq(CONS_1192, clCons(clLET, CONS_168, clEOA));
  clSetq(CONS_1194, clCons(CONS_461, CONS_133, clEOA));
  clSetq(CONS_1193, clCons(clLET, CONS_1194, clEOA));
  clSetq(CONS_1199, clCons(clB, CONS_955, clEOA));
  clSetq(CONS_1198, clCons(CONS_1199, clNIL, clEOA));
  clSetq(CONS_1197, clCons(CONS_657, CONS_1198, clEOA));
  clSetq(CONS_1203, clCons(clSPECIAL, CONS_135, clEOA));
  clSetq(CONS_1202, clCons(CONS_1203, clNIL, clEOA));
  clSetq(CONS_1201, clCons(clDECLARE, CONS_1202, clEOA));
  clSetq(CONS_1205, clCons(clLIST_SPECIALS, clNIL, clEOA));
  clSetq(CONS_1204, clCons(CONS_1205, clNIL, clEOA));
  clSetq(CONS_1200, clCons(CONS_1201, CONS_1204, clEOA));
  clSetq(CONS_1196, clCons(CONS_1197, CONS_1200, clEOA));
  clSetq(CONS_1195, clCons(clLET, CONS_1196, clEOA));
  clSetq(CONS_1207, clCons(I_10, CONS_955, clEOA));
  clSetq(CONS_1206, clCons(CONS_1207, clNIL, clEOA));
  clSetq(CONS_1216, clCons(clD1, CONS_1204, clEOA));
  clSetq(CONS_1219, clCons(clD2, CONS_1204, clEOA));
  clSetq(CONS_1218, clCons(CONS_1219, clNIL, clEOA));
  clSetq(CONS_1217, clCons(CONS_463, CONS_1218, clEOA));
  clSetq(CONS_1215, clCons(CONS_1216, CONS_1217, clEOA));
  clSetq(CONS_1214, clCons(CONS_338, CONS_1215, clEOA));
  clSetq(CONS_1223, clCons(clD1, CONS_1219, clEOA));
  clSetq(CONS_1222, clCons(clLIST, CONS_1223, clEOA));
  clSetq(CONS_1221, clCons(CONS_1222, clNIL, clEOA));
  clSetq(CONS_1220, clCons(CONS_1201, CONS_1221, clEOA));
  clSetq(CONS_1213, clCons(CONS_1214, CONS_1220, clEOA));
  clSetq(CONS_1212, clCons(clLET, CONS_1213, clEOA));
  clSetq(CONS_1211, clCons(CONS_1212, clNIL, clEOA));
  clSetq(CONS_1210, clCons(CONS_1201, CONS_1211, clEOA));
  clSetq(CONS_1209, clCons(CONS_1197, CONS_1210, clEOA));
  clSetq(CONS_1208, clCons(clLET, CONS_1209, clEOA));
  clSetq(CONS_1226, clCons(CONS_1207, CONS_942, clEOA));
  clSetq(CONS_1225, clCons(CONS_1207, CONS_1226, clEOA));
  clSetq(CONS_1224, clCons(CONS_1225, clNIL, clEOA));
  clSetq(CONS_1233, clCons(clA, CONS_238, clEOA));
  clSetq(CONS_1236, clCons(CONS_1081, clNIL, clEOA));
  clSetq(CONS_1235, clCons(clB, CONS_1236, clEOA));
  clSetq(CONS_1234, clCons(CONS_1235, clNIL, clEOA));
  clSetq(CONS_1232, clCons(CONS_1233, CONS_1234, clEOA));
  clSetq(CONS_1240, clCons(clB, CONS_36, clEOA));
  clSetq(CONS_1239, clCons(clA, CONS_1240, clEOA));
  clSetq(CONS_1238, clCons(clLIST, CONS_1239, clEOA));
  clSetq(CONS_1237, clCons(CONS_1238, clNIL, clEOA));
  clSetq(CONS_1231, clCons(CONS_1232, CONS_1237, clEOA));
  clSetq(CONS_1230, clCons(clLET, CONS_1231, clEOA));
  clSetq(CONS_1229, clCons(CONS_1230, clNIL, clEOA));
  clSetq(CONS_1228, clCons(CONS_235, CONS_1229, clEOA));
  clSetq(CONS_1227, clCons(clLOCALLY, CONS_1228, clEOA));
  clSetq(CONS_1243, clCons(I_2, CONS_88, clEOA));
  clSetq(CONS_1242, clCons(I_1, CONS_1243, clEOA));
  clSetq(CONS_1241, clCons(CONS_1242, clNIL, clEOA));
  clSetq(CONS_1249, clCons(CONS_1201, CONS_1237, clEOA));
  clSetq(CONS_1248, clCons(CONS_1232, CONS_1249, clEOA));
  clSetq(CONS_1247, clCons(clLET, CONS_1248, clEOA));
  clSetq(CONS_1246, clCons(CONS_1247, clNIL, clEOA));
  clSetq(CONS_1245, clCons(CONS_235, CONS_1246, clEOA));
  clSetq(CONS_1244, clCons(clLOCALLY, CONS_1245, clEOA));
  clSetq(CONS_1258, clCons(clSPECIAL, CONS_136, clEOA));
  clSetq(CONS_1257, clCons(CONS_1258, clNIL, clEOA));
  clSetq(CONS_1256, clCons(clDECLARE, CONS_1257, clEOA));
  clSetq(CONS_1255, clCons(CONS_1256, CONS_1237, clEOA));
  clSetq(CONS_1254, clCons(CONS_1232, CONS_1255, clEOA));
  clSetq(CONS_1253, clCons(clLET, CONS_1254, clEOA));
  clSetq(CONS_1252, clCons(CONS_1253, clNIL, clEOA));
  clSetq(CONS_1251, clCons(CONS_235, CONS_1252, clEOA));
  clSetq(CONS_1250, clCons(clLOCALLY, CONS_1251, clEOA));
  clSetq(CONS_1264, clCons(CONS_104, CONS_1237, clEOA));
  clSetq(CONS_1263, clCons(CONS_1232, CONS_1264, clEOA));
  clSetq(CONS_1262, clCons(clLET, CONS_1263, clEOA));
  clSetq(CONS_1261, clCons(CONS_1262, clNIL, clEOA));
  clSetq(CONS_1260, clCons(CONS_235, CONS_1261, clEOA));
  clSetq(CONS_1259, clCons(clLOCALLY, CONS_1260, clEOA));
  clSetq(CONS_1270, clCons(clIGNORABLE, CONS_136, clEOA));
  clSetq(CONS_1269, clCons(CONS_1270, clNIL, clEOA));
  clSetq(CONS_1268, clCons(clDECLARE, CONS_1269, clEOA));
  clSetq(CONS_1278, clCons(CONS_468, CONS_503, clEOA));
  clSetq(CONS_1277, clCons(CONS_797, CONS_1278, clEOA));
  clSetq(CONS_1280, clCons(clLIST, CONS_321, clEOA));
  clSetq(CONS_1279, clCons(CONS_1280, clNIL, clEOA));
  clSetq(CONS_1276, clCons(CONS_1277, CONS_1279, clEOA));
  clSetq(CONS_1275, clCons(clLET, CONS_1276, clEOA));
  clSetq(CONS_1274, clCons(CONS_1275, clNIL, clEOA));
  clSetq(CONS_1273, clCons(clNIL, CONS_1274, clEOA));
  clSetq(CONS_1272, clCons(clLET, CONS_1273, clEOA));
  clSetq(CONS_1271, clCons(CONS_1272, clNIL, clEOA));
  clSetq(CONS_1267, clCons(CONS_1268, CONS_1271, clEOA));
  clSetq(CONS_1266, clCons(CONS_461, CONS_1267, clEOA));
  clSetq(CONS_1265, clCons(clLET, CONS_1266, clEOA));
  clSetq(CONS_1282, clCons(I_9, CONS_811, clEOA));
  clSetq(CONS_1281, clCons(CONS_1282, clNIL, clEOA));
  clSetq(CONS_1284, clCons(CONS_135, CONS_133, clEOA));
  clSetq(CONS_1283, clCons(clLET, CONS_1284, clEOA));
  clSetq(CONS_1286, clCons(clNIL, CONS_147, clEOA));
  clSetq(CONS_1285, clCons(CONS_1286, clNIL, clEOA));
  clSetq(CONS_1287, clCons(clLETstar, CONS_147, clEOA));
  clSetq(CONS_1288, clCons(clLETstar, CONS_168, clEOA));
  clSetq(CONS_1289, clCons(clLETstar, CONS_1194, clEOA));
  clSetq(CONS_1290, clCons(clLETstar, CONS_1196, clEOA));
  clSetq(CONS_1295, clCons(clLETstar, CONS_1213, clEOA));
  clSetq(CONS_1294, clCons(CONS_1295, clNIL, clEOA));
  clSetq(CONS_1293, clCons(CONS_1201, CONS_1294, clEOA));
  clSetq(CONS_1292, clCons(CONS_1197, CONS_1293, clEOA));
  clSetq(CONS_1291, clCons(clLET, CONS_1292, clEOA));
  clSetq(CONS_1298, clCons(I_1, CONS_955, clEOA));
  clSetq(CONS_1299, clCons(CONS_521, CONS_942, clEOA));
  clSetq(CONS_1297, clCons(CONS_1298, CONS_1299, clEOA));
  clSetq(CONS_1296, clCons(CONS_1297, clNIL, clEOA));
  clSetq(CONS_1303, clCons(clLETstar, CONS_1231, clEOA));
  clSetq(CONS_1302, clCons(CONS_1303, clNIL, clEOA));
  clSetq(CONS_1301, clCons(CONS_235, CONS_1302, clEOA));
  clSetq(CONS_1300, clCons(clLOCALLY, CONS_1301, clEOA));
  clSetq(CONS_1307, clCons(clLETstar, CONS_1248, clEOA));
  clSetq(CONS_1306, clCons(CONS_1307, clNIL, clEOA));
  clSetq(CONS_1305, clCons(CONS_235, CONS_1306, clEOA));
  clSetq(CONS_1304, clCons(clLOCALLY, CONS_1305, clEOA));
  clSetq(CONS_1311, clCons(clLETstar, CONS_1254, clEOA));
  clSetq(CONS_1310, clCons(CONS_1311, clNIL, clEOA));
  clSetq(CONS_1309, clCons(CONS_235, CONS_1310, clEOA));
  clSetq(CONS_1308, clCons(clLOCALLY, CONS_1309, clEOA));
  clSetq(CONS_1315, clCons(clLETstar, CONS_1263, clEOA));
  clSetq(CONS_1314, clCons(CONS_1315, clNIL, clEOA));
  clSetq(CONS_1313, clCons(CONS_235, CONS_1314, clEOA));
  clSetq(CONS_1312, clCons(clLOCALLY, CONS_1313, clEOA));
  clSetq(CONS_1321, clCons(clIGNORABLE, CONS_135, clEOA));
  clSetq(CONS_1320, clCons(CONS_1321, clNIL, clEOA));
  clSetq(CONS_1319, clCons(clDECLARE, CONS_1320, clEOA));
  clSetq(CONS_1326, clCons(clLETstar, CONS_1276, clEOA));
  clSetq(CONS_1325, clCons(CONS_1326, clNIL, clEOA));
  clSetq(CONS_1324, clCons(clNIL, CONS_1325, clEOA));
  clSetq(CONS_1323, clCons(clLETstar, CONS_1324, clEOA));
  clSetq(CONS_1322, clCons(CONS_1323, clNIL, clEOA));
  clSetq(CONS_1318, clCons(CONS_1319, CONS_1322, clEOA));
  clSetq(CONS_1317, clCons(CONS_461, CONS_1318, clEOA));
  clSetq(CONS_1316, clCons(clLETstar, CONS_1317, clEOA));
  clSetq(CONS_1329, clCons(I_9, CONS_11, clEOA));
  clSetq(CONS_1328, clCons(I_9, CONS_1329, clEOA));
  clSetq(CONS_1327, clCons(CONS_1328, clNIL, clEOA));
  clSetq(CONS_1330, clCons(clLETstar, CONS_1284, clEOA));
  clSetq(CONS_1331, clCons(clPROGV, CONS_1286, clEOA));
  clSetq(CONS_1333, clCons(clNIL, CONS_168, clEOA));
  clSetq(CONS_1332, clCons(clPROGV, CONS_1333, clEOA));
  clSetq(I_99, clIntFixnum(99));
  clSetq(CONS_1338, clCons(clREPORT_PROGV_SPECIALS, clNIL, clEOA));
  clSetq(CONS_1337, clCons(CONS_1338, clNIL, clEOA));
  clSetq(CONS_1336, clCons(CONS_649, CONS_1337, clEOA));
  clSetq(CONS_1335, clCons(CONS_634, CONS_1336, clEOA));
  clSetq(CONS_1334, clCons(clPROGV, CONS_1335, clEOA));
  clSetq(CONS_1341, clCons(clMAKUNBOUND, CONS_1118, clEOA));
  clSetq(CONS_1345, clCons(CONS_941, CONS_1337, clEOA));
  clSetq(CONS_1344, clCons(CONS_634, CONS_1345, clEOA));
  clSetq(CONS_1343, clCons(clPROGV, CONS_1344, clEOA));
  clSetq(CONS_1342, clCons(CONS_1343, clNIL, clEOA));
  clSetq(CONS_1340, clCons(CONS_1341, CONS_1342, clEOA));
  clSetq(CONS_1339, clCons(clPROGN, CONS_1340, clEOA));
  clSetq(CONS_1349, clCons(I_99, clNIL, clEOA));
  clSetq(CONS_1348, clCons(I_2, CONS_1349, clEOA));
  clSetq(CONS_1347, clCons(I_1, CONS_1348, clEOA));
  clSetq(CONS_1346, clCons(CONS_1347, clNIL, clEOA));
  clSetq(CONS_1355, clCons(I_1, CONS_1187, clEOA));
  clSetq(CONS_1354, clCons(CONS_1355, clNIL, clEOA));
  clSetq(CONS_1353, clCons(clQUOTE, CONS_1354, clEOA));
  clSetq(CONS_1352, clCons(CONS_1353, CONS_1337, clEOA));
  clSetq(CONS_1351, clCons(CONS_634, CONS_1352, clEOA));
  clSetq(CONS_1350, clCons(clPROGV, CONS_1351, clEOA));
  clSetq(CONS_1363, clCons(clA, CONS_334, clEOA));
  clSetq(CONS_1362, clCons(clplussymbol, CONS_1363, clEOA));
  clSetq(CONS_1361, clCons(CONS_1362, clNIL, clEOA));
  clSetq(CONS_1360, clCons(CONS_135, CONS_1361, clEOA));
  clSetq(CONS_1359, clCons(clplussymbol, CONS_1360, clEOA));
  clSetq(CONS_1358, clCons(CONS_1359, clNIL, clEOA));
  clSetq(CONS_1364, clCons(CONS_1072, clNIL, clEOA));
  clSetq(CONS_1357, clCons(CONS_1358, CONS_1364, clEOA));
  clSetq(CONS_1356, clCons(clFLET, CONS_1357, clEOA));
  clSetq(CONS_1374, clCons(clBAR, CONS_1363, clEOA));
  clSetq(CONS_1373, clCons(CONS_1374, CONS_19, clEOA));
  clSetq(CONS_1372, clCons(clB, CONS_1373, clEOA));
  clSetq(CONS_1371, clCons(clIF, CONS_1372, clEOA));
  clSetq(CONS_1370, clCons(CONS_1371, clNIL, clEOA));
  clSetq(CONS_1369, clCons(CONS_135, CONS_1370, clEOA));
  clSetq(CONS_1368, clCons(clFOO, CONS_1369, clEOA));
  clSetq(CONS_1384, clCons(clC, CONS_147, clEOA));
  clSetq(CONS_1383, clCons(clFOO, CONS_1384, clEOA));
  clSetq(CONS_1382, clCons(CONS_1383, clNIL, clEOA));
  clSetq(CONS_1381, clCons(clB, CONS_1382, clEOA));
  clSetq(CONS_1380, clCons(clA, CONS_1381, clEOA));
  clSetq(CONS_1379, clCons(clLIST, CONS_1380, clEOA));
  clSetq(CONS_1378, clCons(CONS_1379, clNIL, clEOA));
  clSetq(CONS_1377, clCons(CONS_321, CONS_1378, clEOA));
  clSetq(CONS_1376, clCons(clBAR, CONS_1377, clEOA));
  clSetq(CONS_1375, clCons(CONS_1376, clNIL, clEOA));
  clSetq(CONS_1367, clCons(CONS_1368, CONS_1375, clEOA));
  clSetq(CONS_1386, clCons(clFOO, CONS_1083, clEOA));
  clSetq(CONS_1385, clCons(CONS_1386, clNIL, clEOA));
  clSetq(CONS_1366, clCons(CONS_1367, CONS_1385, clEOA));
  clSetq(CONS_1365, clCons(clLABELS, CONS_1366, clEOA));
  clSetq(CONS_1387, clCons(CONS_353, clNIL, clEOA));
  clSetq(CONS_1396, clCons(clBQ_QUOTE, CONS_936, clEOA));
  clSetq(CONS_1402, clCons(clBAR, clNIL, clEOA));
  clSetq(CONS_1401, clCons(clBQ_QUOTE, CONS_1402, clEOA));
  clSetq(CONS_1400, clCons(CONS_1401, CONS_136, clEOA));
  clSetq(CONS_1399, clCons(clBQ_LIST, CONS_1400, clEOA));
  clSetq(CONS_1405, clCons(CONS_81, clNIL, clEOA));
  clSetq(CONS_1404, clCons(clBQ_QUOTE, CONS_1405, clEOA));
  clSetq(CONS_1403, clCons(CONS_1404, clNIL, clEOA));
  clSetq(CONS_1398, clCons(CONS_1399, CONS_1403, clEOA));
  clSetq(CONS_1397, clCons(clA, CONS_1398, clEOA));
  clSetq(CONS_1395, clCons(CONS_1396, CONS_1397, clEOA));
  clSetq(CONS_1394, clCons(clBQ_LISTstar, CONS_1395, clEOA));
  clSetq(CONS_1393, clCons(CONS_1394, clNIL, clEOA));
  clSetq(CONS_1392, clCons(CONS_135, CONS_1393, clEOA));
  clSetq(CONS_1391, clCons(clFOO, CONS_1392, clEOA));
  clSetq(CONS_1408, clCons(CONS_19, CONS_19, clEOA));
  clSetq(CONS_1407, clCons(clBAR, CONS_1408, clEOA));
  clSetq(CONS_1406, clCons(CONS_1407, clNIL, clEOA));
  clSetq(CONS_1390, clCons(CONS_1391, CONS_1406, clEOA));
  clSetq(CONS_1410, clCons(clFOO, CONS_521, clEOA));
  clSetq(CONS_1409, clCons(CONS_1410, clNIL, clEOA));
  clSetq(CONS_1389, clCons(CONS_1390, CONS_1409, clEOA));
  clSetq(CONS_1388, clCons(clMACROLET, CONS_1389, clEOA));
  clSetq(CONS_1417, clCons(clGOODY, clNIL, clEOA));
  clSetq(CONS_1416, clCons(clQUOTE, CONS_1417, clEOA));
  clSetq(CONS_1415, clCons(CONS_1416, clNIL, clEOA));
  clSetq(CONS_1414, clCons(clPOLLYANNA, CONS_1415, clEOA));
  clSetq(CONS_1413, clCons(CONS_1414, clNIL, clEOA));
  clSetq(CONS_1428, clCons(clTWO_SHOES, clNIL, clEOA));
  clSetq(CONS_1427, clCons(clQUOTE, CONS_1428, clEOA));
  clSetq(CONS_1426, clCons(CONS_1427, clNIL, clEOA));
  clSetq(CONS_1425, clCons(clPOLLYANNA, CONS_1426, clEOA));
  clSetq(CONS_1424, clCons(CONS_1425, clNIL, clEOA));
  clSetq(CONS_1429, clCons(clPOLLYANNA, clNIL, clEOA));
  clSetq(CONS_1423, clCons(CONS_1424, CONS_1429, clEOA));
  clSetq(CONS_1422, clCons(clLET, CONS_1423, clEOA));
  clSetq(CONS_1421, clCons(CONS_1422, clNIL, clEOA));
  clSetq(CONS_1420, clCons(clPOLLYANNA, CONS_1421, clEOA));
  clSetq(CONS_1419, clCons(clLIST, CONS_1420, clEOA));
  clSetq(CONS_1418, clCons(CONS_1419, clNIL, clEOA));
  clSetq(CONS_1412, clCons(CONS_1413, CONS_1418, clEOA));
  clSetq(CONS_1411, clCons(clSYMBOL_MACROLET, CONS_1412, clEOA));
  clSetq(CONS_1431, clCons(clGOODY, CONS_1428, clEOA));
  clSetq(CONS_1430, clCons(CONS_1431, clNIL, clEOA));
  clSetq(STR_here__14, clCharpSimpleBaseString("here"));
  clSetq(CONS_1437, clCons(STR_here__14, clNIL, clEOA));
  clSetq(CONS_1436, clCons(clERROR, CONS_1437, clEOA));
  clSetq(CONS_1435, clCons(CONS_1436, clNIL, clEOA));
  clSetq(CONS_1434, clCons(I_1, CONS_1435, clEOA));
  clSetq(CONS_1433, clCons(clT, CONS_1434, clEOA));
  clSetq(CONS_1432, clCons(clIF, CONS_1433, clEOA));
  clSetq(CONS_1440, clCons(CONS_1436, CONS_88, clEOA));
  clSetq(CONS_1439, clCons(clNIL, CONS_1440, clEOA));
  clSetq(CONS_1438, clCons(clIF, CONS_1439, clEOA));
  clSetq(CONS_1442, clCons(clT, CONS_81, clEOA));
  clSetq(CONS_1441, clCons(clIF, CONS_1442, clEOA));
  clSetq(CONS_1444, clCons(clNIL, CONS_1435, clEOA));
  clSetq(CONS_1443, clCons(clIF, CONS_1444, clEOA));
  clSetq(CONS_1451, clCons(clHELLO, clNIL, clEOA));
  clSetq(CONS_1450, clCons(clQUOTE, CONS_1451, clEOA));
  clSetq(CONS_1449, clCons(CONS_1450, clNIL, clEOA));
  clSetq(CONS_1448, clCons(clT, CONS_1449, clEOA));
  clSetq(CONS_1447, clCons(clWHEN, CONS_1448, clEOA));
  clSetq(CONS_1454, clCons(clNIL, CONS_1449, clEOA));
  clSetq(CONS_1453, clCons(clWHEN, CONS_1454, clEOA));
  clSetq(CONS_1456, clCons(clWHEN, CONS_267, clEOA));
  clSetq(CONS_1460, clCons(CONS_201, clNIL, clEOA));
  clSetq(CONS_1467, clCons(clINCF, CONS_36, clEOA));
  clSetq(CONS_1468, clCons(CONS_1467, CONS_11, clEOA));
  clSetq(CONS_1466, clCons(CONS_1467, CONS_1468, clEOA));
  clSetq(CONS_1465, clCons(clT, CONS_1466, clEOA));
  clSetq(CONS_1464, clCons(clWHEN, CONS_1465, clEOA));
  clSetq(CONS_1463, clCons(CONS_1464, CONS_36, clEOA));
  clSetq(CONS_1462, clCons(clLIST, CONS_1463, clEOA));
  clSetq(CONS_1461, clCons(CONS_1462, clNIL, clEOA));
  clSetq(CONS_1459, clCons(CONS_1460, CONS_1461, clEOA));
  clSetq(CONS_1458, clCons(clLET, CONS_1459, clEOA));
  clSetq(CONS_1470, clCons(clWHEN, CONS_1444, clEOA));
  clSetq(CONS_1475, clCons(clX, CONS_11, clEOA));
  clSetq(CONS_1474, clCons(CONS_1475, clNIL, clEOA));
  clSetq(CONS_1481, clCons(clODDP, CONS_36, clEOA));
  clSetq(CONS_1484, clCons(clLIST, CONS_36, clEOA));
  clSetq(CONS_1483, clCons(CONS_1484, clNIL, clEOA));
  clSetq(CONS_1482, clCons(CONS_1467, CONS_1483, clEOA));
  clSetq(CONS_1480, clCons(CONS_1481, CONS_1482, clEOA));
  clSetq(CONS_1479, clCons(clWHEN, CONS_1480, clEOA));
  clSetq(CONS_1487, clCons(clUNLESS, CONS_1480, clEOA));
  clSetq(CONS_1490, clCons(clIF, CONS_1480, clEOA));
  clSetq(CONS_1496, clCons(CONS_1481, clNIL, clEOA));
  clSetq(CONS_1495, clCons(clNOT, CONS_1496, clEOA));
  clSetq(CONS_1494, clCons(CONS_1495, CONS_1482, clEOA));
  clSetq(CONS_1493, clCons(clIF, CONS_1494, clEOA));
  clSetq(CONS_1497, clCons(CONS_1493, clNIL, clEOA));
  clSetq(CONS_1492, clCons(CONS_1493, CONS_1497, clEOA));
  clSetq(CONS_1491, clCons(CONS_1490, CONS_1492, clEOA));
  clSetq(CONS_1489, clCons(CONS_1490, CONS_1491, clEOA));
  clSetq(CONS_1488, clCons(CONS_1487, CONS_1489, clEOA));
  clSetq(CONS_1486, clCons(CONS_1487, CONS_1488, clEOA));
  clSetq(CONS_1485, clCons(CONS_1479, CONS_1486, clEOA));
  clSetq(CONS_1478, clCons(CONS_1479, CONS_1485, clEOA));
  clSetq(CONS_1477, clCons(clLIST, CONS_1478, clEOA));
  clSetq(CONS_1476, clCons(CONS_1477, clNIL, clEOA));
  clSetq(CONS_1473, clCons(CONS_1474, CONS_1476, clEOA));
  clSetq(CONS_1472, clCons(clLET, CONS_1473, clEOA));
  clSetq(CONS_1471, clCons(CONS_1472, clNIL, clEOA));
  clSetq(CONS_1469, clCons(CONS_1470, CONS_1471, clEOA));
  clSetq(CONS_1457, clCons(CONS_1458, CONS_1469, clEOA));
  clSetq(CONS_1455, clCons(CONS_1456, CONS_1457, clEOA));
  clSetq(CONS_1452, clCons(CONS_1453, CONS_1455, clEOA));
  clSetq(CONS_1446, clCons(CONS_1447, CONS_1452, clEOA));
  clSetq(CONS_1445, clCons(clVALUES, CONS_1446, clEOA));
  clSetq(CONS_1511, clCons(CONS_346, clNIL, clEOA));
  clSetq(CONS_1510, clCons(I_7, CONS_1511, clEOA));
  clSetq(CONS_1509, clCons(CONS_53, CONS_1510, clEOA));
  clSetq(CONS_1508, clCons(I_6, CONS_1509, clEOA));
  clSetq(CONS_1507, clCons(clNIL, CONS_1508, clEOA));
  clSetq(CONS_1506, clCons(CONS_26, CONS_1507, clEOA));
  clSetq(CONS_1505, clCons(clNIL, CONS_1506, clEOA));
  clSetq(CONS_1504, clCons(CONS_123, CONS_1505, clEOA));
  clSetq(CONS_1503, clCons(CONS_1504, clNIL, clEOA));
  clSetq(CONS_1502, clCons(clNIL, CONS_1503, clEOA));
  clSetq(CONS_1501, clCons(CONS_1083, CONS_1502, clEOA));
  clSetq(CONS_1500, clCons(clNIL, CONS_1501, clEOA));
  clSetq(CONS_1499, clCons(clNIL, CONS_1500, clEOA));
  clSetq(CONS_1498, clCons(clHELLO, CONS_1499, clEOA));
  clSetq(CONS_1514, clCons(clUNLESS, CONS_1448, clEOA));
  clSetq(CONS_1516, clCons(clUNLESS, CONS_1454, clEOA));
  clSetq(CONS_1518, clCons(clUNLESS, CONS_147, clEOA));
  clSetq(CONS_1521, clCons(clT, CONS_1435, clEOA));
  clSetq(CONS_1520, clCons(clUNLESS, CONS_1521, clEOA));
  clSetq(CONS_1529, clCons(clNIL, CONS_1466, clEOA));
  clSetq(CONS_1528, clCons(clUNLESS, CONS_1529, clEOA));
  clSetq(CONS_1527, clCons(CONS_1528, CONS_36, clEOA));
  clSetq(CONS_1526, clCons(clLIST, CONS_1527, clEOA));
  clSetq(CONS_1525, clCons(CONS_1526, clNIL, clEOA));
  clSetq(CONS_1524, clCons(CONS_1460, CONS_1525, clEOA));
  clSetq(CONS_1523, clCons(clLET, CONS_1524, clEOA));
  clSetq(CONS_1522, clCons(CONS_1523, clNIL, clEOA));
  clSetq(CONS_1519, clCons(CONS_1520, CONS_1522, clEOA));
  clSetq(CONS_1517, clCons(CONS_1518, CONS_1519, clEOA));
  clSetq(CONS_1515, clCons(CONS_1516, CONS_1517, clEOA));
  clSetq(CONS_1513, clCons(CONS_1514, CONS_1515, clEOA));
  clSetq(CONS_1512, clCons(clVALUES, CONS_1513, clEOA));
  clSetq(CONS_1533, clCons(clNIL, CONS_1082, clEOA));
  clSetq(CONS_1532, clCons(clNIL, CONS_1533, clEOA));
  clSetq(CONS_1531, clCons(clHELLO, CONS_1532, clEOA));
  clSetq(CONS_1530, clCons(clNIL, CONS_1531, clEOA));
  clSetq(CONS_1534, clCons(clCOND, clNIL, clEOA));
  clSetq(CONS_1536, clCons(CONS_11, clNIL, clEOA));
  clSetq(CONS_1535, clCons(clCOND, CONS_1536, clEOA));
  clSetq(CONS_1539, clCons(CONS_1106, clNIL, clEOA));
  clSetq(CONS_1538, clCons(CONS_1539, clNIL, clEOA));
  clSetq(CONS_1537, clCons(clCOND, CONS_1538, clEOA));
  clSetq(CONS_1543, clCons(clA, CONS_202, clEOA));
  clSetq(CONS_1542, clCons(CONS_1543, clNIL, clEOA));
  clSetq(CONS_1551, clCons(clINCF, CONS_19, clEOA));
  clSetq(CONS_1552, clCons(CONS_1551, clNIL, clEOA));
  clSetq(CONS_1550, clCons(CONS_1551, CONS_1552, clEOA));
  clSetq(CONS_1549, clCons(clVALUES, CONS_1550, clEOA));
  clSetq(CONS_1556, clCons(CONS_1551, CONS_19, clEOA));
  clSetq(CONS_1555, clCons(clVALUES, CONS_1556, clEOA));
  clSetq(CONS_1554, clCons(CONS_1555, clNIL, clEOA));
  clSetq(CONS_1553, clCons(CONS_1551, CONS_1554, clEOA));
  clSetq(CONS_1548, clCons(CONS_1549, CONS_1553, clEOA));
  clSetq(CONS_1547, clCons(CONS_1106, CONS_1548, clEOA));
  clSetq(CONS_1546, clCons(CONS_1547, clNIL, clEOA));
  clSetq(CONS_1545, clCons(clCOND, CONS_1546, clEOA));
  clSetq(CONS_1544, clCons(CONS_1545, clNIL, clEOA));
  clSetq(CONS_1541, clCons(CONS_1542, CONS_1544, clEOA));
  clSetq(CONS_1540, clCons(clLET, CONS_1541, clEOA));
  clSetq(CONS_1557, clCons(I_4, CONS_123, clEOA));
  clSetq(CONS_1562, clCons(clB, CONS_202, clEOA));
  clSetq(CONS_1561, clCons(CONS_1562, clNIL, clEOA));
  clSetq(CONS_1560, clCons(CONS_1543, CONS_1561, clEOA));
  clSetq(CONS_1568, clCons(CONS_1551, CONS_147, clEOA));
  clSetq(CONS_1567, clCons(clAND, CONS_1568, clEOA));
  clSetq(CONS_1570, clCons(clINCF, CONS_136, clEOA));
  clSetq(CONS_1569, clCons(CONS_1570, clNIL, clEOA));
  clSetq(CONS_1566, clCons(CONS_1567, CONS_1569, clEOA));
  clSetq(CONS_1574, clCons(CONS_1551, CONS_81, clEOA));
  clSetq(CONS_1573, clCons(clequalsymbol, CONS_1574, clEOA));
  clSetq(CONS_1572, clCons(CONS_1573, CONS_1569, clEOA));
  clSetq(CONS_1577, clCons(clequalsymbol, CONS_87, clEOA));
  clSetq(CONS_1576, clCons(CONS_1577, CONS_136, clEOA));
  clSetq(CONS_1579, clCons(clNIL, CONS_1569, clEOA));
  clSetq(CONS_1578, clCons(CONS_1579, clNIL, clEOA));
  clSetq(CONS_1575, clCons(CONS_1576, CONS_1578, clEOA));
  clSetq(CONS_1571, clCons(CONS_1572, CONS_1575, clEOA));
  clSetq(CONS_1565, clCons(CONS_1566, CONS_1571, clEOA));
  clSetq(CONS_1564, clCons(clCOND, CONS_1565, clEOA));
  clSetq(CONS_1563, clCons(CONS_1564, clNIL, clEOA));
  clSetq(CONS_1559, clCons(CONS_1560, CONS_1563, clEOA));
  clSetq(CONS_1558, clCons(clLET, CONS_1559, clEOA));
  clSetq(CONS_1588, clCons(clequalsymbol, CONS_10, clEOA));
  clSetq(CONS_1587, clCons(CONS_1588, CONS_136, clEOA));
  clSetq(CONS_1586, clCons(CONS_1587, CONS_1578, clEOA));
  clSetq(CONS_1585, clCons(CONS_1572, CONS_1586, clEOA));
  clSetq(CONS_1584, clCons(CONS_1566, CONS_1585, clEOA));
  clSetq(CONS_1583, clCons(clCOND, CONS_1584, clEOA));
  clSetq(CONS_1582, clCons(CONS_1583, clNIL, clEOA));
  clSetq(CONS_1581, clCons(CONS_1560, CONS_1582, clEOA));
  clSetq(CONS_1580, clCons(clLET, CONS_1581, clEOA));
  clSetq(CONS_1589, clCons(clCASE, CONS_11, clEOA));
  clSetq(CONS_1592, clCons(CONS_650, clNIL, clEOA));
  clSetq(CONS_1591, clCons(I_2, CONS_1592, clEOA));
  clSetq(CONS_1590, clCons(clCASE, CONS_1591, clEOA));
  clSetq(CONS_1599, clCons(I_0, CONS_1569, clEOA));
  clSetq(CONS_1602, clCons(I_9, CONS_81, clEOA));
  clSetq(CONS_1604, clCons(clDECF, CONS_136, clEOA));
  clSetq(CONS_1607, clCons(CONS_1604, CONS_136, clEOA));
  clSetq(CONS_1606, clCons(clVALUES, CONS_1607, clEOA));
  clSetq(CONS_1605, clCons(CONS_1606, clNIL, clEOA));
  clSetq(CONS_1603, clCons(CONS_1604, CONS_1605, clEOA));
  clSetq(CONS_1601, clCons(CONS_1602, CONS_1603, clEOA));
  clSetq(CONS_1609, clCons(clT, CONS_1569, clEOA));
  clSetq(CONS_1608, clCons(CONS_1609, clNIL, clEOA));
  clSetq(CONS_1600, clCons(CONS_1601, CONS_1608, clEOA));
  clSetq(CONS_1598, clCons(CONS_1599, CONS_1600, clEOA));
  clSetq(CONS_1597, clCons(CONS_1551, CONS_1598, clEOA));
  clSetq(CONS_1596, clCons(clCASE, CONS_1597, clEOA));
  clSetq(CONS_1595, clCons(CONS_1596, clNIL, clEOA));
  clSetq(CONS_1594, clCons(CONS_1560, CONS_1595, clEOA));
  clSetq(CONS_1593, clCons(clLET, CONS_1594, clEOA));
  clSetq(I_minus2, clIntFixnum(-2));
  clSetq(CONS_1611, clCons(I_minus2, clNIL, clEOA));
  clSetq(CONS_1610, clCons(I_minus2, CONS_1611, clEOA));
  clSetq(CONS_1620, clCons(I_9, CONS_88, clEOA));
  clSetq(CONS_1619, clCons(CONS_1620, CONS_1569, clEOA));
  clSetq(CONS_1618, clCons(CONS_1619, CONS_1608, clEOA));
  clSetq(CONS_1617, clCons(CONS_1599, CONS_1618, clEOA));
  clSetq(CONS_1616, clCons(CONS_1551, CONS_1617, clEOA));
  clSetq(CONS_1615, clCons(clCASE, CONS_1616, clEOA));
  clSetq(CONS_1614, clCons(CONS_1615, clNIL, clEOA));
  clSetq(CONS_1613, clCons(CONS_1560, CONS_1614, clEOA));
  clSetq(CONS_1612, clCons(clLET, CONS_1613, clEOA));
  clSetq(CONS_1629, clCons(clOTHERWISE, CONS_1569, clEOA));
  clSetq(CONS_1628, clCons(CONS_1629, clNIL, clEOA));
  clSetq(CONS_1627, clCons(CONS_1619, CONS_1628, clEOA));
  clSetq(CONS_1626, clCons(CONS_1599, CONS_1627, clEOA));
  clSetq(CONS_1625, clCons(CONS_1551, CONS_1626, clEOA));
  clSetq(CONS_1624, clCons(clCASE, CONS_1625, clEOA));
  clSetq(CONS_1623, clCons(CONS_1624, clNIL, clEOA));
  clSetq(CONS_1622, clCons(CONS_1560, CONS_1623, clEOA));
  clSetq(CONS_1621, clCons(clLET, CONS_1622, clEOA));
  clSetq(CONS_1631, clCons(clSINGLE_FLOAT, clNIL, clEOA));
  clSetq(CONS_1630, clCons(clDOUBLE_FLOAT, CONS_1631, clEOA));
  clSetq(STR_a_float__15, clCharpSimpleBaseString("a float"));
  clSetq(STR_a_symbol_dotdotdot__16,
         clCharpSimpleBaseString("a symbol ..."));
  clSetq(STR_a_list__17, clCharpSimpleBaseString("a list"));
  clSetq(STR_otherwise__18, clCharpSimpleBaseString("otherwise"));
  clSetq(CONS_1632, clCons(clTYPECASE_TEST, CONS_147, clEOA));
  clSetq(CONS_1633, clCons(STR_a_symbol_dotdotdot__16, clNIL, clEOA));
  clSetq(CONS_1637, clCons(CONS_135, clNIL, clEOA));
  clSetq(CONS_1636, clCons(clQUOTE, CONS_1637, clEOA));
  clSetq(CONS_1635, clCons(CONS_1636, clNIL, clEOA));
  clSetq(CONS_1634, clCons(clTYPECASE_TEST, CONS_1635, clEOA));
  clSetq(CONS_1638, clCons(STR_a_list__17, clNIL, clEOA));
  clSetq(F_7_0, clDoubleSingleFloat(7.0));
  clSetq(CONS_1640, clCons(F_7_0, clNIL, clEOA));
  clSetq(CONS_1639, clCons(clTYPECASE_TEST, CONS_1640, clEOA));
  clSetq(CONS_1641, clCons(STR_a_float__15, clNIL, clEOA));
  clSetq(CONS_1642, clCons(clTYPECASE_TEST, CONS_346, clEOA));
  clSetq(CONS_1643, clCons(STR_otherwise__18, clNIL, clEOA));
  clSetq(CONS_1647, clCons(clBOX, clNIL, clEOA));
  clSetq(CONS_1646, clCons(clQUOTE, CONS_1647, clEOA));
  clSetq(CONS_1645, clCons(CONS_1646, clNIL, clEOA));
  clSetq(CONS_1644, clCons(clTYPECASE_TEST, CONS_1645, clEOA));
  clSetq(CONS_1648, clCons(clBLOCK, CONS_179, clEOA));
  clSetq(CONS_1657, clCons(clSETQ, CONS_87, clEOA));
  clSetq(CONS_1660, clCons(clB, CONS_11, clEOA));
  clSetq(CONS_1659, clCons(clSETQ, CONS_1660, clEOA));
  clSetq(CONS_1658, clCons(CONS_1659, CONS_81, clEOA));
  clSetq(CONS_1656, clCons(CONS_1657, CONS_1658, clEOA));
  clSetq(CONS_1655, clCons(clFOO, CONS_1656, clEOA));
  clSetq(CONS_1654, clCons(clBLOCK, CONS_1655, clEOA));
  clSetq(CONS_1653, clCons(CONS_1654, CONS_135, clEOA));
  clSetq(CONS_1652, clCons(clLIST, CONS_1653, clEOA));
  clSetq(CONS_1651, clCons(CONS_1652, clNIL, clEOA));
  clSetq(CONS_1650, clCons(CONS_135, CONS_1651, clEOA));
  clSetq(CONS_1649, clCons(clLET, CONS_1650, clEOA));
  clSetq(CONS_1677, clCons(clSETQ, CONS_463, clEOA));
  clSetq(CONS_1676, clCons(CONS_1677, clNIL, clEOA));
  clSetq(CONS_1675, clCons(clFOO, CONS_1676, clEOA));
  clSetq(CONS_1674, clCons(clRETURN_FROM, CONS_1675, clEOA));
  clSetq(CONS_1673, clCons(CONS_1674, CONS_81, clEOA));
  clSetq(CONS_1672, clCons(clA, CONS_1673, clEOA));
  clSetq(CONS_1671, clCons(clIF, CONS_1672, clEOA));
  clSetq(CONS_1670, clCons(CONS_1671, clNIL, clEOA));
  clSetq(CONS_1669, clCons(CONS_1659, CONS_1670, clEOA));
  clSetq(CONS_1668, clCons(CONS_1657, CONS_1669, clEOA));
  clSetq(CONS_1667, clCons(clFOO, CONS_1668, clEOA));
  clSetq(CONS_1666, clCons(clBLOCK, CONS_1667, clEOA));
  clSetq(CONS_1665, clCons(CONS_1666, CONS_135, clEOA));
  clSetq(CONS_1664, clCons(clLIST, CONS_1665, clEOA));
  clSetq(CONS_1663, clCons(CONS_1664, clNIL, clEOA));
  clSetq(CONS_1662, clCons(CONS_135, CONS_1663, clEOA));
  clSetq(CONS_1661, clCons(clLET, CONS_1662, clEOA));
  clSetq(CONS_1679, clCons(I_2, CONS_1243, clEOA));
  clSetq(CONS_1678, clCons(CONS_1679, clNIL, clEOA));
  clSetq(CONS_1685, clCons(clSOME_IDENTITY_FUNCTION, CONS_11, clEOA));
  clSetq(CONS_1688, clCons(clLOSER, CONS_293, clEOA));
  clSetq(CONS_1687, clCons(clRETURN_FROM, CONS_1688, clEOA));
  clSetq(CONS_1686, clCons(CONS_1687, clNIL, clEOA));
  clSetq(CONS_1684, clCons(CONS_1685, CONS_1686, clEOA));
  clSetq(CONS_1683, clCons(clIF, CONS_1684, clEOA));
  clSetq(CONS_1682, clCons(CONS_1683, clNIL, clEOA));
  clSetq(CONS_1681, clCons(clLOSER, CONS_1682, clEOA));
  clSetq(CONS_1680, clCons(clBLOCK, CONS_1681, clEOA));
  clSetq(CONS_1696, clCons(CONS_1666, CONS_293, clEOA));
  clSetq(CONS_1695, clCons(clFOO, CONS_1696, clEOA));
  clSetq(CONS_1694, clCons(clBLOCK, CONS_1695, clEOA));
  clSetq(CONS_1693, clCons(CONS_1694, CONS_135, clEOA));
  clSetq(CONS_1692, clCons(clLIST, CONS_1693, clEOA));
  clSetq(CONS_1691, clCons(CONS_1692, clNIL, clEOA));
  clSetq(CONS_1690, clCons(CONS_135, CONS_1691, clEOA));
  clSetq(CONS_1689, clCons(clLET, CONS_1690, clEOA));
  clSetq(CONS_1698, clCons(I_9, CONS_1243, clEOA));
  clSetq(CONS_1697, clCons(CONS_1698, clNIL, clEOA));
  clSetq(CONS_1708, clCons(clFOO2, CONS_1668, clEOA));
  clSetq(CONS_1707, clCons(clBLOCK, CONS_1708, clEOA));
  clSetq(CONS_1706, clCons(CONS_1707, CONS_293, clEOA));
  clSetq(CONS_1705, clCons(clFOO, CONS_1706, clEOA));
  clSetq(CONS_1704, clCons(clBLOCK, CONS_1705, clEOA));
  clSetq(CONS_1703, clCons(CONS_1704, CONS_135, clEOA));
  clSetq(CONS_1702, clCons(clLIST, CONS_1703, clEOA));
  clSetq(CONS_1701, clCons(CONS_1702, clNIL, clEOA));
  clSetq(CONS_1700, clCons(CONS_135, CONS_1701, clEOA));
  clSetq(CONS_1699, clCons(clLET, CONS_1700, clEOA));
  clSetq(CONS_1724, clCons(clX, CONS_1673, clEOA));
  clSetq(CONS_1723, clCons(clIF, CONS_1724, clEOA));
  clSetq(CONS_1722, clCons(CONS_1723, clNIL, clEOA));
  clSetq(CONS_1721, clCons(CONS_36, CONS_1722, clEOA));
  clSetq(CONS_1720, clCons(clBAR, CONS_1721, clEOA));
  clSetq(CONS_1719, clCons(CONS_1720, clNIL, clEOA));
  clSetq(CONS_1728, clCons(clBAR, CONS_19, clEOA));
  clSetq(CONS_1727, clCons(CONS_1728, clNIL, clEOA));
  clSetq(CONS_1726, clCons(CONS_1659, CONS_1727, clEOA));
  clSetq(CONS_1725, clCons(CONS_1657, CONS_1726, clEOA));
  clSetq(CONS_1718, clCons(CONS_1719, CONS_1725, clEOA));
  clSetq(CONS_1717, clCons(clFLET, CONS_1718, clEOA));
  clSetq(CONS_1716, clCons(CONS_1717, clNIL, clEOA));
  clSetq(CONS_1715, clCons(clFOO, CONS_1716, clEOA));
  clSetq(CONS_1714, clCons(clBLOCK, CONS_1715, clEOA));
  clSetq(CONS_1713, clCons(CONS_1714, CONS_135, clEOA));
  clSetq(CONS_1712, clCons(clLIST, CONS_1713, clEOA));
  clSetq(CONS_1711, clCons(CONS_1712, clNIL, clEOA));
  clSetq(CONS_1710, clCons(CONS_135, CONS_1711, clEOA));
  clSetq(CONS_1709, clCons(clLET, CONS_1710, clEOA));
  clSetq(CONS_1736, clCons(CONS_1714, CONS_293, clEOA));
  clSetq(CONS_1735, clCons(clFOO, CONS_1736, clEOA));
  clSetq(CONS_1734, clCons(clBLOCK, CONS_1735, clEOA));
  clSetq(CONS_1733, clCons(CONS_1734, CONS_135, clEOA));
  clSetq(CONS_1732, clCons(clLIST, CONS_1733, clEOA));
  clSetq(CONS_1731, clCons(CONS_1732, clNIL, clEOA));
  clSetq(CONS_1730, clCons(CONS_135, CONS_1731, clEOA));
  clSetq(CONS_1729, clCons(clLET, CONS_1730, clEOA));
  clSetq(CONS_1746, clCons(clFOO2, CONS_1716, clEOA));
  clSetq(CONS_1745, clCons(clBLOCK, CONS_1746, clEOA));
  clSetq(CONS_1744, clCons(CONS_1745, CONS_293, clEOA));
  clSetq(CONS_1743, clCons(clFOO, CONS_1744, clEOA));
  clSetq(CONS_1742, clCons(clBLOCK, CONS_1743, clEOA));
  clSetq(CONS_1741, clCons(CONS_1742, CONS_135, clEOA));
  clSetq(CONS_1740, clCons(clLIST, CONS_1741, clEOA));
  clSetq(CONS_1739, clCons(CONS_1740, clNIL, clEOA));
  clSetq(CONS_1738, clCons(CONS_135, CONS_1739, clEOA));
  clSetq(CONS_1737, clCons(clLET, CONS_1738, clEOA));
  clSetq(CONS_1767, clCons(CONS_19, CONS_1727, clEOA));
  clSetq(CONS_1766, clCons(clSOMETHING, CONS_1767, clEOA));
  clSetq(CONS_1765, clCons(CONS_1766, clNIL, clEOA));
  clSetq(CONS_1769, clCons(clSOMETHING, CONS_19, clEOA));
  clSetq(CONS_1768, clCons(CONS_1769, clNIL, clEOA));
  clSetq(CONS_1764, clCons(CONS_1765, CONS_1768, clEOA));
  clSetq(CONS_1763, clCons(clFLET, CONS_1764, clEOA));
  clSetq(CONS_1762, clCons(CONS_1763, clNIL, clEOA));
  clSetq(CONS_1761, clCons(CONS_1659, CONS_1762, clEOA));
  clSetq(CONS_1760, clCons(CONS_1657, CONS_1761, clEOA));
  clSetq(CONS_1759, clCons(CONS_1719, CONS_1760, clEOA));
  clSetq(CONS_1758, clCons(clFLET, CONS_1759, clEOA));
  clSetq(CONS_1757, clCons(CONS_1758, clNIL, clEOA));
  clSetq(CONS_1756, clCons(clFOO2, CONS_1757, clEOA));
  clSetq(CONS_1755, clCons(clBLOCK, CONS_1756, clEOA));
  clSetq(CONS_1754, clCons(CONS_1755, CONS_293, clEOA));
  clSetq(CONS_1753, clCons(clFOO, CONS_1754, clEOA));
  clSetq(CONS_1752, clCons(clBLOCK, CONS_1753, clEOA));
  clSetq(CONS_1751, clCons(CONS_1752, CONS_135, clEOA));
  clSetq(CONS_1750, clCons(clLIST, CONS_1751, clEOA));
  clSetq(CONS_1749, clCons(CONS_1750, clNIL, clEOA));
  clSetq(CONS_1748, clCons(CONS_135, CONS_1749, clEOA));
  clSetq(CONS_1747, clCons(clLET, CONS_1748, clEOA));
  clSetq(CONS_1773, clCons(clSHOULD_BE_CLEAR, CONS_147, clEOA));
  clSetq(CONS_1772, clCons(CONS_1773, clNIL, clEOA));
  clSetq(CONS_1788, clCons(clFOO, CONS_293, clEOA));
  clSetq(CONS_1787, clCons(clRETURN_FROM, CONS_1788, clEOA));
  clSetq(CONS_1786, clCons(CONS_1787, clNIL, clEOA));
  clSetq(CONS_1785, clCons(clNIL, CONS_1786, clEOA));
  clSetq(CONS_1784, clCons(clLAMBDA, CONS_1785, clEOA));
  clSetq(CONS_1783, clCons(CONS_1784, clNIL, clEOA));
  clSetq(CONS_1782, clCons(clFUNCTION, CONS_1783, clEOA));
  clSetq(CONS_1781, clCons(CONS_1782, clNIL, clEOA));
  clSetq(CONS_1780, clCons(clTROUBLE, CONS_1781, clEOA));
  clSetq(CONS_1791, clCons(clSHOULD_BE_CLEAR, CONS_267, clEOA));
  clSetq(CONS_1790, clCons(clSETQ, CONS_1791, clEOA));
  clSetq(CONS_1789, clCons(CONS_1790, clNIL, clEOA));
  clSetq(CONS_1779, clCons(CONS_1780, CONS_1789, clEOA));
  clSetq(CONS_1778, clCons(clFOO, CONS_1779, clEOA));
  clSetq(CONS_1777, clCons(clBLOCK, CONS_1778, clEOA));
  clSetq(CONS_1792, clCons(clSHOULD_BE_CLEAR, clNIL, clEOA));
  clSetq(CONS_1776, clCons(CONS_1777, CONS_1792, clEOA));
  clSetq(CONS_1775, clCons(clLIST, CONS_1776, clEOA));
  clSetq(CONS_1774, clCons(CONS_1775, clNIL, clEOA));
  clSetq(CONS_1771, clCons(CONS_1772, CONS_1774, clEOA));
  clSetq(CONS_1770, clCons(clLET, CONS_1771, clEOA));
  clSetq(CONS_1794, clCons(I_9, CONS_147, clEOA));
  clSetq(CONS_1793, clCons(CONS_1794, clNIL, clEOA));
  clSetq(CONS_1801, clCons(clSTUFF, clNIL, clEOA));
  clSetq(CONS_1800, clCons(clQUOTE, CONS_1801, clEOA));
  clSetq(CONS_1799, clCons(CONS_1800, CONS_1682, clEOA));
  clSetq(CONS_1798, clCons(clCATCH, CONS_1799, clEOA));
  clSetq(CONS_1797, clCons(CONS_1798, clNIL, clEOA));
  clSetq(CONS_1796, clCons(clLOSER, CONS_1797, clEOA));
  clSetq(CONS_1795, clCons(clBLOCK, CONS_1796, clEOA));
  clSetq(CONS_1815, clCons(clLOSER, CONS_11, clEOA));
  clSetq(CONS_1814, clCons(clRETURN_FROM, CONS_1815, clEOA));
  clSetq(CONS_1813, clCons(CONS_1814, clNIL, clEOA));
  clSetq(CONS_1812, clCons(CONS_1800, CONS_1813, clEOA));
  clSetq(CONS_1811, clCons(clCATCH, CONS_1812, clEOA));
  clSetq(CONS_1810, clCons(CONS_1811, CONS_293, clEOA));
  clSetq(CONS_1809, clCons(clLOSER, CONS_1810, clEOA));
  clSetq(CONS_1808, clCons(clBLOCK, CONS_1809, clEOA));
  clSetq(CONS_1807, clCons(CONS_1808, clNIL, clEOA));
  clSetq(CONS_1806, clCons(CONS_1800, CONS_1807, clEOA));
  clSetq(CONS_1805, clCons(clTHROW, CONS_1806, clEOA));
  clSetq(CONS_1804, clCons(CONS_1805, CONS_123, clEOA));
  clSetq(CONS_1803, clCons(CONS_1800, CONS_1804, clEOA));
  clSetq(CONS_1802, clCons(clCATCH, CONS_1803, clEOA));
  clSetq(CONS_1823, clCons(CONS_338, clNIL, clEOA));
  clSetq(CONS_1835, clCons(clFOO, CONS_19, clEOA));
  clSetq(CONS_1834, clCons(clRETURN_FROM, CONS_1835, clEOA));
  clSetq(CONS_1833, clCons(CONS_1834, CONS_1349, clEOA));
  clSetq(CONS_1832, clCons(clA, CONS_1833, clEOA));
  clSetq(CONS_1831, clCons(clIF, CONS_1832, clEOA));
  clSetq(CONS_1830, clCons(CONS_1831, clNIL, clEOA));
  clSetq(CONS_1829, clCons(CONS_178, CONS_1830, clEOA));
  clSetq(CONS_1828, clCons(clTHROW, CONS_1829, clEOA));
  clSetq(CONS_1827, clCons(CONS_1828, clNIL, clEOA));
  clSetq(CONS_1826, clCons(clFOO, CONS_1827, clEOA));
  clSetq(CONS_1825, clCons(clBLOCK, CONS_1826, clEOA));
  clSetq(CONS_1824, clCons(CONS_1825, clNIL, clEOA));
  clSetq(CONS_1822, clCons(CONS_1823, CONS_1824, clEOA));
  clSetq(CONS_1821, clCons(clLET, CONS_1822, clEOA));
  clSetq(CONS_1820, clCons(CONS_1821, clNIL, clEOA));
  clSetq(CONS_1819, clCons(CONS_178, CONS_1820, clEOA));
  clSetq(CONS_1818, clCons(clCATCH, CONS_1819, clEOA));
  clSetq(CONS_1817, clCons(CONS_1818, clNIL, clEOA));
  clSetq(CONS_1816, clCons(clLIST, CONS_1817, clEOA));
  clSetq(CONS_1839, clCons(clVALUES, CONS_327, clEOA));
  clSetq(CONS_1840, clCons(CONS_1818, CONS_123, clEOA));
  clSetq(CONS_1838, clCons(CONS_1839, CONS_1840, clEOA));
  clSetq(CONS_1837, clCons(CONS_947, CONS_1838, clEOA));
  clSetq(CONS_1836, clCons(clMULTIPLE_VALUE_CALL, CONS_1837, clEOA));
  clSetq(CONS_1865, clCons(CONS_1834, CONS_36, clEOA));
  clSetq(CONS_1864, clCons(clA, CONS_1865, clEOA));
  clSetq(CONS_1863, clCons(clIF, CONS_1864, clEOA));
  clSetq(CONS_1862, clCons(CONS_1863, clNIL, clEOA));
  clSetq(CONS_1861, clCons(CONS_36, CONS_1862, clEOA));
  clSetq(CONS_1860, clCons(clRETURNER, CONS_1861, clEOA));
  clSetq(CONS_1859, clCons(CONS_1860, clNIL, clEOA));
  clSetq(CONS_1870, clCons(clRETURNER, clNIL, clEOA));
  clSetq(CONS_1869, clCons(clNOTINLINE, CONS_1870, clEOA));
  clSetq(CONS_1868, clCons(CONS_1869, clNIL, clEOA));
  clSetq(CONS_1867, clCons(clDECLARE, CONS_1868, clEOA));
  clSetq(CONS_1872, clCons(clRETURNER, CONS_1349, clEOA));
  clSetq(CONS_1871, clCons(CONS_1872, clNIL, clEOA));
  clSetq(CONS_1866, clCons(CONS_1867, CONS_1871, clEOA));
  clSetq(CONS_1858, clCons(CONS_1859, CONS_1866, clEOA));
  clSetq(CONS_1857, clCons(clFLET, CONS_1858, clEOA));
  clSetq(CONS_1856, clCons(CONS_1857, clNIL, clEOA));
  clSetq(CONS_1855, clCons(CONS_178, CONS_1856, clEOA));
  clSetq(CONS_1854, clCons(clTHROW, CONS_1855, clEOA));
  clSetq(CONS_1853, clCons(CONS_1854, clNIL, clEOA));
  clSetq(CONS_1852, clCons(clFOO, CONS_1853, clEOA));
  clSetq(CONS_1851, clCons(clBLOCK, CONS_1852, clEOA));
  clSetq(CONS_1850, clCons(CONS_1851, clNIL, clEOA));
  clSetq(CONS_1849, clCons(CONS_1823, CONS_1850, clEOA));
  clSetq(CONS_1848, clCons(clLET, CONS_1849, clEOA));
  clSetq(CONS_1847, clCons(CONS_1848, clNIL, clEOA));
  clSetq(CONS_1846, clCons(CONS_178, CONS_1847, clEOA));
  clSetq(CONS_1845, clCons(clCATCH, CONS_1846, clEOA));
  clSetq(CONS_1844, clCons(CONS_1845, CONS_123, clEOA));
  clSetq(CONS_1843, clCons(CONS_1839, CONS_1844, clEOA));
  clSetq(CONS_1842, clCons(CONS_947, CONS_1843, clEOA));
  clSetq(CONS_1841, clCons(clMULTIPLE_VALUE_CALL, CONS_1842, clEOA));
  clSetq(CONS_1884, clCons(clVALUES, CONS_521, clEOA));
  clSetq(CONS_1883, clCons(CONS_1884, CONS_1830, clEOA));
  clSetq(CONS_1882, clCons(CONS_947, CONS_1883, clEOA));
  clSetq(CONS_1881, clCons(clMULTIPLE_VALUE_CALL, CONS_1882, clEOA));
  clSetq(CONS_1880, clCons(CONS_1881, clNIL, clEOA));
  clSetq(CONS_1879, clCons(clFOO, CONS_1880, clEOA));
  clSetq(CONS_1878, clCons(clBLOCK, CONS_1879, clEOA));
  clSetq(CONS_1877, clCons(CONS_1878, clNIL, clEOA));
  clSetq(CONS_1876, clCons(CONS_1823, CONS_1877, clEOA));
  clSetq(CONS_1875, clCons(clLET, CONS_1876, clEOA));
  clSetq(CONS_1874, clCons(CONS_1875, clNIL, clEOA));
  clSetq(CONS_1873, clCons(clLIST, CONS_1874, clEOA));
  clSetq(CONS_1888, clCons(CONS_1875, CONS_123, clEOA));
  clSetq(CONS_1887, clCons(CONS_1839, CONS_1888, clEOA));
  clSetq(CONS_1886, clCons(CONS_947, CONS_1887, clEOA));
  clSetq(CONS_1885, clCons(clMULTIPLE_VALUE_CALL, CONS_1886, clEOA));
  clSetq(CONS_1899, clCons(clMULTIPLE_VALUE_PROG1, CONS_1883, clEOA));
  clSetq(CONS_1898, clCons(CONS_1899, clNIL, clEOA));
  clSetq(CONS_1897, clCons(clFOO, CONS_1898, clEOA));
  clSetq(CONS_1896, clCons(clBLOCK, CONS_1897, clEOA));
  clSetq(CONS_1895, clCons(CONS_1896, clNIL, clEOA));
  clSetq(CONS_1894, clCons(CONS_1823, CONS_1895, clEOA));
  clSetq(CONS_1893, clCons(clLET, CONS_1894, clEOA));
  clSetq(CONS_1892, clCons(CONS_1893, CONS_123, clEOA));
  clSetq(CONS_1891, clCons(CONS_1839, CONS_1892, clEOA));
  clSetq(CONS_1890, clCons(CONS_947, CONS_1891, clEOA));
  clSetq(CONS_1889, clCons(clMULTIPLE_VALUE_CALL, CONS_1890, clEOA));
  clSetq(CONS_1917, clCons(CONS_19, CONS_1830, clEOA));
  clSetq(CONS_1916, clCons(clSILLY, CONS_1917, clEOA));
  clSetq(CONS_1915, clCons(CONS_1916, clNIL, clEOA));
  clSetq(CONS_1922, clCons(clSILLY, clNIL, clEOA));
  clSetq(CONS_1921, clCons(clNOTINLINE, CONS_1922, clEOA));
  clSetq(CONS_1920, clCons(CONS_1921, clNIL, clEOA));
  clSetq(CONS_1919, clCons(clDECLARE, CONS_1920, clEOA));
  clSetq(CONS_1924, clCons(clSILLY, CONS_19, clEOA));
  clSetq(CONS_1923, clCons(CONS_1924, clNIL, clEOA));
  clSetq(CONS_1918, clCons(CONS_1919, CONS_1923, clEOA));
  clSetq(CONS_1914, clCons(CONS_1915, CONS_1918, clEOA));
  clSetq(CONS_1913, clCons(clFLET, CONS_1914, clEOA));
  clSetq(CONS_1912, clCons(CONS_1913, clNIL, clEOA));
  clSetq(CONS_1911, clCons(CONS_1884, CONS_1912, clEOA));
  clSetq(CONS_1910, clCons(clMULTIPLE_VALUE_PROG1, CONS_1911, clEOA));
  clSetq(CONS_1909, clCons(CONS_1910, clNIL, clEOA));
  clSetq(CONS_1908, clCons(clFOO, CONS_1909, clEOA));
  clSetq(CONS_1907, clCons(clBLOCK, CONS_1908, clEOA));
  clSetq(CONS_1906, clCons(CONS_1907, clNIL, clEOA));
  clSetq(CONS_1905, clCons(CONS_1823, CONS_1906, clEOA));
  clSetq(CONS_1904, clCons(clLET, CONS_1905, clEOA));
  clSetq(CONS_1903, clCons(CONS_1904, CONS_123, clEOA));
  clSetq(CONS_1902, clCons(CONS_1839, CONS_1903, clEOA));
  clSetq(CONS_1901, clCons(CONS_947, CONS_1902, clEOA));
  clSetq(CONS_1900, clCons(clMULTIPLE_VALUE_CALL, CONS_1901, clEOA));
  clSetq(CONS_1939, clCons(CONS_19, CONS_1898, clEOA));
  clSetq(CONS_1938, clCons(clSILLY, CONS_1939, clEOA));
  clSetq(CONS_1937, clCons(CONS_1938, clNIL, clEOA));
  clSetq(CONS_1936, clCons(CONS_1937, CONS_1918, clEOA));
  clSetq(CONS_1935, clCons(clFLET, CONS_1936, clEOA));
  clSetq(CONS_1934, clCons(CONS_1935, clNIL, clEOA));
  clSetq(CONS_1933, clCons(clFOO, CONS_1934, clEOA));
  clSetq(CONS_1932, clCons(clBLOCK, CONS_1933, clEOA));
  clSetq(CONS_1931, clCons(CONS_1932, clNIL, clEOA));
  clSetq(CONS_1930, clCons(CONS_1823, CONS_1931, clEOA));
  clSetq(CONS_1929, clCons(clLET, CONS_1930, clEOA));
  clSetq(CONS_1928, clCons(CONS_1929, CONS_123, clEOA));
  clSetq(CONS_1927, clCons(CONS_1839, CONS_1928, clEOA));
  clSetq(CONS_1926, clCons(CONS_947, CONS_1927, clEOA));
  clSetq(CONS_1925, clCons(clMULTIPLE_VALUE_CALL, CONS_1926, clEOA));
  clSetq(CONS_1962, clCons(clRETURN_FROM, CONS_1924, clEOA));
  clSetq(CONS_1961, clCons(CONS_1962, CONS_1349, clEOA));
  clSetq(CONS_1960, clCons(clA, CONS_1961, clEOA));
  clSetq(CONS_1959, clCons(clIF, CONS_1960, clEOA));
  clSetq(CONS_1958, clCons(CONS_1959, clNIL, clEOA));
  clSetq(CONS_1957, clCons(CONS_1884, CONS_1958, clEOA));
  clSetq(CONS_1956, clCons(clMULTIPLE_VALUE_PROG1, CONS_1957, clEOA));
  clSetq(CONS_1955, clCons(CONS_1956, clNIL, clEOA));
  clSetq(CONS_1954, clCons(CONS_19, CONS_1955, clEOA));
  clSetq(CONS_1953, clCons(clSILLY, CONS_1954, clEOA));
  clSetq(CONS_1952, clCons(CONS_1953, clNIL, clEOA));
  clSetq(CONS_1951, clCons(CONS_1952, CONS_1918, clEOA));
  clSetq(CONS_1950, clCons(clFLET, CONS_1951, clEOA));
  clSetq(CONS_1949, clCons(CONS_1950, clNIL, clEOA));
  clSetq(CONS_1948, clCons(clFOO, CONS_1949, clEOA));
  clSetq(CONS_1947, clCons(clBLOCK, CONS_1948, clEOA));
  clSetq(CONS_1946, clCons(CONS_1947, clNIL, clEOA));
  clSetq(CONS_1945, clCons(CONS_1823, CONS_1946, clEOA));
  clSetq(CONS_1944, clCons(clLET, CONS_1945, clEOA));
  clSetq(CONS_1943, clCons(CONS_1944, CONS_123, clEOA));
  clSetq(CONS_1942, clCons(CONS_1839, CONS_1943, clEOA));
  clSetq(CONS_1941, clCons(CONS_947, CONS_1942, clEOA));
  clSetq(CONS_1940, clCons(clMULTIPLE_VALUE_CALL, CONS_1941, clEOA));
  clSetq(CONS_1971, clCons(clRETURN, CONS_293, clEOA));
  clSetq(CONS_1972, clCons(CONS_1467, clNIL, clEOA));
  clSetq(CONS_1970, clCons(CONS_1971, CONS_1972, clEOA));
  clSetq(CONS_1969, clCons(clNIL, CONS_1970, clEOA));
  clSetq(CONS_1968, clCons(clBLOCK, CONS_1969, clEOA));
  clSetq(CONS_1967, clCons(CONS_1968, CONS_36, clEOA));
  clSetq(CONS_1966, clCons(clVALUES, CONS_1967, clEOA));
  clSetq(CONS_1965, clCons(CONS_1966, clNIL, clEOA));
  clSetq(CONS_1964, clCons(CONS_1460, CONS_1965, clEOA));
  clSetq(CONS_1963, clCons(clLET, CONS_1964, clEOA));
  clSetq(CONS_1973, clCons(I_9, CONS_202, clEOA));

  clSetSymbolFunctionValue(clSOME_IDENTITY_FUNCTION,
                           clMakeClosure(0,
                                         clSomeIdentityFunction,
                                         clNULL_HOOK));
  (void) clSOME_IDENTITY_FUNCTION;
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_UNQUOTED,
                                clMakeClosure(0,
                                              clTstUnquoted,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clUNQUOTED, CONS_0, clTST_UNQUOTED, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_12, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_QUOTE,
                                clMakeClosure(0,
                                              clTstQuote,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clQUOTE, CONS_16, clTST_QUOTE, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_22, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  clSetSymbolFunctionValue(clADDER,
                           clMakeClosure(0, clAdder, clNULL_HOOK));
  (void) clADDER;
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_DEFUN_CLOSURE,
                                clMakeClosure(0,
                                              clTstDefunClosure,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clDEFUN_CLOSURE, CONS_23,
                     clTST_DEFUN_CLOSURE, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_27, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_CLOSURE_BINDINGS,
                                clMakeClosure(0,
                                              clTstClosureBindings,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clCLOSURE_BINDINGS, CONS_28,
                     clTST_CLOSURE_BINDINGS, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_66, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  clSetSymbolFunctionValue(clTWO_FUNS,
                           clMakeClosure(0, clTwoFuns, clNULL_HOOK));
  (void) clTWO_FUNS;
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_CLOSURE_BINDINGS2,
                                clMakeClosure(0,
                                              clTstClosureBindings2,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clCLOSURE_BINDINGS2, CONS_69,
                     clTST_CLOSURE_BINDINGS2, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_66, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_SYMBOL_VALUE,
                                clMakeClosure(0,
                                              clTstSymbolValue,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clSYMBOL_VALUE, CONS_75, clTST_SYMBOL_VALUE,
                     clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_148, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_SYMBOL_FUNCTION,
                                clMakeClosure(0,
                                              clTstSymbolFunction,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clSYMBOL_FUNCTION, CONS_160,
                     clTST_SYMBOL_FUNCTION, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_184, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_FDEFINITION_SIMPLE,
                                clMakeClosure(0,
                                              clTstFdefinitionSimple,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clFDEFINITION_SIMPLE, CONS_185,
                     clTST_FDEFINITION_SIMPLE, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_184, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_FDEFINITION_SETF,
                                clMakeClosure(0,
                                              clTstFdefinitionSetf,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clFDEFINITION_SETF, CONS_198,
                     clTST_FDEFINITION_SETF, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_229, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_BOUNDP,
                                clMakeClosure(0,
                                              clTstBoundp,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clBOUNDP, CONS_231, clTST_BOUNDP, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_262, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_FBOUNDP,
                                clMakeClosure(0,
                                              clTstFboundp,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clFBOUNDP, CONS_268, clTST_FBOUNDP, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_296, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_SPECIAL_OPERATOR_P1,
                                clMakeClosure(0,
                                              clTstSpecialOperatorP1,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clSPECIAL_OPERATOR_P1, CONS_298,
                     clTST_SPECIAL_OPERATOR_P1, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_147, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_SPECIAL_OPERATOR_P2,
                                clMakeClosure(0,
                                              clTstSpecialOperatorP2,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clSPECIAL_OPERATOR_P2, CONS_304,
                     clTST_SPECIAL_OPERATOR_P2, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_147, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_SPECIAL_OPERATOR_P3,
                                clMakeClosure(0,
                                              clTstSpecialOperatorP3,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clSPECIAL_OPERATOR_P3, CONS_308,
                     clTST_SPECIAL_OPERATOR_P3, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_147, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_EMPTY_SETQ,
                                clMakeClosure(0,
                                              clTstEmptySetq,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clEMPTY_SETQ, CONS_312, clTST_EMPTY_SETQ,
                     clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_147, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_SPECIAL_SIMPLE_SETQ,
                                clMakeClosure(0,
                                              clTstSpecialSimpleSetq,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clSPECIAL_SIMPLE_SETQ, CONS_313,
                     clTST_SPECIAL_SIMPLE_SETQ, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_324, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_SPECIAL_SEQUENTIAL_ASSIGNMENT,
                                clMakeClosure(0,
                                              clTstSpecialSequentialAssignment,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clSPECIAL_SEQUENTIAL_ASSIGNMENT, CONS_328,
                     clTST_SPECIAL_SEQUENTIAL_ASSIGNMENT, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_342, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_SPECIAL_SETQ_ORDER,
                                clMakeClosure(0,
                                              clTstSpecialSetqOrder,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clSPECIAL_SETQ_ORDER, CONS_347,
                     clTST_SPECIAL_SETQ_ORDER, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_359, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_SPECIAL_SETQ_SYMBOL_MACRO,
                                clMakeClosure(0,
                                              clTstSpecialSetqSymbolMacro,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clSPECIAL_SETQ_SYMBOL_MACRO, CONS_363,
                     clTST_SPECIAL_SETQ_SYMBOL_MACRO, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_397, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject *a = clMakeBinding(), *b = clMakeBinding(),
    *c = clMakeBinding(), *x = clMakeBinding(), *y = clMakeBinding();
    clSetq(*a, clNIL);
    clSetq(*b, clNIL);
    clSetq(*c, clNIL);
    clSetq(*x, clNIL);
    clSetq(*y, clNIL);
    { clObject L_0;
      { clObject L_0__R1;
        { { clObject L_1__R2;
            clSetq(L_1__R2,
                   clMakeClosure(3,
                                 clTstLocalSimpleSetq,
                                 &clEnvHook(clTstLocalSimpleSetq),
                                 &*a,
                                 &*b,
                                 &*c));
            clSetSymbolFunctionValue(clTST_LOCAL_SIMPLE_SETQ,
                                     L_1__R2); }
          clSetq(L_0__R1,
                 clList(clT,
                        clLOCAL_SIMPLE_SETQ,
                        CONS_313,
                        clTST_LOCAL_SIMPLE_SETQ,
                        clEOA)); }
        clSetq(L_0, clNconc(L_0__R1, CONS_324, clEOA)); }
      clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA),
                        L_0,
                        clEOA); }
    { clObject L_0;
      { clObject L_0__R1;
        { { clObject L_1__R2;
            clSetq(L_1__R2,
                   clMakeClosure(3,
                                 clTstLocalSequentialAssignment,
                                 &clEnvHook(clTstLocalSequentialAssignment),
                                 &*a,
                                 &*b,
                                 &*c));
            clSetSymbolFunctionValue(clTST_LOCAL_SEQUENTIAL_ASSIGNMENT,
                                     L_1__R2); }
          clSetq(L_0__R1,
                 clList(clT,
                        clLOCAL_SEQUENTIAL_ASSIGNMENT,
                        CONS_328,
                        clTST_LOCAL_SEQUENTIAL_ASSIGNMENT,
                        clEOA)); }
        clSetq(L_0, clNconc(L_0__R1, CONS_342, clEOA)); }
      clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA),
                        L_0,
                        clEOA); }
    { clObject L_0;
      { clObject L_0__R1;
        { { clObject L_1__R2;
            clSetq(L_1__R2,
                   clMakeClosure(2,
                                 clTstLocalSetqOrder,
                                 &clEnvHook(clTstLocalSetqOrder),
                                 &*x,
                                 &*y));
            clSetSymbolFunctionValue(clTST_LOCAL_SETQ_ORDER,
                                     L_1__R2); }
          clSetq(L_0__R1,
                 clList(clT,
                        clLOCAL_SETQ_ORDER,
                        CONS_347,
                        clTST_LOCAL_SETQ_ORDER,
                        clEOA)); }
        clSetq(L_0, clNconc(L_0__R1, CONS_359, clEOA)); }
      clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA),
                        L_0,
                        clEOA); }
    { clObject L_0;
      { clObject L_0__R1;
        (clSetSymbolFunctionValue(clTST_LOCAL_SETQ_SYMBOL_MACRO,
                                  clMakeClosure(0,
                                                clTstLocalSetqSymbolMacro,
                                                clNULL_HOOK)),
         clSetq(L_0__R1,
                clList(clT,
                       clLOCAL_SETQ_SYMBOL_MACRO,
                       CONS_403,
                       clTST_LOCAL_SETQ_SYMBOL_MACRO,
                       clEOA)));
        clSetq(L_0, clNconc(L_0__R1, CONS_416, clEOA)); }
      clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA),
                        L_0,
                        clEOA); } }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_EMPTY_PSETQ,
                                clMakeClosure(0,
                                              clTstEmptyPsetq,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clEMPTY_PSETQ, CONS_422, clTST_EMPTY_PSETQ,
                     clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_147, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_PSETQ,
                                clMakeClosure(0,
                                              clTstPsetq,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clPSETQ, CONS_423, clTST_PSETQ, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_437, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_PSETQ_SYMBOL_MACRO,
                                clMakeClosure(0,
                                              clTstPsetqSymbolMacro,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clPSETQ_SYMBOL_MACRO, CONS_440,
                     clTST_PSETQ_SYMBOL_MACRO, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_453, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_PSETQ_SWAP,
                                clMakeClosure(0,
                                              clTstPsetqSwap,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clPSETQ_SWAP, CONS_459, clTST_PSETQ_SWAP,
                     clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_354, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_SET,
                                clMakeClosure(0,
                                              clTstSet,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clSET, CONS_471, clTST_SET, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_493, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_SETF_EMPTY,
                                clMakeClosure(0,
                                              clTstSetfEmpty,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clSETF_EMPTY, CONS_498, clTST_SETF_EMPTY,
                     clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_147, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_SETF_LOCALS,
                                clMakeClosure(0,
                                              clTstSetfLocals,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clSETF_LOCALS, CONS_499, clTST_SETF_LOCALS,
                     clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_513, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_SETF_THE,
                                clMakeClosure(0,
                                              clTstSetfThe,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clSETF_THE, CONS_515, clTST_SETF_THE,
                     clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_533, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_PSETF,
                                clMakeClosure(0,
                                              clTstPsetf,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clPSETF, CONS_536, clTST_PSETF, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_560, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_SHIFTF,
                                clMakeClosure(0,
                                              clTstShiftf,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clSHIFTF, CONS_565, clTST_SHIFTF, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_586, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_ROTATEF,
                                clMakeClosure(0,
                                              clTstRotatef,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clROTATEF, CONS_590, clTST_ROTATEF, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_622, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_DEFINE_MODIFY_MACRO,
                                clMakeClosure(0,
                                              clTstDefineModifyMacro,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clDEFINE_MODIFY_MACRO, CONS_629,
                     clTST_DEFINE_MODIFY_MACRO, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_683, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  clSetSymbolFunctionValue(clMIDDLEGUY,
                           clMakeClosure(0, clMiddleguy, clNULL_HOOK));
  (void) clMIDDLEGUY;
  clSetSymbolFunctionValue(clSET_MIDDLEGUY,
                           clMakeClosure(0,
                                         clSetMiddleguy,
                                         clNULL_HOOK));
  (void) clSET_MIDDLEGUY;
  { clObject L_value39599;
    clSetq(L_value39599, clMakeClosure(0, clLambda, clNULL_HOOK));
    cl_SETF_SetfExpander(L_value39599, clMIDDLEGUY, clEOA); }
  (void) clMIDDLEGUY;
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_DEFSETF_SHORT,
                                clMakeClosure(0,
                                              clTstDefsetfShort,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clDEFSETF_SHORT, CONS_696,
                     clTST_DEFSETF_SHORT, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_742, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_value39615;
    clSetq(L_value39615, clMakeClosure(0, clLambda_r1, clNULL_HOOK));
    cl_SETF_SetfExpander(L_value39615, clEXAMPLE_SUBSEQ, clEOA); }
  (void) clEXAMPLE_SUBSEQ;
  cl_SETF_GlobalDeclaration(clT,
                            clstarXYstar,
                            clGLOBAL_VARIABLE,
                            clSPECIAL,
                            clEOA);
  if (clTrue(clNot(clBoundp(clstarXYstar, clEOA), clEOA)))
    clSetSymbolValueValue(clstarXYstar, clMakeArray(CONS_760, clEOA));
  (void) clstarXYstar;
  clSetSymbolFunctionValue(clXY, clMakeClosure(0, clXy, clNULL_HOOK));
  (void) clXY;
  clSetSymbolFunctionValue(clSET_XY,
                           clMakeClosure(0, clSetXy, clNULL_HOOK));
  (void) clSET_XY;
  { clObject L_value39634;
    clSetq(L_value39634, clMakeClosure(0, clLambda_r2, clNULL_HOOK));
    cl_SETF_SetfExpander(L_value39634, clXY, clEOA); }
  (void) clXY;
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_SETF_LONG,
                                clMakeClosure(0,
                                              clTstSetfLong,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clSETF_LONG, CONS_770, clTST_SETF_LONG,
                     clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_808, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_value39666;
    clSetq(L_value39666, clMakeClosure(0, clLambda_r3, clNULL_HOOK));
    cl_SETF_SetfExpander(L_value39666, clXXY, clEOA); }
  (void) clXXY;
  if (clTrue(clFboundp(clAUGMENT_ENVIRONMENT, clEOA)))
    { clObject L_0;
      { clObject L_0__R1;
        (clSetSymbolFunctionValue(clTST_SETF_LONG_ENV,
                                  clMakeClosure(0,
                                                clTstSetfLongEnv,
                                                clNULL_HOOK)),
         clSetq(L_0__R1,
                clList(clT,
                       clSETF_LONG_ENV,
                       CONS_819,
                       clTST_SETF_LONG_ENV,
                       clEOA)));
        clSetq(L_0, clNconc(L_0__R1, CONS_267, clEOA)); }
      clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA),
                        L_0,
                        clEOA); }
  clSetSymbolFunctionValue(clLASTGUY,
                           clMakeClosure(0, clLastguy, clNULL_HOOK));
  (void) clLASTGUY;
  { clObject L_value39672;
    clSetq(L_value39672, clMakeClosure(0, clLambda_r4, clNULL_HOOK));
    cl_SETF_SetfExpander(L_value39672, clLASTGUY, clEOA); }
  (void) clLASTGUY;
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_DEFINE_SETF_EXPANDER,
                                clMakeClosure(0,
                                              clTstDefineSetfExpander,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clDEFINE_SETF_EXPANDER, CONS_852,
                     clTST_DEFINE_SETF_EXPANDER, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_883, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_LOCAL_ACROSS_FBOUNDARY,
                                clMakeClosure(0,
                                              clTstLocalAcrossFboundary,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clLOCAL_ACROSS_FBOUNDARY, CONS_897,
                     clTST_LOCAL_ACROSS_FBOUNDARY, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_81, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_LOCAL_ASSIGNMENT_ACROSS_FBOUNDARY,
                                clMakeClosure(0,
                                              clTstLocalAssignmentAcrossFboundary,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clLOCAL_ASSIGNMENT_ACROSS_FBOUNDARY,
                     CONS_909, clTST_LOCAL_ASSIGNMENT_ACROSS_FBOUNDARY,
                     clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_11, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_APPLY_BOUND_SYMBOL,
                                clMakeClosure(0,
                                              clTstApplyBoundSymbol,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clAPPLY_BOUND_SYMBOL, CONS_930,
                     clTST_APPLY_BOUND_SYMBOL, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_11, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_APPLY_SYMBOL,
                                clMakeClosure(0,
                                              clTstApplySymbol,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clAPPLY_SYMBOL, CONS_943, clTST_APPLY_SYMBOL,
                     clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_11, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_APPLY_FUNCTION,
                                clMakeClosure(0,
                                              clTstApplyFunction,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clAPPLY_FUNCTION, CONS_945,
                     clTST_APPLY_FUNCTION, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_955, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_APPLY_SYMBOL2,
                                clMakeClosure(0,
                                              clTstApplySymbol2,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clAPPLY_SYMBOL2, CONS_956,
                     clTST_APPLY_SYMBOL2, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_965, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_APPLY_NULL_ARGS,
                                clMakeClosure(0,
                                              clTstApplyNullArgs,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clAPPLY_NULL_ARGS, CONS_967,
                     clTST_APPLY_NULL_ARGS, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_202, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_APPLY_KEYS,
                                clMakeClosure(0,
                                              clTstApplyKeys,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clAPPLY_KEYS, CONS_969, clTST_APPLY_KEYS,
                     clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_982, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_FUNCALL_BOUND_SYMBOL,
                                clMakeClosure(0,
                                              clTstFuncallBoundSymbol,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clFUNCALL_BOUND_SYMBOL, CONS_983,
                     clTST_FUNCALL_BOUND_SYMBOL, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_11, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_FUNCALL_SYMBOL,
                                clMakeClosure(0,
                                              clTstFuncallSymbol,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clFUNCALL_SYMBOL, CONS_988,
                     clTST_FUNCALL_SYMBOL, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_11, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_FUNCALL_FUNCTION,
                                clMakeClosure(0,
                                              clTstFuncallFunction,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clFUNCALL_FUNCTION, CONS_990,
                     clTST_FUNCALL_FUNCTION, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_955, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_FUNCALL_SYMBOL2,
                                clMakeClosure(0,
                                              clTstFuncallSymbol2,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clFUNCALL_SYMBOL2, CONS_994,
                     clTST_FUNCALL_SYMBOL2, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_965, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_FUNCALL_NULL_ARGS,
                                clMakeClosure(0,
                                              clTstFuncallNullArgs,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clFUNCALL_NULL_ARGS, CONS_999,
                     clTST_FUNCALL_NULL_ARGS, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_202, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_FUNCALL_KEYS,
                                clMakeClosure(0,
                                              clTstFuncallKeys,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clFUNCALL_KEYS, CONS_1001,
                     clTST_FUNCALL_KEYS, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_982, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_CALL_ARGUMENTS_LIMIT,
                                clMakeClosure(0,
                                              clTstCallArgumentsLimit,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clCALL_ARGUMENTS_LIMIT, CONS_1003,
                     clTST_CALL_ARGUMENTS_LIMIT, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_267, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  clSetSymbolFunctionValue(clMANY_PARAMETERS,
                           clMakeClosure(0,
                                         clManyParameters,
                                         clNULL_HOOK));
  (void) clMANY_PARAMETERS;
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_CALL_ARGUMENTS_LIMIT_WORKS,
                                clMakeClosure(0,
                                              clTstCallArgumentsLimitWorks,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clCALL_ARGUMENTS_LIMIT_WORKS, CONS_1010,
                     clTST_CALL_ARGUMENTS_LIMIT_WORKS, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_1067, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_EMPTY_SEQUENCE,
                                clMakeClosure(0,
                                              clTstEmptySequence,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clEMPTY_SEQUENCE, CONS_1068,
                     clTST_EMPTY_SEQUENCE, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_147, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_SEQUENCE,
                                clMakeClosure(0,
                                              clTstSequence,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clSEQUENCE, CONS_1069, clTST_SEQUENCE,
                     clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_293, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_SEQUENCE_ORDER,
                                clMakeClosure(0,
                                              clTstSequenceOrder,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clSEQUENCE_ORDER, CONS_1073,
                     clTST_SEQUENCE_ORDER, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_1082, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_PROG1,
                                clMakeClosure(0,
                                              clTstProg1,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clPROG1, CONS_1084, clTST_PROG1, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_1107, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_PROG1A,
                                clMakeClosure(0,
                                              clTstProg1a,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clPROG1A, CONS_1110, clTST_PROG1A, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_1131, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_PROG1B,
                                clMakeClosure(0,
                                              clTstProg1b,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clPROG1B, CONS_1134, clTST_PROG1B, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_354, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_PROG2,
                                clMakeClosure(0,
                                              clTstProg2,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clPROG2, CONS_1173, clTST_PROG2, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_1189, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_EMPTY_LET,
                                clMakeClosure(0,
                                              clTstEmptyLet,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clEMPTY_LET, CONS_1191, clTST_EMPTY_LET,
                     clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_147, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_EMPTY_BINDINGS,
                                clMakeClosure(0,
                                              clTstEmptyBindings,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clEMPTY_BINDINGS, CONS_1192,
                     clTST_EMPTY_BINDINGS, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_11, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_BINDINGS,
                                clMakeClosure(0,
                                              clTstBindings,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clBINDINGS, CONS_1193, clTST_BINDINGS,
                     clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_942, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  clSetSymbolFunctionValue(clLIST_SPECIALS,
                           clMakeClosure(0,
                                         clListSpecials,
                                         clNULL_HOOK));
  (void) clLIST_SPECIALS;
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_SPECIAL_BINDING,
                                clMakeClosure(0,
                                              clTstSpecialBinding,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clSPECIAL_BINDING, CONS_1195,
                     clTST_SPECIAL_BINDING, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_1206, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_SPECIAL_BINDING2,
                                clMakeClosure(0,
                                              clTstSpecialBinding2,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clSPECIAL_BINDING2, CONS_1208,
                     clTST_SPECIAL_BINDING2, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_1224, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_BINDING_ORDER,
                                clMakeClosure(0,
                                              clTstBindingOrder,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clBINDING_ORDER, CONS_1227,
                     clTST_BINDING_ORDER, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_1241, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_SPECIAL_BINDING_ORDER,
                                clMakeClosure(0,
                                              clTstSpecialBindingOrder,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clSPECIAL_BINDING_ORDER, CONS_1244,
                     clTST_SPECIAL_BINDING_ORDER, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_1241, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_MIXED_BINDING_ORDER,
                                clMakeClosure(0,
                                              clTstMixedBindingOrder,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clMIXED_BINDING_ORDER, CONS_1250,
                     clTST_MIXED_BINDING_ORDER, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_1241, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_MIXED_BINDING_ORDER2,
                                clMakeClosure(0,
                                              clTstMixedBindingOrder2,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clMIXED_BINDING_ORDER2, CONS_1259,
                     clTST_MIXED_BINDING_ORDER2, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_1241, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_NESTED_AND_EMPTY_LETS,
                                clMakeClosure(0,
                                              clTstNestedAndEmptyLets,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clNESTED_AND_EMPTY_LETS, CONS_1265,
                     clTST_NESTED_AND_EMPTY_LETS, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_1281, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_MISSING_INITS,
                                clMakeClosure(0,
                                              clTstMissingInits,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clMISSING_INITS, CONS_1283,
                     clTST_MISSING_INITS, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_1285, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_EMPTY_LETstar,
                                clMakeClosure(0,
                                              clTstEmptyLetSTAR,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clEMPTY_LETstar, CONS_1287,
                     clTST_EMPTY_LETstar, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_147, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_EMPTY_BINDINGSstar,
                                clMakeClosure(0,
                                              clTstEmptyBindingsSTAR,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clEMPTY_BINDINGSstar, CONS_1288,
                     clTST_EMPTY_BINDINGSstar, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_11, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_BINDINGSstar,
                                clMakeClosure(0,
                                              clTstBindingsSTAR,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clBINDINGSstar, CONS_1289,
                     clTST_BINDINGSstar, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_942, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_SPECIAL_BINDINGstar,
                                clMakeClosure(0,
                                              clTstSpecialBindingSTAR,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clSPECIAL_BINDINGstar, CONS_1290,
                     clTST_SPECIAL_BINDINGstar, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_1206, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_SPECIAL_BINDING2star,
                                clMakeClosure(0,
                                              clTstSpecialBinding2STAR,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clSPECIAL_BINDING2star, CONS_1291,
                     clTST_SPECIAL_BINDING2star, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_1296, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_BINDING_ORDERstar,
                                clMakeClosure(0,
                                              clTstBindingOrderSTAR,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clBINDING_ORDERstar, CONS_1300,
                     clTST_BINDING_ORDERstar, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_1241, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_SPECIAL_BINDING_ORDERstar,
                                clMakeClosure(0,
                                              clTstSpecialBindingOrderSTAR,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clSPECIAL_BINDING_ORDERstar, CONS_1304,
                     clTST_SPECIAL_BINDING_ORDERstar, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_1241, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_MIXED_BINDING_ORDERstar,
                                clMakeClosure(0,
                                              clTstMixedBindingOrderSTAR,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clMIXED_BINDING_ORDERstar, CONS_1308,
                     clTST_MIXED_BINDING_ORDERstar, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_1241, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_MIXED_BINDING_ORDER2star,
                                clMakeClosure(0,
                                              clTstMixedBindingOrder2STAR,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clMIXED_BINDING_ORDER2star, CONS_1312,
                     clTST_MIXED_BINDING_ORDER2star, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_1241, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_NESTED_AND_EMPTY_LETSstar,
                                clMakeClosure(0,
                                              clTstNestedAndEmptyLetsSTAR,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clNESTED_AND_EMPTY_LETSstar, CONS_1316,
                     clTST_NESTED_AND_EMPTY_LETSstar, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_1327, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_MISSING_INITSstar,
                                clMakeClosure(0,
                                              clTstMissingInitsSTAR,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clMISSING_INITSstar, CONS_1330,
                     clTST_MISSING_INITSstar, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_1285, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_EMPTY_PROGV,
                                clMakeClosure(0,
                                              clTstEmptyProgv,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clEMPTY_PROGV, CONS_1331, clTST_EMPTY_PROGV,
                     clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_147, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_NO_PROGV_BINDINGS,
                                clMakeClosure(0,
                                              clTstNoProgvBindings,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clNO_PROGV_BINDINGS, CONS_1332,
                     clTST_NO_PROGV_BINDINGS, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_11, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  clSetSymbolFunctionValue(clREPORT_PROGV_SPECIALS,
                           clMakeClosure(0,
                                         clReportProgvSpecials,
                                         clNULL_HOOK));
  (void) clREPORT_PROGV_SPECIALS;
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_PROGV,
                                clMakeClosure(0,
                                              clTstProgv,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clPROGV, CONS_1334, clTST_PROGV, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_650, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_MISSING_PROGV_VALUES,
                                clMakeClosure(0,
                                              clTstMissingProgvValues,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clMISSING_PROGV_VALUES, CONS_1339,
                     clTST_MISSING_PROGV_VALUES, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_1346, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_EXTRA_PROGV_VALUES,
                                clMakeClosure(0,
                                              clTstExtraProgvValues,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clEXTRA_PROGV_VALUES, CONS_1350,
                     clTST_EXTRA_PROGV_VALUES, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_650, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_FLET,
                                clMakeClosure(0,
                                              clTstFlet,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clFLET, CONS_1356, clTST_FLET, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_123, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_LABELS,
                                clMakeClosure(0,
                                              clTstLabels,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clLABELS, CONS_1365, clTST_LABELS, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_1387, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_MACROLET,
                                clMakeClosure(0,
                                              clTstMacrolet,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clMACROLET, CONS_1388, clTST_MACROLET,
                     clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_123, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_SYMBOL_MACROLET,
                                clMakeClosure(0,
                                              clTstSymbolMacrolet,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clSYMBOL_MACROLET, CONS_1411,
                     clTST_SYMBOL_MACROLET, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_1430, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_TRUE_IF,
                                clMakeClosure(0,
                                              clTstTrueIf,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clTRUE_IF, CONS_1432, clTST_TRUE_IF,
                     clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_81, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_FALSE_IF,
                                clMakeClosure(0,
                                              clTstFalseIf,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clFALSE_IF, CONS_1438, clTST_FALSE_IF,
                     clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_88, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_UNUSED_MISSING_CONSEQUENT,
                                clMakeClosure(0,
                                              clTstUnusedMissingConsequent,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clUNUSED_MISSING_CONSEQUENT, CONS_1441,
                     clTST_UNUSED_MISSING_CONSEQUENT, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_81, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_USED_MISSING_CONSEQUENT,
                                clMakeClosure(0,
                                              clTstUsedMissingConsequent,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clUSED_MISSING_CONSEQUENT, CONS_1443,
                     clTST_USED_MISSING_CONSEQUENT, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_147, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_WHEN,
                                clMakeClosure(0,
                                              clTstWhen,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clWHEN, CONS_1445, clTST_WHEN, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_1498, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_UNLESS,
                                clMakeClosure(0,
                                              clTstUnless,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clUNLESS, CONS_1512, clTST_UNLESS, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_1530, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_EMPTY_COND,
                                clMakeClosure(0,
                                              clTstEmptyCond,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clEMPTY_COND, CONS_1534, clTST_EMPTY_COND,
                     clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_147, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_EMPTY_COND_CLAUSE,
                                clMakeClosure(0,
                                              clTstEmptyCondClause,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clEMPTY_COND_CLAUSE, CONS_1535,
                     clTST_EMPTY_COND_CLAUSE, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_11, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_EMPTY_COND_CLAUSE_VALUES,
                                clMakeClosure(0,
                                              clTstEmptyCondClauseValues,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clEMPTY_COND_CLAUSE_VALUES, CONS_1537,
                     clTST_EMPTY_COND_CLAUSE_VALUES, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_81, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_COND_VALUES,
                                clMakeClosure(0,
                                              clTstCondValues,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clCOND_VALUES, CONS_1540, clTST_COND_VALUES,
                     clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_1557, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_COND_NORMAL,
                                clMakeClosure(0,
                                              clTstCondNormal,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clCOND_NORMAL, CONS_1558, clTST_COND_NORMAL,
                     clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_202, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_COND_NONE,
                                clMakeClosure(0,
                                              clTstCondNone,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clCOND_NONE, CONS_1580, clTST_COND_NONE,
                     clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_147, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_EMPTY_CASE,
                                clMakeClosure(0,
                                              clTstEmptyCase,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clEMPTY_CASE, CONS_1589, clTST_EMPTY_CASE,
                     clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_147, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_EMPTY_CASE_CLAUSE,
                                clMakeClosure(0,
                                              clTstEmptyCaseClause,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clEMPTY_CASE_CLAUSE, CONS_1590,
                     clTST_EMPTY_CASE_CLAUSE, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_147, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_CASE_NORMAL,
                                clMakeClosure(0,
                                              clTstCaseNormal,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clCASE_NORMAL, CONS_1593, clTST_CASE_NORMAL,
                     clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_1610, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_CASE_T,
                                clMakeClosure(0,
                                              clTstCaseT,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clCASE_T, CONS_1612, clTST_CASE_T, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_81, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_CASE_OTHERWISE,
                                clMakeClosure(0,
                                              clTstCaseOtherwise,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clCASE_OTHERWISE, CONS_1621,
                     clTST_CASE_OTHERWISE, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_81, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  clSetSymbolFunctionValue(clTYPECASE_TEST,
                           clMakeClosure(0,
                                         clTypecaseTest,
                                         clNULL_HOOK));
  (void) clTYPECASE_TEST;
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_TYPECASE_NIL,
                                clMakeClosure(0,
                                              clTstTypecaseNil,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clTYPECASE_NIL, CONS_1632,
                     clTST_TYPECASE_NIL, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_1633, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_TYPECASE_LIST,
                                clMakeClosure(0,
                                              clTstTypecaseList,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clTYPECASE_LIST, CONS_1634,
                     clTST_TYPECASE_LIST, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_1638, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_TYPECASE_FLOAT,
                                clMakeClosure(0,
                                              clTstTypecaseFloat,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clTYPECASE_FLOAT, CONS_1639,
                     clTST_TYPECASE_FLOAT, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_1641, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_TYPECASE_INTEGER,
                                clMakeClosure(0,
                                              clTstTypecaseInteger,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clTYPECASE_INTEGER, CONS_1642,
                     clTST_TYPECASE_INTEGER, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_1643, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_TYPECASE_SYMBOL,
                                clMakeClosure(0,
                                              clTstTypecaseSymbol,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clTYPECASE_SYMBOL, CONS_1644,
                     clTST_TYPECASE_SYMBOL, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_1643, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_EMPTY_BLOCK,
                                clMakeClosure(0,
                                              clTstEmptyBlock,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clEMPTY_BLOCK, CONS_1648, clTST_EMPTY_BLOCK,
                     clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_147, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_NORMALLY_EXITED_BLOCK,
                                clMakeClosure(0,
                                              clTstNormallyExitedBlock,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clNORMALLY_EXITED_BLOCK, CONS_1649,
                     clTST_NORMALLY_EXITED_BLOCK, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_650, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_LOCAL_BLOCK,
                                clMakeClosure(0,
                                              clTstLocalBlock,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clLOCAL_BLOCK, CONS_1661, clTST_LOCAL_BLOCK,
                     clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_1678, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_BLOCK_AS_RETURN,
                                clMakeClosure(0,
                                              clTstBlockAsReturn,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clBLOCK_AS_RETURN, CONS_1680,
                     clTST_BLOCK_AS_RETURN, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_293, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_NESTED_INNER_LOCAL_BLOCK,
                                clMakeClosure(0,
                                              clTstNestedInnerLocalBlock,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clNESTED_INNER_LOCAL_BLOCK, CONS_1689,
                     clTST_NESTED_INNER_LOCAL_BLOCK, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_1697, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_NESTED_OUTER_LOCAL_BLOCK,
                                clMakeClosure(0,
                                              clTstNestedOuterLocalBlock,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clNESTED_OUTER_LOCAL_BLOCK, CONS_1699,
                     clTST_NESTED_OUTER_LOCAL_BLOCK, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_1678, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_NONLOCAL_BLOCK,
                                clMakeClosure(0,
                                              clTstNonlocalBlock,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clNONLOCAL_BLOCK, CONS_1709,
                     clTST_NONLOCAL_BLOCK, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_1678, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_NESTED_INNER_NONLOCAL_BLOCK,
                                clMakeClosure(0,
                                              clTstNestedInnerNonlocalBlock,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clNESTED_INNER_NONLOCAL_BLOCK, CONS_1729,
                     clTST_NESTED_INNER_NONLOCAL_BLOCK, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_1697, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_NESTED_OUTER_NONLOCAL_BLOCK,
                                clMakeClosure(0,
                                              clTstNestedOuterNonlocalBlock,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clNESTED_OUTER_NONLOCAL_BLOCK, CONS_1737,
                     clTST_NESTED_OUTER_NONLOCAL_BLOCK, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_1678, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_NESTED_OUTER_DOUBLE_NONLOCAL_BLOCK,
                                clMakeClosure(0,
                                              clTstNestedOuterDoubleNonlocalBlock,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clNESTED_OUTER_DOUBLE_NONLOCAL_BLOCK,
                     CONS_1747,
                     clTST_NESTED_OUTER_DOUBLE_NONLOCAL_BLOCK,
                     clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_1678, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  clSetSymbolFunctionValue(clTROUBLE,
                           clMakeClosure(0, clTrouble, clNULL_HOOK));
  (void) clTROUBLE;
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_BLOCK_LABELS_NOT_DYNAMIC,
                                clMakeClosure(0,
                                              clTstBlockLabelsNotDynamic,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clBLOCK_LABELS_NOT_DYNAMIC, CONS_1770,
                     clTST_BLOCK_LABELS_NOT_DYNAMIC, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_1793, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_BLOCK_BREAKS_UP_CATCHERS,
                                clMakeClosure(0,
                                              clTstBlockBreaksUpCatchers,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clBLOCK_BREAKS_UP_CATCHERS, CONS_1795,
                     clTST_BLOCK_BREAKS_UP_CATCHERS, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_293, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_BLOCK_BREAKS_UP_CATCHERS2,
                                clMakeClosure(0,
                                              clTstBlockBreaksUpCatchers2,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clBLOCK_BREAKS_UP_CATCHERS2, CONS_1802,
                     clTST_BLOCK_BREAKS_UP_CATCHERS2, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_11, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_RETURN_FROM_THROW,
                                clMakeClosure(0,
                                              clTstReturnFromThrow,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clRETURN_FROM_THROW, CONS_1816,
                     clTST_RETURN_FROM_THROW, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_1405, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_RETURN_FROM_THROW_MVC,
                                clMakeClosure(0,
                                              clTstReturnFromThrowMvc,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clRETURN_FROM_THROW_MVC, CONS_1836,
                     clTST_RETURN_FROM_THROW_MVC, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_658, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_NONLOCAL_RETURN_FROM_THROW_MVC,
                                clMakeClosure(0,
                                              clTstNonlocalReturnFromThrowMvc,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clNONLOCAL_RETURN_FROM_THROW_MVC, CONS_1841,
                     clTST_NONLOCAL_RETURN_FROM_THROW_MVC, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_658, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_RETURN_FROM_MVC,
                                clMakeClosure(0,
                                              clTstReturnFromMvc,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clRETURN_FROM_MVC, CONS_1873,
                     clTST_RETURN_FROM_MVC, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_1405, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_RETURN_FROM_MVC_MVC,
                                clMakeClosure(0,
                                              clTstReturnFromMvcMvc,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clRETURN_FROM_MVC_MVC, CONS_1885,
                     clTST_RETURN_FROM_MVC_MVC, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_658, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_RETURN_FROM_MVC_MVP,
                                clMakeClosure(0,
                                              clTstReturnFromMvcMvp,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clRETURN_FROM_MVC_MVP, CONS_1889,
                     clTST_RETURN_FROM_MVC_MVP, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_658, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_RETURN_FROM_MVC_MVP_CAPTURED,
                                clMakeClosure(0,
                                              clTstReturnFromMvcMvpCaptured,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clRETURN_FROM_MVC_MVP_CAPTURED, CONS_1900,
                     clTST_RETURN_FROM_MVC_MVP_CAPTURED, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_658, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_RETURN_FROM_MVC_CAPTURED_MVP,
                                clMakeClosure(0,
                                              clTstReturnFromMvcCapturedMvp,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clRETURN_FROM_MVC_CAPTURED_MVP, CONS_1925,
                     clTST_RETURN_FROM_MVC_CAPTURED_MVP, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_658, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_RETURN_FROM_MVC_EXIT,
                                clMakeClosure(0,
                                              clTstReturnFromMvcExit,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clRETURN_FROM_MVC_EXIT, CONS_1940,
                     clTST_RETURN_FROM_MVC_EXIT, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_658, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }
  { clObject L_0;
    { clObject L_0__R1;
      (clSetSymbolFunctionValue(clTST_RETURN,
                                clMakeClosure(0,
                                              clTstReturn,
                                              clNULL_HOOK)),
       clSetq(L_0__R1,
              clList(clT, clRETURN, CONS_1963, clTST_RETURN, clEOA)));
      clSetq(L_0, clNconc(L_0__R1, CONS_1973, clEOA)); }
    clFuncallFunction(clFdefinition(etADD_ENTRY, clEOA), L_0, clEOA); }

  clUnwind(4); }
